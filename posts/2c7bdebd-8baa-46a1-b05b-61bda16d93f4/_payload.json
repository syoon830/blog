[{"data":1,"prerenderedAt":398},["Reactive",2],{"content-query-wMhpGZlBPp":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":7,"tags":9,"date":11,"body":12,"_type":393,"_id":394,"_source":395,"_file":396,"_extension":397},"/posts/2c7bdebd-8baa-46a1-b05b-61bda16d93f4","posts",false,"","자바스크립트 - 12. let, const 키워드와 블록 레벨 스코프",[10],"javascript","2024-02-19T00:00:00.000Z",{"type":13,"children":14,"toc":379},"root",[15,24,31,41,53,59,67,76,85,91,100,106,112,121,127,136,141,170,179,185,219,228,234,255,264,270,276,285,291,300,306,315,321,342,351,363,367,375],{"type":16,"tag":17,"props":18,"children":20},"element","h1",{"id":19},"var-키워드의-문제점",[21],{"type":22,"value":23},"text","var 키워드의 문제점",{"type":16,"tag":25,"props":26,"children":28},"h2",{"id":27},"_1-변수-중복-선언-허용",[29],{"type":22,"value":30},"1. 변수 중복 선언 허용",{"type":16,"tag":32,"props":33,"children":34},"ul",{},[35],{"type":16,"tag":36,"props":37,"children":38},"li",{},[39],{"type":22,"value":40},"이미 선언된 변수의 값이 변경되는 부작용 발생",{"type":16,"tag":42,"props":43,"children":47},"pre",{"className":44,"code":46,"language":10,"meta":7},[45],"language-javascript","var x = 1;\nvar y = 1;\n\n// var 키워드로 선언된 변수는 같은 스코프 내에서 중복 선언을 허용한다.\n// 초기화문이 있는 변수 선언문은 자바스크립트 엔진에 의해 var 키워드가 없는 것처럼 동작한다.\nvar x = 100;\n// 초기화가 없는 변수 선언문은 무시된다.\nvar y;\n\nconsole.log(x); // 100\nconsole.log(y); // 1\n",[48],{"type":16,"tag":49,"props":50,"children":51},"code",{"__ignoreMap":7},[52],{"type":22,"value":46},{"type":16,"tag":25,"props":54,"children":56},{"id":55},"_2-함수-레벨-스코프",[57],{"type":22,"value":58},"2. 함수 레벨 스코프",{"type":16,"tag":32,"props":60,"children":61},{},[62],{"type":16,"tag":36,"props":63,"children":64},{},[65],{"type":22,"value":66},"오로지 함수의 코드 블록만을 지역 스코프로 인정한다.",{"type":16,"tag":42,"props":68,"children":71},{"className":69,"code":70,"language":10,"meta":7},[45],"var x = 1;\n\nif (true) {\n    var x = 10;\n}\nconsole.log(x); // 10\n",[72],{"type":16,"tag":49,"props":73,"children":74},{"__ignoreMap":7},[75],{"type":22,"value":70},{"type":16,"tag":42,"props":77,"children":80},{"className":78,"code":79,"language":10,"meta":7},[45],"var i = 10;\n\nfor (var i = 0; i \u003C 5; i++) {\n    console.log(i); // 0 1 2 3 4 5\n}\nconsole.log(i); // 5\n",[81],{"type":16,"tag":49,"props":82,"children":83},{"__ignoreMap":7},[84],{"type":22,"value":79},{"type":16,"tag":25,"props":86,"children":88},{"id":87},"_3-변수-호이스팅",[89],{"type":22,"value":90},"3. 변수 호이스팅",{"type":16,"tag":42,"props":92,"children":95},{"className":93,"code":94,"language":10,"meta":7},[45],"console.log(foo);\n\nfoo = 123;\n\nconsole.log(foo);\n\nvar foo;\n",[96],{"type":16,"tag":49,"props":97,"children":98},{"__ignoreMap":7},[99],{"type":22,"value":94},{"type":16,"tag":17,"props":101,"children":103},{"id":102},"let-키워드",[104],{"type":22,"value":105},"let 키워드",{"type":16,"tag":25,"props":107,"children":109},{"id":108},"_1-변수-중복-선언-금지",[110],{"type":22,"value":111},"1. 변수 중복 선언 금지",{"type":16,"tag":42,"props":113,"children":116},{"className":114,"code":115,"language":10,"meta":7},[45],"var foo = 123;\nvar foo = 456;\n\nlet bar = 123;\nlet bar = 123; // SyntaxError\n",[117],{"type":16,"tag":49,"props":118,"children":119},{"__ignoreMap":7},[120],{"type":22,"value":115},{"type":16,"tag":25,"props":122,"children":124},{"id":123},"_2-블록-레벨-스코프",[125],{"type":22,"value":126},"2. 블록 레벨 스코프",{"type":16,"tag":42,"props":128,"children":131},{"className":129,"code":130,"language":10,"meta":7},[45],"let foo = 1;\n\n{\n    let foo = 2;\n    let bar = 3;\n}\nconsole.log(foo); // 1\nconsole.log(bar); // ReferenceError\n",[132],{"type":16,"tag":49,"props":133,"children":134},{"__ignoreMap":7},[135],{"type":22,"value":130},{"type":16,"tag":25,"props":137,"children":139},{"id":138},"_3-변수-호이스팅-1",[140],{"type":22,"value":90},{"type":16,"tag":32,"props":142,"children":143},{},[144,149],{"type":16,"tag":36,"props":145,"children":146},{},[147],{"type":22,"value":148},"var 키워드는 런타임 이전에 선언 단계와 초기화 단계가 한번에 진행됨",{"type":16,"tag":36,"props":150,"children":151},{},[152,154],{"type":22,"value":153},"let 키워드는 런타임 이전에 선언 단계와 초기화 단계가 분리되어 진행\n",{"type":16,"tag":32,"props":155,"children":156},{},[157],{"type":16,"tag":36,"props":158,"children":159},{},[160,162,168],{"type":22,"value":161},"let 키워드로 선언한 변수는 스코프의 시작 지점부터 초기화 단계 시작 지점(변수 선언문)까지 변수를 참조할 수 없다. ",{"type":16,"tag":163,"props":164,"children":165},"strong",{},[166],{"type":22,"value":167},"스코프의 시작 지점부터 초기화 시작 시작 지점",{"type":22,"value":169},"까지 변수를 참조할 수 없는 구간을 일시적 사각지대(TDZ)라고 부른다.",{"type":16,"tag":42,"props":171,"children":174},{"className":172,"code":173,"language":10,"meta":7},[45],"console.log(foo); // ReferenceError\nlet foo;\n",[175],{"type":16,"tag":49,"props":176,"children":177},{"__ignoreMap":7},[178],{"type":22,"value":173},{"type":16,"tag":180,"props":181,"children":182},"p",{},[183],{"type":22,"value":184},"\\n",{"type":16,"tag":32,"props":186,"children":187},{},[188,193,198],{"type":16,"tag":36,"props":189,"children":190},{},[191],{"type":22,"value":192},"let 키워드는 호이스팅이 발생하지 않는 것처럼 보인다. 하지만 그렇지 않다. 아래 코드를 보면 호이스팅이 발생하지 않는다면 1이 출력 되어야 하는데 참조 에러가 발생한다.",{"type":16,"tag":36,"props":194,"children":195},{},[196],{"type":22,"value":197},"자바스크립트는 모든 선언을 호이스팅한다. (단, let, const class를 사용한 선언문은 호이스팅이 발생하지 않는 것처럼 동작한다.)",{"type":16,"tag":36,"props":199,"children":200},{},[201,203,209,211,217],{"type":22,"value":202},"간단히 말해서, **",{"type":16,"tag":49,"props":204,"children":206},{"className":205},[],[207],{"type":22,"value":208},"let",{"type":22,"value":210},"**과 **",{"type":16,"tag":49,"props":212,"children":214},{"className":213},[],[215],{"type":22,"value":216},"const",{"type":22,"value":218},"**는 선언된 블록 스코프 내에서 선언 지점 이전에는 \"존재하지 않는 것\"처럼 취급됩니다. 이 구간을 TDZ라고 합니다.",{"type":16,"tag":42,"props":220,"children":223},{"className":221,"code":222,"language":10,"meta":7},[45],"let foo = 1;\n{\n    console.log(foo); // TDZ\n    let foo = 2; // 초기화 시작 지점\n}\n",[224],{"type":16,"tag":49,"props":225,"children":226},{"__ignoreMap":7},[227],{"type":22,"value":222},{"type":16,"tag":25,"props":229,"children":231},{"id":230},"_4-전역-객체와-let",[232],{"type":22,"value":233},"4. 전역 객체와 let",{"type":16,"tag":32,"props":235,"children":236},{},[237,242],{"type":16,"tag":36,"props":238,"children":239},{},[240],{"type":22,"value":241},"전역으로 선언한 var는 window 객체에 프로퍼티가 된다.",{"type":16,"tag":36,"props":243,"children":244},{},[245,247],{"type":22,"value":246},"let 키워드로 선언한 전연 변수는 window 객체에 프로퍼티가 아니다.\n",{"type":16,"tag":32,"props":248,"children":249},{},[250],{"type":16,"tag":36,"props":251,"children":252},{},[253],{"type":22,"value":254},"let 전역 변수는 보이지 않는 개념적인 블록내에 존재한다.",{"type":16,"tag":42,"props":256,"children":259},{"className":257,"code":258,"language":10,"meta":7},[45],"var x = 1;\ny = 2;\n\nfunction foo(){}\n\nconsole.log(window.x);\nconsole.log(window.y);\nconsole.log(window.foo);\n\n-------\n\nlet x = 1;\nconsole.log(window.x); // undefined\n",[260],{"type":16,"tag":49,"props":261,"children":262},{"__ignoreMap":7},[263],{"type":22,"value":258},{"type":16,"tag":17,"props":265,"children":267},{"id":266},"const-키워드",[268],{"type":22,"value":269},"const 키워드",{"type":16,"tag":25,"props":271,"children":273},{"id":272},"_1-선언과-초기화",[274],{"type":22,"value":275},"1. 선언과 초기화",{"type":16,"tag":42,"props":277,"children":280},{"className":278,"code":279,"language":10,"meta":7},[45],"const foo = 1;\n\nconst foo; // SyntaxError\n",[281],{"type":16,"tag":49,"props":282,"children":283},{"__ignoreMap":7},[284],{"type":22,"value":279},{"type":16,"tag":25,"props":286,"children":288},{"id":287},"_2-재할당-금지",[289],{"type":22,"value":290},"2. 재할당 금지",{"type":16,"tag":42,"props":292,"children":295},{"className":293,"code":294,"language":10,"meta":7},[45],"const foo = 1;\nfoo = 2; // TypeError\n",[296],{"type":16,"tag":49,"props":297,"children":298},{"__ignoreMap":7},[299],{"type":22,"value":294},{"type":16,"tag":25,"props":301,"children":303},{"id":302},"_3-상수",[304],{"type":22,"value":305},"3. 상수",{"type":16,"tag":42,"props":307,"children":310},{"className":308,"code":309,"language":10,"meta":7},[45],"const TAX_RATE = 0.1;\n\nlet preTaxPrice = 100;\n\nlet afterTaxPrice = preTaxPrice + (preTaxPrice * TAX_RATE);\n",[311],{"type":16,"tag":49,"props":312,"children":313},{"__ignoreMap":7},[314],{"type":22,"value":309},{"type":16,"tag":25,"props":316,"children":318},{"id":317},"_4-const-키워드와-객체",[319],{"type":22,"value":320},"4. const 키워드와 객체",{"type":16,"tag":32,"props":322,"children":323},{},[324],{"type":16,"tag":36,"props":325,"children":326},{},[327,329],{"type":22,"value":328},"const 키워드로 선언된 변수에 원시 값을 할당한 경우 값을 변경할 수 없다. 하지만 객체를 할당한 경우 값을 변경할 수 있다.\n",{"type":16,"tag":32,"props":330,"children":331},{},[332,337],{"type":16,"tag":36,"props":333,"children":334},{},[335],{"type":22,"value":336},"그 이유는 원시 값은 변경 불가능한 값이지만",{"type":16,"tag":36,"props":338,"children":339},{},[340],{"type":22,"value":341},"객체는 변경 가능한 값이기 때문에 재할당 없이 직접 변경이 가능하다.",{"type":16,"tag":42,"props":343,"children":346},{"className":344,"code":345,"language":10,"meta":7},[45],"const person = {\n    name: 'Lee'\n};\n\nperson.name = 'kim';\n\nconsole.log(person.name); // kim\n",[347],{"type":16,"tag":49,"props":348,"children":349},{"__ignoreMap":7},[350],{"type":22,"value":345},{"type":16,"tag":180,"props":352,"children":353},{},[354,356,361],{"type":22,"value":355},"const는 재할당을 금지할 뿐 “",{"type":16,"tag":163,"props":357,"children":358},{},[359],{"type":22,"value":360},"불변",{"type":22,"value":362},"”을 의미하지는 않는다.",{"type":16,"tag":180,"props":364,"children":365},{},[366],{"type":22,"value":184},{"type":16,"tag":180,"props":368,"children":369},{},[370],{"type":16,"tag":163,"props":371,"children":372},{},[373],{"type":22,"value":374},"결론: ES6를 사용한다면 var를 쓸 이유는 없다.",{"type":16,"tag":180,"props":376,"children":377},{},[378],{"type":22,"value":184},{"title":7,"searchDepth":380,"depth":380,"links":381},2,[382,383,384,385,386,387,388,389,390,391,392],{"id":27,"depth":380,"text":30},{"id":55,"depth":380,"text":58},{"id":87,"depth":380,"text":90},{"id":108,"depth":380,"text":111},{"id":123,"depth":380,"text":126},{"id":138,"depth":380,"text":90},{"id":230,"depth":380,"text":233},{"id":272,"depth":380,"text":275},{"id":287,"depth":380,"text":290},{"id":302,"depth":380,"text":305},{"id":317,"depth":380,"text":320},"markdown","content:posts:2c7bdebd-8baa-46a1-b05b-61bda16d93f4.md","content","posts/2c7bdebd-8baa-46a1-b05b-61bda16d93f4.md","md",1710325141887]