[{"data":1,"prerenderedAt":396},["Reactive",2],{"content-query-wMhpGZlBPp":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":7,"tags":9,"date":11,"body":12,"_type":391,"_id":392,"_source":393,"_file":394,"_extension":395},"/posts/2c7bdebd-8baa-46a1-b05b-61bda16d93f4","posts",false,"","자바스크립트 - 12. let, const 키워드와 블록 레벨 스코프",[10],"javascript","2024-02-19T00:00:00.000Z",{"type":13,"children":14,"toc":376},"root",[15,24,31,41,53,59,67,76,85,91,100,106,112,121,127,136,141,162,171,177,195,204,210,231,240,246,252,261,267,276,282,291,297,318,327,340,344,352,356,360,365],{"type":16,"tag":17,"props":18,"children":20},"element","h1",{"id":19},"var-키워드의-문제점",[21],{"type":22,"value":23},"text","var 키워드의 문제점",{"type":16,"tag":25,"props":26,"children":28},"h2",{"id":27},"_1-변수-중복-선언-허용",[29],{"type":22,"value":30},"1. 변수 중복 선언 허용",{"type":16,"tag":32,"props":33,"children":34},"ul",{},[35],{"type":16,"tag":36,"props":37,"children":38},"li",{},[39],{"type":22,"value":40},"이미 선언된 변수의 값이 변경되는 부작용 발생",{"type":16,"tag":42,"props":43,"children":47},"pre",{"className":44,"code":46,"language":10,"meta":7},[45],"language-javascript","var x = 1;\nvar y = 1;\n\n// var 키워드로 선언된 변수는 같은 스코프 내에서 중복 선언을 허용한다.\n// 초기화문이 있는 변수 선언문은 자바스크립트 엔진에 의해 var 키워드가 없는 것처럼 동작한다.\nvar x = 100;\n// 초기화가 없는 변수 선언문은 무시된다.\nvar y;\n\nconsole.log(x); // 100\nconsole.log(y); // 1\n",[48],{"type":16,"tag":49,"props":50,"children":51},"code",{"__ignoreMap":7},[52],{"type":22,"value":46},{"type":16,"tag":25,"props":54,"children":56},{"id":55},"_2-함수-레벨-스코프",[57],{"type":22,"value":58},"2. 함수 레벨 스코프",{"type":16,"tag":32,"props":60,"children":61},{},[62],{"type":16,"tag":36,"props":63,"children":64},{},[65],{"type":22,"value":66},"오로지 함수의 코드 블록만을 지역 스코프로 인정한다.",{"type":16,"tag":42,"props":68,"children":71},{"className":69,"code":70,"language":10,"meta":7},[45],"var x = 1;\n\nif (true) {\n    var x = 10;\n}\nconsole.log(x); // 10\n",[72],{"type":16,"tag":49,"props":73,"children":74},{"__ignoreMap":7},[75],{"type":22,"value":70},{"type":16,"tag":42,"props":77,"children":80},{"className":78,"code":79,"language":10,"meta":7},[45],"var i = 10;\n\nfor (var i = 0; i \u003C 5; i++) {\n    console.log(i); // 0 1 2 3 4 5\n}\nconsole.log(i); // 5\n",[81],{"type":16,"tag":49,"props":82,"children":83},{"__ignoreMap":7},[84],{"type":22,"value":79},{"type":16,"tag":25,"props":86,"children":88},{"id":87},"_3-변수-호이스팅",[89],{"type":22,"value":90},"3. 변수 호이스팅",{"type":16,"tag":42,"props":92,"children":95},{"className":93,"code":94,"language":10,"meta":7},[45],"console.log(foo);\n\nfoo = 123;\n\nconsole.log(foo);\n\nvar foo;\n",[96],{"type":16,"tag":49,"props":97,"children":98},{"__ignoreMap":7},[99],{"type":22,"value":94},{"type":16,"tag":17,"props":101,"children":103},{"id":102},"let-키워드",[104],{"type":22,"value":105},"let 키워드",{"type":16,"tag":25,"props":107,"children":109},{"id":108},"_1-변수-중복-선언-금지",[110],{"type":22,"value":111},"1. 변수 중복 선언 금지",{"type":16,"tag":42,"props":113,"children":116},{"className":114,"code":115,"language":10,"meta":7},[45],"var foo = 123;\nvar foo = 456;\n\nlet bar = 123;\nlet bar = 123; // SyntaxError\n",[117],{"type":16,"tag":49,"props":118,"children":119},{"__ignoreMap":7},[120],{"type":22,"value":115},{"type":16,"tag":25,"props":122,"children":124},{"id":123},"_2-블록-레벨-스코프",[125],{"type":22,"value":126},"2. 블록 레벨 스코프",{"type":16,"tag":42,"props":128,"children":131},{"className":129,"code":130,"language":10,"meta":7},[45],"let foo = 1;\n\n{\n    let foo = 2;\n    let bar = 3;\n}\nconsole.log(foo); // 1\nconsole.log(bar); // ReferenceError\n",[132],{"type":16,"tag":49,"props":133,"children":134},{"__ignoreMap":7},[135],{"type":22,"value":130},{"type":16,"tag":25,"props":137,"children":139},{"id":138},"_3-변수-호이스팅-1",[140],{"type":22,"value":90},{"type":16,"tag":32,"props":142,"children":143},{},[144,149],{"type":16,"tag":36,"props":145,"children":146},{},[147],{"type":22,"value":148},"var 키워드는 런타임 이전에 선언 단계와 초기화 단계가 한번에 진행됨",{"type":16,"tag":36,"props":150,"children":151},{},[152,154],{"type":22,"value":153},"let 키워드는 런타임 이전에 선언 단계와 초기화 단계가 분리되어 진행\n",{"type":16,"tag":32,"props":155,"children":156},{},[157],{"type":16,"tag":36,"props":158,"children":159},{},[160],{"type":22,"value":161},"let 키워드로 선언한 변수는 스코프의 시작 지점부터 초기화 단계 시작 지점(변수 선언문)까지 변수를 참조할 수 없다. 스코프의 시작 지점부터 초기화 시작 시작 지점까지 변수를 참조할 수 없는 구간을 일시적 사각지대(TDZ)라고 부른다.",{"type":16,"tag":42,"props":163,"children":166},{"className":164,"code":165,"language":10,"meta":7},[45],"console.log(foo); // ReferenceError\nlet foo;\n",[167],{"type":16,"tag":49,"props":168,"children":169},{"__ignoreMap":7},[170],{"type":22,"value":165},{"type":16,"tag":172,"props":173,"children":174},"p",{},[175],{"type":22,"value":176},"\\n",{"type":16,"tag":32,"props":178,"children":179},{},[180,185,190],{"type":16,"tag":36,"props":181,"children":182},{},[183],{"type":22,"value":184},"let 키워드는 호이스팅이 발생하지 않는 것처럼 보인다. 하지만 그렇지 않다. 아래 코드를 보면 호이스팅이 발생하지 않는다면 1이 출력 되어야 하는데 참조 에러가 발생한다.",{"type":16,"tag":36,"props":186,"children":187},{},[188],{"type":22,"value":189},"자바스크립트는 모든 선언을 호이스팅한다. (단, let, const class를 사용한 선언문은 호이스팅이 발생하지 않는 것처럼 동작한다.)",{"type":16,"tag":36,"props":191,"children":192},{},[193],{"type":22,"value":194},"간단히 말해서, let과 const는 선언된 블록 스코프 내에서 선언 지점 이전에는 \"존재하지 않는 것\"처럼 취급된다. 이 구간을 TDZ라고 한다.",{"type":16,"tag":42,"props":196,"children":199},{"className":197,"code":198,"language":10,"meta":7},[45],"let foo = 1;\n{\n    console.log(foo); // TDZ\n    let foo = 2; // 초기화 시작 지점\n}\n",[200],{"type":16,"tag":49,"props":201,"children":202},{"__ignoreMap":7},[203],{"type":22,"value":198},{"type":16,"tag":25,"props":205,"children":207},{"id":206},"_4-전역-객체와-let",[208],{"type":22,"value":209},"4. 전역 객체와 let",{"type":16,"tag":32,"props":211,"children":212},{},[213,218],{"type":16,"tag":36,"props":214,"children":215},{},[216],{"type":22,"value":217},"전역으로 선언한 var는 window 객체에 프로퍼티가 된다.",{"type":16,"tag":36,"props":219,"children":220},{},[221,223],{"type":22,"value":222},"let 키워드로 선언한 전연 변수는 window 객체에 프로퍼티가 아니다.\n",{"type":16,"tag":32,"props":224,"children":225},{},[226],{"type":16,"tag":36,"props":227,"children":228},{},[229],{"type":22,"value":230},"let 전역 변수는 보이지 않는 개념적인 블록내에 존재한다.",{"type":16,"tag":42,"props":232,"children":235},{"className":233,"code":234,"language":10,"meta":7},[45],"var x = 1;\ny = 2;\n\nfunction foo(){}\n\nconsole.log(window.x);\nconsole.log(window.y);\nconsole.log(window.foo);\n\n-------\n\nlet x = 1;\nconsole.log(window.x); // undefined\n",[236],{"type":16,"tag":49,"props":237,"children":238},{"__ignoreMap":7},[239],{"type":22,"value":234},{"type":16,"tag":17,"props":241,"children":243},{"id":242},"const-키워드",[244],{"type":22,"value":245},"const 키워드",{"type":16,"tag":25,"props":247,"children":249},{"id":248},"_1-선언과-초기화",[250],{"type":22,"value":251},"1. 선언과 초기화",{"type":16,"tag":42,"props":253,"children":256},{"className":254,"code":255,"language":10,"meta":7},[45],"const foo = 1;\n\nconst foo; // SyntaxError\n",[257],{"type":16,"tag":49,"props":258,"children":259},{"__ignoreMap":7},[260],{"type":22,"value":255},{"type":16,"tag":25,"props":262,"children":264},{"id":263},"_2-재할당-금지",[265],{"type":22,"value":266},"2. 재할당 금지",{"type":16,"tag":42,"props":268,"children":271},{"className":269,"code":270,"language":10,"meta":7},[45],"const foo = 1;\nfoo = 2; // TypeError\n",[272],{"type":16,"tag":49,"props":273,"children":274},{"__ignoreMap":7},[275],{"type":22,"value":270},{"type":16,"tag":25,"props":277,"children":279},{"id":278},"_3-상수",[280],{"type":22,"value":281},"3. 상수",{"type":16,"tag":42,"props":283,"children":286},{"className":284,"code":285,"language":10,"meta":7},[45],"const TAX_RATE = 0.1;\n\nlet preTaxPrice = 100;\n\nlet afterTaxPrice = preTaxPrice + (preTaxPrice * TAX_RATE);\n",[287],{"type":16,"tag":49,"props":288,"children":289},{"__ignoreMap":7},[290],{"type":22,"value":285},{"type":16,"tag":25,"props":292,"children":294},{"id":293},"_4-const-키워드와-객체",[295],{"type":22,"value":296},"4. const 키워드와 객체",{"type":16,"tag":32,"props":298,"children":299},{},[300],{"type":16,"tag":36,"props":301,"children":302},{},[303,305],{"type":22,"value":304},"const 키워드로 선언된 변수에 원시 값을 할당한 경우 값을 변경할 수 없다. 하지만 객체를 할당한 경우 값을 변경할 수 있다.\n",{"type":16,"tag":32,"props":306,"children":307},{},[308,313],{"type":16,"tag":36,"props":309,"children":310},{},[311],{"type":22,"value":312},"그 이유는 원시 값은 변경 불가능한 값이지만",{"type":16,"tag":36,"props":314,"children":315},{},[316],{"type":22,"value":317},"객체는 변경 가능한 값이기 때문에 재할당 없이 직접 변경이 가능하다.",{"type":16,"tag":42,"props":319,"children":322},{"className":320,"code":321,"language":10,"meta":7},[45],"const person = {\n    name: 'Lee'\n};\n\nperson.name = 'kim';\n\nconsole.log(person.name); // kim\n",[323],{"type":16,"tag":49,"props":324,"children":325},{"__ignoreMap":7},[326],{"type":22,"value":321},{"type":16,"tag":172,"props":328,"children":329},{},[330,332,338],{"type":22,"value":331},"const는 재할당을 금지할 뿐 “",{"type":16,"tag":333,"props":334,"children":335},"strong",{},[336],{"type":22,"value":337},"불변",{"type":22,"value":339},"”을 의미하지는 않는다.",{"type":16,"tag":172,"props":341,"children":342},{},[343],{"type":22,"value":176},{"type":16,"tag":172,"props":345,"children":346},{},[347],{"type":16,"tag":333,"props":348,"children":349},{},[350],{"type":22,"value":351},"결론: ES6를 사용한다면 var를 쓸 이유는 없다.",{"type":16,"tag":172,"props":353,"children":354},{},[355],{"type":22,"value":176},{"type":16,"tag":357,"props":358,"children":359},"hr",{},[],{"type":16,"tag":25,"props":361,"children":363},{"id":362},"참고",[364],{"type":22,"value":362},{"type":16,"tag":32,"props":366,"children":367},{},[368],{"type":16,"tag":36,"props":369,"children":370},{},[371],{"type":16,"tag":333,"props":372,"children":373},{},[374],{"type":22,"value":375},"이웅모, 「모던 자바스크립트 Deep Dive」, 위키북스, 2020",{"title":7,"searchDepth":377,"depth":377,"links":378},2,[379,380,381,382,383,384,385,386,387,388,389,390],{"id":27,"depth":377,"text":30},{"id":55,"depth":377,"text":58},{"id":87,"depth":377,"text":90},{"id":108,"depth":377,"text":111},{"id":123,"depth":377,"text":126},{"id":138,"depth":377,"text":90},{"id":206,"depth":377,"text":209},{"id":248,"depth":377,"text":251},{"id":263,"depth":377,"text":266},{"id":278,"depth":377,"text":281},{"id":293,"depth":377,"text":296},{"id":362,"depth":377,"text":362},"markdown","content:posts:2c7bdebd-8baa-46a1-b05b-61bda16d93f4.md","content","posts/2c7bdebd-8baa-46a1-b05b-61bda16d93f4.md","md",1719041868614]