[{"data":1,"prerenderedAt":110},["Reactive",2],{"content-query-N1CVdJP8gx":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"tags":10,"date":12,"body":13,"_type":105,"_id":106,"_source":107,"_file":108,"_extension":109},"/posts/7516dc85-4ccc-4f99-afc1-22f8115737df","posts",false,"","Call, Apply, Bind","Call, Apply, Bind는 this와 관련이 있다. this를 특정 객체에 명시적으로 바인딩 시키는 메소드이다.",[11],"javascript","2024-01-15T00:00:00.000Z",{"type":14,"children":15,"toc":99},"root",[16,32,39,50,55,60,65,71,85,90],{"type":17,"tag":18,"props":19,"children":20},"element","p",{},[21,24,30],{"type":22,"value":23},"text","Call, Apply, Bind는 this와 관련이 있다. this를 특정 객체에 ",{"type":17,"tag":25,"props":26,"children":27},"code",{},[28],{"type":22,"value":29},"명시적으로 바인딩",{"type":22,"value":31}," 시키는 메소드이다.",{"type":17,"tag":33,"props":34,"children":36},"h3",{"id":35},"먼저-call-apply를-코드로-살펴-보자",[37],{"type":22,"value":38},"먼저 Call, Apply를 코드로 살펴 보자",{"type":17,"tag":40,"props":41,"children":45},"pre",{"className":42,"code":44,"language":11,"meta":7},[43],"language-javascript","const seungyoon = {\n  name: 'seungyoon',\n}\n\nfunction greeting(city, hobby) {\n  console.log(`Hello my name is ${this.name}, I live in ${city}. my hobby is ${hobby}.`);\n}\n\ngreeting('seoul', 'listening to music'); // Hello my name is , I live in seoul. my hobby is listening to music.\ngreeting.apply(seungyoon, ['seoul', 'listening to music']); // Hello my name is seungyoon, I live in seoul. my hobby is listening to music.\ngreeting.call(seungyoon, 'seoul', 'listening to music'); // Hello my name is seungyoon, I live in seoul. my hobby is listening to music\n\n",[46],{"type":17,"tag":25,"props":47,"children":48},{"__ignoreMap":7},[49],{"type":22,"value":44},{"type":17,"tag":18,"props":51,"children":52},{},[53],{"type":22,"value":54},"이렇게 this 특정 객체에 명시적으로 바인딩 시키고 싶을 때 call, apply를 사용하면 된다.",{"type":17,"tag":56,"props":57,"children":59},"img",{"src":58},"/blog/images/85274946-02a9-4d24-ba27-ae7344c2f09a.png",[],{"type":17,"tag":18,"props":61,"children":62},{},[63],{"type":22,"value":64},"(여기서 call과 apply는 기능은 같지만 넘겨받는 인자의 형식만 다르다. call과 다르게 apply는 인자를 배열 형태로 받는다.)",{"type":17,"tag":33,"props":66,"children":68},{"id":67},"나머지-bind-함수를-살펴보자",[69],{"type":22,"value":70},"나머지 bind 함수를 살펴보자.",{"type":17,"tag":18,"props":72,"children":73},{},[74,76,83],{"type":22,"value":75},"이 함수는 call apply와 ",{"type":17,"tag":77,"props":78,"children":80},"font",{"color":79},"yellow",[81],{"type":22,"value":82},"다르게",{"type":22,"value":84}," 함수를 즉시 실행하지 않는다.",{"type":17,"tag":18,"props":86,"children":87},{},[88],{"type":22,"value":89},"아래 코드와 같이 변수에 담아 호출 할 수가 있다.",{"type":17,"tag":40,"props":91,"children":94},{"className":92,"code":93,"language":11,"meta":7},[43],"const seungyoon = {\n  name: 'seungyoon',\n}\n\nfunction greeting(city, hobby) {\n  console.log(`Hello my name is ${this.name}, I live in ${city}. my hobby is ${hobby}.`);\n}\n\nconst seungyoonGreeting = greeting.bind(seungyoon);\nseungyoonGreeting('seuol', 'listening to music'); // Hello my name is seungyoon, I live in seuol. my hobby is listening to music.\n\n",[95],{"type":17,"tag":25,"props":96,"children":97},{"__ignoreMap":7},[98],{"type":22,"value":93},{"title":7,"searchDepth":100,"depth":100,"links":101},2,[102,104],{"id":35,"depth":103,"text":38},3,{"id":67,"depth":103,"text":70},"markdown","content:posts:7516dc85-4ccc-4f99-afc1-22f8115737df.md","content","posts/7516dc85-4ccc-4f99-afc1-22f8115737df.md","md",1718180471681]