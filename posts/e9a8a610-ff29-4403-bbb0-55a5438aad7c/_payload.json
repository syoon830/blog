[{"data":1,"prerenderedAt":217},["Reactive",2],{"content-query-u5oVEZXUq6":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"tags":10,"date":13,"body":14,"_type":212,"_id":213,"_source":214,"_file":215,"_extension":216},"/posts/e9a8a610-ff29-4403-bbb0-55a5438aad7c","posts",false,"","formData 전송 방법","axios를 $fetch로 변경하면서 로그인시 문제가 발생하였다.",[11,12],"axios","$fetch","2024-01-18T00:00:00.000Z",{"type":15,"children":16,"toc":201},"root",[17,24,29,34,47,52,57,61,66,75,79,84,91,106,115,129,134,143,147,152,156,179,184],{"type":18,"tag":19,"props":20,"children":21},"element","p",{},[22],{"type":23,"value":9},"text",{"type":18,"tag":19,"props":25,"children":26},{},[27],{"type":23,"value":28},"\\n",{"type":18,"tag":19,"props":30,"children":31},{},[32],{"type":23,"value":33},"기존에 axios를 사용할때는 아래와 같이 사용중이고",{"type":18,"tag":35,"props":36,"children":41},"pre",{"className":37,"code":39,"language":40,"meta":7},[38],"language-javascript","await axios.post(url, qs.stringfy(payload));\n","javascript",[42],{"type":18,"tag":43,"props":44,"children":45},"code",{"__ignoreMap":7},[46],{"type":23,"value":39},{"type":18,"tag":19,"props":48,"children":49},{},[50],{"type":23,"value":51},"전달된 형태를 보니 Form Data로 전송이 되고 있다.",{"type":18,"tag":53,"props":54,"children":56},"img",{"src":55},"/blog/images/bdb722cc-ffe4-4d33-be93-9df5a2011bcd.png",[],{"type":18,"tag":19,"props":58,"children":59},{},[60],{"type":23,"value":28},{"type":18,"tag":19,"props":62,"children":63},{},[64],{"type":23,"value":65},"$fetch는 아래와 같이 사용을 했는데",{"type":18,"tag":35,"props":67,"children":70},{"className":68,"code":69,"language":40,"meta":7},[38],"await apiFetch(url, {\n    method: 'POST',\n    body: qs.stringfy(payload)\n});\n",[71],{"type":18,"tag":43,"props":72,"children":73},{"__ignoreMap":7},[74],{"type":23,"value":69},{"type":18,"tag":53,"props":76,"children":78},{"src":77},"/blog/images/9979d55a-3a60-4c4c-b8d5-73405c82f425.png",[],{"type":18,"tag":19,"props":80,"children":81},{},[82],{"type":23,"value":83},"이렇게 전달이 돼서 로그인이 안되는것이다.",{"type":18,"tag":85,"props":86,"children":88},"h2",{"id":87},"_2가지-해결법",[89],{"type":23,"value":90},"2가지 해결법",{"type":18,"tag":92,"props":93,"children":95},"h3",{"id":94},"_1-header에-content-type-applicationx-www-form-urlencoded-넣어주기",[96,98,104],{"type":23,"value":97},"1. header에 ",{"type":18,"tag":43,"props":99,"children":101},{"className":100},[],[102],{"type":23,"value":103},"'Content-Type': 'application/x-www-form-urlencoded'",{"type":23,"value":105},"  넣어주기",{"type":18,"tag":35,"props":107,"children":110},{"className":108,"code":109,"language":40,"meta":7},[38],"$fetch(url, {\n    method: 'POST',\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        },\n    body: qs.stringfy(payload)\n})\n",[111],{"type":18,"tag":43,"props":112,"children":113},{"__ignoreMap":7},[114],{"type":23,"value":109},{"type":18,"tag":92,"props":116,"children":118},{"id":117},"_2-new-urlsearchparams-사용",[119,121,127],{"type":23,"value":120},"2. ",{"type":18,"tag":43,"props":122,"children":124},{"className":123},[],[125],{"type":23,"value":126},"new URLSearchParams",{"type":23,"value":128}," 사용",{"type":18,"tag":19,"props":130,"children":131},{},[132],{"type":23,"value":133},"원래는 new FormData 만들어서 일일히 append 해줘야하는데 위 함수로 간편하게 만들어준다.",{"type":18,"tag":35,"props":135,"children":138},{"className":136,"code":137,"language":40,"meta":7},[38],"$fetch(url, {\n    method: 'POST',\n    body: new URLSearchParams(qs.stringfy(payload))\n});\n",[139],{"type":18,"tag":43,"props":140,"children":141},{"__ignoreMap":7},[142],{"type":23,"value":137},{"type":18,"tag":19,"props":144,"children":145},{},[146],{"type":23,"value":28},{"type":18,"tag":19,"props":148,"children":149},{},[150],{"type":23,"value":151},"나는 그냥 1번으로 사용하였다.",{"type":18,"tag":19,"props":153,"children":154},{},[155],{"type":23,"value":28},{"type":18,"tag":157,"props":158,"children":159},"blockquote",{},[160],{"type":18,"tag":19,"props":161,"children":162},{},[163,165,170,172,177],{"type":23,"value":164},"Axios를 사용할 때 별도의 설정이 없으면, ",{"type":18,"tag":43,"props":166,"children":167},{},[168],{"type":23,"value":169},"qs.stringify",{"type":23,"value":171},"를 사용하여 변환된 데이터는 ",{"type":18,"tag":43,"props":173,"children":174},{},[175],{"type":23,"value":176},"application/x-www-form-urlencoded",{"type":23,"value":178}," 형식으로 전송된다.",{"type":18,"tag":92,"props":180,"children":182},{"id":181},"참고",[183],{"type":23,"value":181},{"type":18,"tag":185,"props":186,"children":187},"ul",{},[188],{"type":18,"tag":189,"props":190,"children":191},"li",{},[192],{"type":18,"tag":193,"props":194,"children":198},"a",{"href":195,"rel":196},"https://inpa.tistory.com/entry/JS-%F0%9F%93%9A-FormData-%EC%A0%95%EB%A6%AC-fetch-api",[197],"nofollow",[199],{"type":23,"value":200},"https://inpa.tistory.com/entry/JS-📚-FormData-정리-fetch-api",{"title":7,"searchDepth":202,"depth":202,"links":203},2,[204],{"id":87,"depth":202,"text":90,"children":205},[206,209,211],{"id":94,"depth":207,"text":208},3,"1. header에 'Content-Type': 'application/x-www-form-urlencoded'  넣어주기",{"id":117,"depth":207,"text":210},"2. new URLSearchParams 사용",{"id":181,"depth":207,"text":181},"markdown","content:posts:e9a8a610-ff29-4403-bbb0-55a5438aad7c.md","content","posts/e9a8a610-ff29-4403-bbb0-55a5438aad7c.md","md",1718180471509]