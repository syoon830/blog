[{"data":1,"prerenderedAt":206},["Reactive",2],{"content-query-xg3P473F54":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":7,"tags":9,"date":10,"body":11,"_type":201,"_id":202,"_source":203,"_file":204,"_extension":205},"/posts/83a003c8-da74-4115-9170-636c5de6e3fe","posts",false,"","테스트 5",[],"2023-10-17T00:00:00.000Z",{"type":12,"children":13,"toc":185},"root",[14,27,33,43,56,65,74,83,88,96,106,114,123,132,137,145,154,162,171,175,180],{"type":15,"tag":16,"props":17,"children":19},"element","h2",{"id":18},"_1-프로퍼티-축약-표현",[20],{"type":15,"tag":21,"props":22,"children":23},"strong",{},[24],{"type":25,"value":26},"text","1. 프로퍼티 축약 표현",{"type":15,"tag":28,"props":29,"children":30},"p",{},[31],{"type":25,"value":32},"ES6에서는 프로퍼티 값으로 변수를 사용하는 경우 변수 이름과 프로퍼티 키가 동일한 이름일 때 프로퍼티 키를 생략할 수 있다.",{"type":15,"tag":34,"props":35,"children":37},"h3",{"id":36},"es5",[38],{"type":15,"tag":21,"props":39,"children":40},{},[41],{"type":25,"value":42},"ES5",{"type":15,"tag":44,"props":45,"children":50},"pre",{"className":46,"code":48,"language":49,"meta":7},[47],"language-javascript","var x = 1, y = 2;\nvar obj = {\n  x: x,\n  y: y\n};\n\n","javascript",[51],{"type":15,"tag":52,"props":53,"children":54},"code",{"__ignoreMap":7},[55],{"type":25,"value":48},{"type":15,"tag":34,"props":57,"children":59},{"id":58},"es6",[60],{"type":15,"tag":21,"props":61,"children":62},{},[63],{"type":25,"value":64},"ES6",{"type":15,"tag":44,"props":66,"children":69},{"className":67,"code":68,"language":49,"meta":7},[47],"let x = 1, y = 2;\nconst obj = { x, y };\n",[70],{"type":15,"tag":52,"props":71,"children":72},{"__ignoreMap":7},[73],{"type":25,"value":68},{"type":15,"tag":16,"props":75,"children":77},{"id":76},"_2-계산된-프로퍼티-이름",[78],{"type":15,"tag":21,"props":79,"children":80},{},[81],{"type":25,"value":82},"2. 계산된 프로퍼티 이름",{"type":15,"tag":28,"props":84,"children":85},{},[86],{"type":25,"value":87},"ES6에서는 객체 리터널 내부에서도 계산된 프로퍼티 이름으로 프로퍼티 키를 동적 생성할 수 있다.",{"type":15,"tag":34,"props":89,"children":91},{"id":90},"es5-1",[92],{"type":15,"tag":21,"props":93,"children":94},{},[95],{"type":25,"value":42},{"type":15,"tag":44,"props":97,"children":101},{"className":98,"code":100,"language":25,"meta":7},[99],"language-text","var prefix = 'prop';\nvar i = 0;\n\nvar obj = {};\n\nobj[prefix + '-' + ++i] = i;\nobj[prefix + '-' + ++i] = i;\nobj[prefix + '-' + ++i] = i;\n\n",[102],{"type":15,"tag":52,"props":103,"children":104},{"__ignoreMap":7},[105],{"type":25,"value":100},{"type":15,"tag":34,"props":107,"children":108},{"id":58},[109],{"type":15,"tag":21,"props":110,"children":111},{},[112],{"type":25,"value":113},"// ES6",{"type":15,"tag":44,"props":115,"children":118},{"className":116,"code":117,"language":25,"meta":7},[99],"let prefix = 'prop';\nlet i = 0;\n\nconst obj = {\n  [`${prefix}-${++i}`]: i,\n  [`${prefix}-${++i}`]: i,\n  [`${prefix}-${++i}`]: i\n}\n\n",[119],{"type":15,"tag":52,"props":120,"children":121},{"__ignoreMap":7},[122],{"type":25,"value":117},{"type":15,"tag":16,"props":124,"children":126},{"id":125},"_3-메소드-축약-표현",[127],{"type":15,"tag":21,"props":128,"children":129},{},[130],{"type":25,"value":131},"3. 메소드 축약 표현",{"type":15,"tag":28,"props":133,"children":134},{},[135],{"type":25,"value":136},"ES6에서는 메서드를 정의할 때 function 키워드를 생략한 축약 표현을 사용할 수 있다.",{"type":15,"tag":34,"props":138,"children":140},{"id":139},"es5-2",[141],{"type":15,"tag":21,"props":142,"children":143},{},[144],{"type":25,"value":42},{"type":15,"tag":44,"props":146,"children":149},{"className":147,"code":148,"language":25,"meta":7},[99],"var obj = {\n  name: 'Seungyoon',\n  sayHi: function() {\n    console.log('Hi! ' + this.name);\n  }\n}\n\n",[150],{"type":15,"tag":52,"props":151,"children":152},{"__ignoreMap":7},[153],{"type":25,"value":148},{"type":15,"tag":34,"props":155,"children":157},{"id":156},"es6-1",[158],{"type":15,"tag":21,"props":159,"children":160},{},[161],{"type":25,"value":64},{"type":15,"tag":44,"props":163,"children":166},{"className":164,"code":165,"language":25,"meta":7},[99],"const obj = {\n    name: 'Seungyoon',\n    sayHi() {\n        console.log('Hi! ' + this.name);\n    }\n}\n\n",[167],{"type":15,"tag":52,"props":168,"children":169},{"__ignoreMap":7},[170],{"type":25,"value":165},{"type":15,"tag":172,"props":173,"children":174},"hr",{},[],{"type":15,"tag":28,"props":176,"children":177},{},[178],{"type":25,"value":179},"출처:",{"type":15,"tag":28,"props":181,"children":182},{},[183],{"type":25,"value":184},"이웅모, 『모던 자바스크립트 Deep Dive』, 위키북스(2020), p134-136",{"title":7,"searchDepth":186,"depth":186,"links":187},2,[188,193,197],{"id":18,"depth":186,"text":26,"children":189},[190,192],{"id":36,"depth":191,"text":42},3,{"id":58,"depth":191,"text":64},{"id":76,"depth":186,"text":82,"children":194},[195,196],{"id":90,"depth":191,"text":42},{"id":58,"depth":191,"text":113},{"id":125,"depth":186,"text":131,"children":198},[199,200],{"id":139,"depth":191,"text":42},{"id":156,"depth":191,"text":64},"markdown","content:posts:83a003c8-da74-4115-9170-636c5de6e3fe.md","content","posts/83a003c8-da74-4115-9170-636c5de6e3fe.md","md",1704385088937]