[{"data":1,"prerenderedAt":452},["Reactive",2],{"content-query-IE0vNofzSX":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"tags":10,"date":12,"body":13,"_type":447,"_id":448,"_source":449,"_file":450,"_extension":451},"/posts/cbbee657-7850-46ab-b52b-43341e800d37","posts",false,"","자바스크립트 - 1. 변수","사상누각이라고 토대나 기초가 튼튼하지 않으면 금방 무너지게 되어 있다. 이번에 쉬면서 javascript 기본부터 토대를 다져야겠다.",[11],"javascript","2024-01-26T00:00:00.000Z",{"type":14,"children":15,"toc":437},"root",[16,23,30,42,47,52,57,62,66,71,75,80,85,98,110,129,134,138,142,147,164,173,177,183,188,200,208,212,217,232,236,241,250,254,260,269,273,278,283,291,295,307,311,317,326,335,355,359,365,370,379,387,391,396,409,413,417,422,433],{"type":17,"tag":18,"props":19,"children":20},"element","p",{},[21],{"type":22,"value":9},"text",{"type":17,"tag":24,"props":25,"children":27},"h2",{"id":26},"변수란",[28],{"type":22,"value":29},"변수란?",{"type":17,"tag":31,"props":32,"children":36},"pre",{"className":33,"code":35,"language":11,"meta":7},[34],"language-javascript","10 + 20\n",[37],{"type":17,"tag":38,"props":39,"children":40},"code",{"__ignoreMap":7},[41],{"type":22,"value":35},{"type":17,"tag":18,"props":43,"children":44},{},[45],{"type":22,"value":46},"위 코드는 javascript에서 어떻게 동작할까? 우선 각 임의의 메모리 셀에 10, 20으로 저장(기억) 되고 CPU는 이 값을 읽어들여 연산을 수행한다. 임의의 메모리 셀에 30으로 저장(기억)된다.",{"type":17,"tag":18,"props":48,"children":49},{},[50],{"type":22,"value":51},"이때 우리는 10 + 20의 결과를 재사용 하고 싶다면 메모리 주소에 직접 접근하는 것외에는 방법이 없다. 하지만 메모리 주소를 통해 직접 접근하는 것은 치명적 오류를 발생시킬 가능성이 높다. 자바스크립트는 개발자가 직접적으로 메모리 제어를 허용하지 않는다.",{"type":17,"tag":18,"props":53,"children":54},{},[55],{"type":22,"value":56},"\\n",{"type":17,"tag":18,"props":58,"children":59},{},[60],{"type":22,"value":61},"이때 프로그래밍 언어는 기억하고 싶은 값을 메모리에 저장하고, 저장된 값을 읽어 들여 재사용하기 위해 변수라는 메커니즘을 제공한다.",{"type":17,"tag":18,"props":63,"children":64},{},[65],{"type":22,"value":56},{"type":17,"tag":18,"props":67,"children":68},{},[69],{"type":22,"value":70},"변수는 메모리에 접근하기 위해 사용되는 식별자다.",{"type":17,"tag":18,"props":72,"children":73},{},[74],{"type":22,"value":56},{"type":17,"tag":18,"props":76,"children":77},{},[78],{"type":22,"value":79},"변수는 하나의 값을 저장하기 위해 확보한 메모리 공간 자체 또는 그 메모리 공간을 식별하기 위해 붙인 이름을 말한다.",{"type":17,"tag":18,"props":81,"children":82},{},[83],{"type":22,"value":84},"값의 위치를 가리키는 상징적인 이름",{"type":17,"tag":18,"props":86,"children":87},{},[88,90,96],{"type":22,"value":89},"메모리 공간에 저장된 값을 식별할 수 있는 고유한 이름을 ",{"type":17,"tag":91,"props":92,"children":93},"strong",{},[94],{"type":22,"value":95},"변수 이름(또는 변수명)",{"type":22,"value":97},"이라하고",{"type":17,"tag":18,"props":99,"children":100},{},[101,103,108],{"type":22,"value":102},"변수에 저장된 값을 ",{"type":17,"tag":91,"props":104,"children":105},{},[106],{"type":22,"value":107},"변수 값",{"type":22,"value":109},"이라고 한다.",{"type":17,"tag":18,"props":111,"children":112},{},[113,115,120,122,127],{"type":22,"value":114},"변수에 값을 저장하는 것을 ",{"type":17,"tag":91,"props":116,"children":117},{},[118],{"type":22,"value":119},"할당(대입, 저장)",{"type":22,"value":121},"이라고 하고, 변수에 저장된 값을 읽어 들이는 것을 ",{"type":17,"tag":91,"props":123,"children":124},{},[125],{"type":22,"value":126},"참조",{"type":22,"value":128},"라 한다.",{"type":17,"tag":130,"props":131,"children":133},"img",{"src":132},"/blog/images/6702cfe4-d4a5-46ab-8532-7c107572cb66.png",[],{"type":17,"tag":130,"props":135,"children":137},{"src":136},"/blog/images/c97fbce2-e54a-44d6-8f73-8779235b46bc.png",[],{"type":17,"tag":18,"props":139,"children":140},{},[141],{"type":22,"value":56},{"type":17,"tag":24,"props":143,"children":145},{"id":144},"식별자",[146],{"type":22,"value":144},{"type":17,"tag":18,"props":148,"children":149},{},[150,152,156,158,162],{"type":22,"value":151},"변수 이름을 ",{"type":17,"tag":91,"props":153,"children":154},{},[155],{"type":22,"value":144},{"type":22,"value":157},"라고도 한다. ",{"type":17,"tag":91,"props":159,"children":160},{},[161],{"type":22,"value":144},{"type":22,"value":163},"는 어떤 값을 구별해서 식별할 수 있는 고유한 이름을 말한다.",{"type":17,"tag":165,"props":166,"children":167},"blockquote",{},[168],{"type":17,"tag":18,"props":169,"children":170},{},[171],{"type":22,"value":172},"식별자라는 용어는 변수 이름에만 국한해서 사용하지 않음. 예를 들어, 변수, 함수, 클래스 등의 이름은 모두 식별자",{"type":17,"tag":18,"props":174,"children":175},{},[176],{"type":22,"value":56},{"type":17,"tag":24,"props":178,"children":180},{"id":179},"변수-선언",[181],{"type":22,"value":182},"변수 선언",{"type":17,"tag":18,"props":184,"children":185},{},[186],{"type":22,"value":187},"변수를 생성하는 것을 말함. 더 자세히는 메모리 공간을 확보하고 변수 이름과 확보된 메모리 공간의 주소를 연결해서 값을 저장할 수 있게 준비. 변수 선언에 의해 확보된 메모리 공간은 누구도 확보된 메모리 공간을 사용할 수 없도록 보호 됨.",{"type":17,"tag":18,"props":189,"children":190},{},[191,193,198],{"type":22,"value":192},"변수 선언은 ",{"type":17,"tag":38,"props":194,"children":195},{},[196],{"type":22,"value":197},"var, let ,const",{"type":22,"value":199}," 키워드를 사용",{"type":17,"tag":201,"props":202,"children":205},"aside",{"emogi":203,"color":204},"⛔","purple",[206],{"type":22,"value":207},"var 키워드는 여러 단점이 있음. 대표적으로 블록 레벨 스코프를 지원하지 않고 함수 레벨 스코프를 지원한다는 것. 때문에 의도치 않게 전역 변수로 선언이 되어 심각한 부작용이 발생하기도 함.",{"type":17,"tag":18,"props":209,"children":210},{},[211],{"type":22,"value":56},{"type":17,"tag":18,"props":213,"children":214},{},[215],{"type":22,"value":216},"자바스크립트 엔진은 변수 선언을 다음과 같은 2단계에 거쳐 수행",{"type":17,"tag":218,"props":219,"children":220},"ul",{},[221,227],{"type":17,"tag":222,"props":223,"children":224},"li",{},[225],{"type":22,"value":226},"선언 단계: 변수 이름을 등록해서 자바스크립트 엔진에 변수의 존재를 알린다.",{"type":17,"tag":222,"props":228,"children":229},{},[230],{"type":22,"value":231},"초기화 단계: 값을 저장하기 위한 메모리 공간을 확보하고 암묵적으로 undefined를 할당해 초기화한다.",{"type":17,"tag":18,"props":233,"children":234},{},[235],{"type":22,"value":56},{"type":17,"tag":18,"props":237,"children":238},{},[239],{"type":22,"value":240},"var 키워드는 선언 단계와 초기화 단계가 동시에 진행 됨.",{"type":17,"tag":31,"props":242,"children":245},{"className":243,"code":244,"language":11,"meta":7},[34],"var score;\n// 선언 단계를 통해 변수 이름 score를 등록하고 (메모리 공간을 확보하고)\n// 초기화 단계를 통해 암묵적으로 undefined를 할당해 초기화\n",[246],{"type":17,"tag":38,"props":247,"children":248},{"__ignoreMap":7},[249],{"type":22,"value":244},{"type":17,"tag":18,"props":251,"children":252},{},[253],{"type":22,"value":56},{"type":17,"tag":24,"props":255,"children":257},{"id":256},"변수-선언의-실행-시점과-변수-호이스팅",[258],{"type":22,"value":259},"변수 선언의 실행 시점과 변수 호이스팅",{"type":17,"tag":31,"props":261,"children":264},{"className":262,"code":263,"language":11,"meta":7},[34],"console.log(score); // undefined\nvar score = 1;\n",[265],{"type":17,"tag":38,"props":266,"children":267},{"__ignoreMap":7},[268],{"type":22,"value":263},{"type":17,"tag":18,"props":270,"children":271},{},[272],{"type":22,"value":56},{"type":17,"tag":18,"props":274,"children":275},{},[276],{"type":22,"value":277},"참조 에러가 발생해야 하는데 undefined가 출력이 된다.",{"type":17,"tag":18,"props":279,"children":280},{},[281],{"type":22,"value":282},"자바스크립트 엔진은 소스코드를 한 줄씩 순차적으로 실행하기에 앞서 먼저 소스코드의 평가 과정을 거친다. 이 과정에서 var 키워드는 선언 단계와 초기화 단계가 동시에 진행되기 때문에 undefined가 할당이 된다.",{"type":17,"tag":165,"props":284,"children":285},{},[286],{"type":17,"tag":18,"props":287,"children":288},{},[289],{"type":22,"value":290},"변수 선언(선언 단계와 초기화 단계)이 소스코드가 순차적으로 실행되는 런타임 이전 단계에서 먼저 실행된다는 증거다.",{"type":17,"tag":18,"props":292,"children":293},{},[294],{"type":22,"value":56},{"type":17,"tag":18,"props":296,"children":297},{},[298,300,305],{"type":22,"value":299},"변수 선언문이 코드의 선두로 끌어 올려진 것처럼 동작하는 자바스크립트 고유의 특징을 ",{"type":17,"tag":91,"props":301,"children":302},{},[303],{"type":22,"value":304},"변수 호이스팅",{"type":22,"value":306},"이라 한다.",{"type":17,"tag":18,"props":308,"children":309},{},[310],{"type":22,"value":56},{"type":17,"tag":24,"props":312,"children":314},{"id":313},"값의-할당",[315],{"type":22,"value":316},"값의 할당",{"type":17,"tag":31,"props":318,"children":321},{"className":319,"code":320,"language":11,"meta":7},[34],"var score; // 변수 선언\nscore = 80; // 값의 할당\n",[322],{"type":17,"tag":38,"props":323,"children":324},{"__ignoreMap":7},[325],{"type":22,"value":320},{"type":17,"tag":31,"props":327,"children":330},{"className":328,"code":329,"language":11,"meta":7},[34],"var score = 80; // 변수 선언과 값의 할당 \n\n// 자바스크립트 엔진은 \nvar score;\nscore = 80; // 으로 해석\n",[331],{"type":17,"tag":38,"props":332,"children":333},{"__ignoreMap":7},[334],{"type":22,"value":329},{"type":17,"tag":165,"props":336,"children":337},{},[338],{"type":17,"tag":18,"props":339,"children":340},{},[341,343,347,349,353],{"type":22,"value":342},"주의할 점: 변수 선언과 값의 할당의 실행 시점은 다르다.\n런타임: 소스코드가 순차적으로 실행되는 시점\n",{"type":17,"tag":91,"props":344,"children":345},{},[346],{"type":22,"value":182},{"type":22,"value":348},"은 런타임 이전\n",{"type":17,"tag":91,"props":350,"children":351},{},[352],{"type":22,"value":316},{"type":22,"value":354},"은 런타임에 실행",{"type":17,"tag":130,"props":356,"children":358},{"src":357},"/blog/images/04348cfa-89dd-4f8a-9730-b06fafcc21cd.png",[],{"type":17,"tag":24,"props":360,"children":362},{"id":361},"값의-재할당",[363],{"type":22,"value":364},"값의 재할당",{"type":17,"tag":18,"props":366,"children":367},{},[368],{"type":22,"value":369},"이미 할당되어 있는 변수에 새로운 값을 또다시 할당",{"type":17,"tag":31,"props":371,"children":374},{"className":372,"code":373,"language":11,"meta":7},[34],"var score = 80; // 변수 선언과 값의 할당\nscore = 90; // 값의 재할당\n",[375],{"type":17,"tag":38,"props":376,"children":377},{"__ignoreMap":7},[378],{"type":22,"value":373},{"type":17,"tag":165,"props":380,"children":381},{},[382],{"type":17,"tag":18,"props":383,"children":384},{},[385],{"type":22,"value":386},"var 키워드로 선언한 변수는 선언과 동시에 undefined로 초기화되기 때문에 엄밀히 말하자면 재할당이다.",{"type":17,"tag":130,"props":388,"children":390},{"src":389},"/blog/images/5f528017-347b-49d9-9573-95d42e287dd3.png",[],{"type":17,"tag":18,"props":392,"children":393},{},[394],{"type":22,"value":395},"undefined와 80은 어떤 식별자와도 연결 되어 있지 않기 때문에 가비지 콜렉터에 의해 메모리에서 자동 해제된다.",{"type":17,"tag":201,"props":397,"children":399},{"emogi":398,"color":204},"❗",[400,402,407],{"type":22,"value":401},"위 ",{"type":17,"tag":38,"props":403,"children":404},{},[405],{"type":22,"value":406},"var result = 10 + 20",{"type":22,"value":408}," 에서 10과 20도 가비지 콜렉터에 의해 메모리에서 자동 해제 된다.",{"type":17,"tag":18,"props":410,"children":411},{},[412],{"type":22,"value":56},{"type":17,"tag":414,"props":415,"children":416},"hr",{},[],{"type":17,"tag":24,"props":418,"children":420},{"id":419},"참고",[421],{"type":22,"value":419},{"type":17,"tag":218,"props":423,"children":424},{},[425],{"type":17,"tag":222,"props":426,"children":427},{},[428],{"type":17,"tag":91,"props":429,"children":430},{},[431],{"type":22,"value":432},"이웅모, 「모던 자바스크립트 Deep Dive」, 위키북스, 2020",{"type":17,"tag":18,"props":434,"children":435},{},[436],{"type":22,"value":56},{"title":7,"searchDepth":438,"depth":438,"links":439},2,[440,441,442,443,444,445,446],{"id":26,"depth":438,"text":29},{"id":144,"depth":438,"text":144},{"id":179,"depth":438,"text":182},{"id":256,"depth":438,"text":259},{"id":313,"depth":438,"text":316},{"id":361,"depth":438,"text":364},{"id":419,"depth":438,"text":419},"markdown","content:posts:cbbee657-7850-46ab-b52b-43341e800d37.md","content","posts/cbbee657-7850-46ab-b52b-43341e800d37.md","md",1718180471438]