{"_path":"/posts/83a003c8-da74-4115-9170-636c5de6e3fe","_dir":"posts","_draft":false,"_partial":false,"_locale":"","title":"테스트 5","description":"","tags":[],"date":"2023-10-17T00:00:00.000Z","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"_1-프로퍼티-축약-표현"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"1. 프로퍼티 축약 표현"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"ES6에서는 프로퍼티 값으로 변수를 사용하는 경우 변수 이름과 프로퍼티 키가 동일한 이름일 때 프로퍼티 키를 생략할 수 있다."}]},{"type":"element","tag":"h3","props":{"id":"es5"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"ES5"}]}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"var x = 1, y = 2;\nvar obj = {\n  x: x,\n  y: y\n};\n\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"var x = 1, y = 2;\nvar obj = {\n  x: x,\n  y: y\n};\n\n"}]}]},{"type":"element","tag":"h3","props":{"id":"es6"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"ES6"}]}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"let x = 1, y = 2;\nconst obj = { x, y };\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"let x = 1, y = 2;\nconst obj = { x, y };\n"}]}]},{"type":"element","tag":"h2","props":{"id":"_2-계산된-프로퍼티-이름"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"2. 계산된 프로퍼티 이름"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"ES6에서는 객체 리터널 내부에서도 계산된 프로퍼티 이름으로 프로퍼티 키를 동적 생성할 수 있다."}]},{"type":"element","tag":"h3","props":{"id":"es5-1"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"ES5"}]}]},{"type":"element","tag":"pre","props":{"className":["language-text"],"code":"var prefix = 'prop';\nvar i = 0;\n\nvar obj = {};\n\nobj[prefix + '-' + ++i] = i;\nobj[prefix + '-' + ++i] = i;\nobj[prefix + '-' + ++i] = i;\n\n","language":"text","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"var prefix = 'prop';\nvar i = 0;\n\nvar obj = {};\n\nobj[prefix + '-' + ++i] = i;\nobj[prefix + '-' + ++i] = i;\nobj[prefix + '-' + ++i] = i;\n\n"}]}]},{"type":"element","tag":"h3","props":{"id":"es6"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"// ES6"}]}]},{"type":"element","tag":"pre","props":{"className":["language-text"],"code":"let prefix = 'prop';\nlet i = 0;\n\nconst obj = {\n  [`${prefix}-${++i}`]: i,\n  [`${prefix}-${++i}`]: i,\n  [`${prefix}-${++i}`]: i\n}\n\n","language":"text","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"let prefix = 'prop';\nlet i = 0;\n\nconst obj = {\n  [`${prefix}-${++i}`]: i,\n  [`${prefix}-${++i}`]: i,\n  [`${prefix}-${++i}`]: i\n}\n\n"}]}]},{"type":"element","tag":"h2","props":{"id":"_3-메소드-축약-표현"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"3. 메소드 축약 표현"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"ES6에서는 메서드를 정의할 때 function 키워드를 생략한 축약 표현을 사용할 수 있다."}]},{"type":"element","tag":"h3","props":{"id":"es5-2"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"ES5"}]}]},{"type":"element","tag":"pre","props":{"className":["language-text"],"code":"var obj = {\n  name: 'Seungyoon',\n  sayHi: function() {\n    console.log('Hi! ' + this.name);\n  }\n}\n\n","language":"text","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"var obj = {\n  name: 'Seungyoon',\n  sayHi: function() {\n    console.log('Hi! ' + this.name);\n  }\n}\n\n"}]}]},{"type":"element","tag":"h3","props":{"id":"es6-1"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"ES6"}]}]},{"type":"element","tag":"pre","props":{"className":["language-text"],"code":"const obj = {\n    name: 'Seungyoon',\n    sayHi() {\n        console.log('Hi! ' + this.name);\n    }\n}\n\n","language":"text","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const obj = {\n    name: 'Seungyoon',\n    sayHi() {\n        console.log('Hi! ' + this.name);\n    }\n}\n\n"}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"출처:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"이웅모, 『모던 자바스크립트 Deep Dive』, 위키북스(2020), p134-136"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"_1-프로퍼티-축약-표현","depth":2,"text":"1. 프로퍼티 축약 표현","children":[{"id":"es5","depth":3,"text":"ES5"},{"id":"es6","depth":3,"text":"ES6"}]},{"id":"_2-계산된-프로퍼티-이름","depth":2,"text":"2. 계산된 프로퍼티 이름","children":[{"id":"es5-1","depth":3,"text":"ES5"},{"id":"es6","depth":3,"text":"// ES6"}]},{"id":"_3-메소드-축약-표현","depth":2,"text":"3. 메소드 축약 표현","children":[{"id":"es5-2","depth":3,"text":"ES5"},{"id":"es6-1","depth":3,"text":"ES6"}]}]}},"_type":"markdown","_id":"content:posts:83a003c8-da74-4115-9170-636c5de6e3fe.md","_source":"content","_file":"posts/83a003c8-da74-4115-9170-636c5de6e3fe.md","_extension":"md"}