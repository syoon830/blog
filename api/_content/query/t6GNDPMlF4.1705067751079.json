[{"_path":"/posts/ef65e77b-7018-4854-8ba1-e14fc2a8fba9","_dir":"posts","_draft":false,"_partial":false,"_locale":"","title":"Property \"query\" was accessed during render but is not defined on instance","description":"","tags":["nuxt"],"date":"2024-01-05T00:00:00.000Z","body":{"type":"root","children":[{"type":"element","tag":"pre","props":{"className":["language-css"],"code":"// AS-IS\nconst { query } = defineProps();\n\n// TO-BE\nconst { query } = defineProps(['query']);\n\n","language":"css","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// AS-IS\nconst { query } = defineProps();\n\n// TO-BE\nconst { query } = defineProps(['query']);\n\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:posts:ef65e77b-7018-4854-8ba1-e14fc2a8fba9.md","_source":"content","_file":"posts/ef65e77b-7018-4854-8ba1-e14fc2a8fba9.md","_extension":"md"},{"_path":"/posts/d35aaedb-0f64-4f7f-8c76-97e2069cbadd","_dir":"posts","_draft":false,"_partial":false,"_locale":"","title":"nuxt3 정적 사이트 github page에서 js파일들 404에러 날때","description":"githubpage에 generage해서 올렸는데 자꾸 에러가 나는거다… 이유를 몰라서 밤새 검색했는데도 답이 안나오고","tags":["nuxt"],"date":"2024-01-03T00:00:00.000Z","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"githubpage에 generage해서 올렸는데 자꾸 에러가 나는거다… 이유를 몰라서 밤새 검색했는데도 답이 안나오고"}]},{"type":"element","tag":"img","props":{"src":"https://prod-files-secure.s3.us-west-2.amazonaws.com/122c4317-821b-493a-85a2-3b119a538ecc/fe6c9a49-b3bc-4656-b606-896c26f1f958/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45HZZMZUHI%2F20240112%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240112T135550Z&X-Amz-Expires=3600&X-Amz-Signature=ecfa19dd4e73095ead19eece5436c07baf3a3f4808a9bec251a4a4cf3ee9d50e&X-Amz-SignedHeaders=host&x-id=GetObject"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"결국 nuxt github issue에서 찾았다 ㅠㅠ"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/nuxt/nuxt/issues/10113","rel":["nofollow"]},"children":[{"type":"text","value":"link_preview"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":".nojeklly"}]},{"type":"element","tag":"pre","props":{"className":["language-typescript"],"code":"\"deploy\": \"nuxt generate && touch .output/public/.nojekyll && gh-pages --dotfiles -d .output/public”\n","language":"typescript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"\"deploy\": \"nuxt generate && touch .output/public/.nojekyll && gh-pages --dotfiles -d .output/public”\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"결론은 generate하고 프로젝트 폴더안에 .nojekyll 파일이 있어야 되는거였다. (github page는 기본적으로 jekyll이라는 정적 사이트 생성기를 사용함)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":".nojekyll 파일이 있으면 github 페이지는 jekyll 처리를 건너뜀"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"오늘의 개발 교훈: github issue를 잘 찾아보자!"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:posts:d35aaedb-0f64-4f7f-8c76-97e2069cbadd.md","_source":"content","_file":"posts/d35aaedb-0f64-4f7f-8c76-97e2069cbadd.md","_extension":"md"},{"_path":"/posts/b083a0e2-3166-41dc-ad9c-3e9b6383a6c6","_dir":"posts","_draft":false,"_partial":false,"_locale":"","title":"객체지향 프로그래밍 (with. ES6)","description":"프로그래밍의 설계 패러다임 중 하나로, 현실 세계를 프로그램 설계에 반영한다는 개념을 기반으로 접근하는 방법","tags":["ES6"],"date":"2023-12-06T00:00:00.000Z","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"프로그래밍의 설계 패러다임 중 하나로, 현실 세계를 프로그램 설계에 반영한다는 개념을 기반으로 접근하는 방법"}]},{"type":"element","tag":"h3","props":{"id":"클래스와-인스턴스객체"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"클래스와 인스턴스(객체)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"클래스는 일종의 설계도이고 인스턴스는 클래스를 사용하여 생성한 실제 물건이다."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"스마트폰(클래스), 아이폰(인스턴스), 갤럭시(인스턴스)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"자동차(클래스), 소나타(인스턴스), 그랜져(인스턴스)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"위 정의가 꼭 클래스, 인스턴스라는 이야기는 아니다. 스마트폰, 자동차 또한 인스턴스가 될 수 있다."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"무선 전화기(클래스) - 스마트폰(인스턴스)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"이동수단(클래스) - 자동차(인스턴스)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"마찬가지로 무선 전화기, 이동수단 또한 꼭 클래스가 아닐 수 있다."}]},{"type":"element","tag":"pre","props":{"code":"class SmartPhone {\n  constructor(name) {\n    this.name = name;\n  }\n\n  getName() {\n    return this.name;\n  }\n}\n\nlet galaxy = new SmartPhone(\"Galaxy\");\nlet iphone = new SmartPhone(\"Iphone\");\n\n","language":"javascript","meta":"","className":["language-javascript"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"class SmartPhone {\n  constructor(name) {\n    this.name = name;\n  }\n\n  getName() {\n    return this.name;\n  }\n}\n\nlet galaxy = new SmartPhone(\"Galaxy\");\nlet iphone = new SmartPhone(\"Iphone\");\n\n"}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"이렇게 상위 개념을 추적하는 행위(아이폰 -> 스마트폰 -> 전화기)를 **추상화(Abstarction)**라고 한다. 추상은 객체가 가지고 있는 여러 가지 속성 중에서 특정한 속성을 가려내어 포착하는 것을 의미한다. (필요한 관점만을 추출하는 행위)"}]}]}]},{"type":"element","tag":"h2","props":{"id":"객체지향-프로그래밍은-아래의-특징을-가지고-있다"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"객체지향 프로그래밍은 아래의 특징을 가지고 있다."}]}]},{"type":"element","tag":"h3","props":{"id":"상속inheritance"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"상속(inheritance)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"속성 및 기능을 물려받아 확장 할 수 있다."}]},{"type":"element","tag":"pre","props":{"code":"class Car {\n  axle() {\n    console.log('이동');\n  }\n  break() {\n    console.log('멈춤');\n  }\n}\n\nclass Hyundai extends Car {\n  // Car의 기능을 물려 받음(axle, break)\n  companyName = '현대';\n  country = '대한민국';\n}\n\nclass Sonata extends Hyundai {\n  // Car의 기능을 물려 받음(axle, break)\n  // Hyundai 속성을 물려 받음(compnayName, country)\n  modelName = '소나타';\n\n}\n\nlet sonata2020 = new Sonata();\nconsole.log(sonata2020.companyName); // 현대\nconsole.log(sonata2020.country); // 대한민국\nsonata2020.axle(); // 이동\nsonata2020.break(); // 멈춤\n\n","language":"javascript","meta":"","className":["language-javascript"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"class Car {\n  axle() {\n    console.log('이동');\n  }\n  break() {\n    console.log('멈춤');\n  }\n}\n\nclass Hyundai extends Car {\n  // Car의 기능을 물려 받음(axle, break)\n  companyName = '현대';\n  country = '대한민국';\n}\n\nclass Sonata extends Hyundai {\n  // Car의 기능을 물려 받음(axle, break)\n  // Hyundai 속성을 물려 받음(compnayName, country)\n  modelName = '소나타';\n\n}\n\nlet sonata2020 = new Sonata();\nconsole.log(sonata2020.companyName); // 현대\nconsole.log(sonata2020.country); // 대한민국\nsonata2020.axle(); // 이동\nsonata2020.break(); // 멈춤\n\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"이렇게 상속을 하게 되면 중복 코드를 피할 수 있다."}]},{"type":"element","tag":"h3","props":{"id":"다형성polymorphism"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"다형성(Polymorphism)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"어떤 하나의 변수명이나 함수명이 상황에 따라서 다르게 해석될 수 있는 것을 의미 (형태가 같은데 다른 기능을 하는 것)"}]},{"type":"element","tag":"pre","props":{"code":"class Animal {\n  sound() {\n    console.log('동물 울음소리를 만들어주세요.');\n  }\n}\n\nclass Cat extends Animal {\n  sound() {\n    console.log('야옹');\n  }\n}\n\nclass Dog extends Animal {\n  sound() {\n    console.log('멍멍');\n  }\n}\n\nlet Leo = new Cat();\nlet Bella = new Dog();\n\nLeo.sound(); // 야옹\nBella.sound(); // 멍멍\n\n","language":"text","meta":"","className":["language-text"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"class Animal {\n  sound() {\n    console.log('동물 울음소리를 만들어주세요.');\n  }\n}\n\nclass Cat extends Animal {\n  sound() {\n    console.log('야옹');\n  }\n}\n\nclass Dog extends Animal {\n  sound() {\n    console.log('멍멍');\n  }\n}\n\nlet Leo = new Cat();\nlet Bella = new Dog();\n\nLeo.sound(); // 야옹\nBella.sound(); // 멍멍\n\n"}]}]},{"type":"element","tag":"h3","props":{"id":"캡슐화encapsulation"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"캡슐화(Encapsulation)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"기본적으로 관련된 여러 가지 정보를 하나의 틀 안에 담는 것을 의미한다. 아래 코드를 보면 변수들과 메서드가 서로 관련된 정보가 되고 클래스(Capsule)이 이것을 담는 하나의 큰 틀이라고 할 수 있다. 여기에서 중요한 것은 은닉화, 정보의 공개 여부이다. 정보 은닉(Information hiding)의 개념이 바로 이 부분을 담당한다."}]},{"type":"element","tag":"pre","props":{"code":"// 캡슐화 (속성, 메소드)\npublic class Capsule {\n  // 은닉화\n  private String name;\n  private String id;\n\n  // 은닉화한 정보 제어 할 수 있는 메소드\n  // 외부에 공개\n  public String getName() {\n    return this.name;\n  }\n  public String setName(String name) {\n    return this.name = name;\n  }\n  public String getId() {\n    return this.id;\n  }\n  public String setName(String id) {\n    return this.id = id;\n  }\n}\n\n","language":"java","meta":"","className":["language-java"]},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// 캡슐화 (속성, 메소드)\npublic class Capsule {\n  // 은닉화\n  private String name;\n  private String id;\n\n  // 은닉화한 정보 제어 할 수 있는 메소드\n  // 외부에 공개\n  public String getName() {\n    return this.name;\n  }\n  public String setName(String name) {\n    return this.name = name;\n  }\n  public String getId() {\n    return this.id;\n  }\n  public String setName(String id) {\n    return this.id = id;\n  }\n}\n\n"}]}]},{"type":"element","tag":"h3","props":{"id":"참고"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"참고:"}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"인사이드 자바스크립트"}]}]},{"type":"element","tag":"pre","props":{"code":"vandbt.tistory.com/10\n\n\nevan-moon.github.io/2019/08/24/what-is-object-oriented-programming/ [www.opentutorials.org/module/2495/14037](http://www.opentutorials.org/module/2495/14037) victorydntmd.tistory.com/117\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"vandbt.tistory.com/10\n\n\nevan-moon.github.io/2019/08/24/what-is-object-oriented-programming/ [www.opentutorials.org/module/2495/14037](http://www.opentutorials.org/module/2495/14037) victorydntmd.tistory.com/117\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"클래스와-인스턴스객체","depth":3,"text":"클래스와 인스턴스(객체)"},{"id":"객체지향-프로그래밍은-아래의-특징을-가지고-있다","depth":2,"text":"객체지향 프로그래밍은 아래의 특징을 가지고 있다.","children":[{"id":"상속inheritance","depth":3,"text":"상속(inheritance)"},{"id":"다형성polymorphism","depth":3,"text":"다형성(Polymorphism)"},{"id":"캡슐화encapsulation","depth":3,"text":"캡슐화(Encapsulation)"},{"id":"참고","depth":3,"text":"참고:"}]}]}},"_type":"markdown","_id":"content:posts:b083a0e2-3166-41dc-ad9c-3e9b6383a6c6.md","_source":"content","_file":"posts/b083a0e2-3166-41dc-ad9c-3e9b6383a6c6.md","_extension":"md"}]