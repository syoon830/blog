{"_path":"/posts/8285cee9-dfcd-4a53-8b73-3ae542a267a9","_dir":"posts","_draft":false,"_partial":false,"_locale":"","title":"자바스크립트 - 8. 원시 값과 객체의 비교","description":"데이터 타입은 크게 원시 타입과 객체 타입으로 구분","tags":["javascript"],"date":"2024-02-15T00:00:00.000Z","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"데이터 타입은 크게 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"원시 타입"}]},{"type":"text","value":"과 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"객체 타입"}]},{"type":"text","value":"으로 구분"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"원시값은 식별자 메모리 주소에 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"값"}]},{"type":"text","value":"이 저장되어있고"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"객체는 식별자 메모리 주소에 해당 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"객체 메모리 주소"}]},{"type":"text","value":"가 저장되어 있다"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]},{"type":"element","tag":"details","props":{},"children":[{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"메모리 주소가 'a1', 'a2'가 있다고 할게\n그리고 코드는 let str = \"string\"이야 자바스크립트 엔진은 런타임 이전에 'a1'이나 'a2'중에 메모리 공간을 확보해 (여기서는 'a1'을 확보 했다고 할게\n그리고 식별자 str을 메모리 주소 'a1'에 연결을 한다? (이 문장이 맞는지 모르겠어)\n그리고 런타임시 a1에 \"string\"을 저장한다\n이게 맞을까?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"네, 맞습니다. JavaScript에서 "},{"type":"element","tag":"code","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"let str = \"string\";"}]}]},{"type":"text","value":" 코드에 대한 처리를 단순화하여 설명하면 다음과 같습니다:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"메모리 공간 확보"}]},{"type":"text","value":": JavaScript 엔진은 변수 **"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"str"}]},{"type":"text","value":"**에 대한 메모리 공간을 확보합니다. 이를 위해 메모리 주소 'a1'을 할당한다고 가정할 수 있습니다."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"식별자와 메모리 주소 연결"}]},{"type":"text","value":": 식별자 **"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"str"}]},{"type":"text","value":"**은 이 메모리 주소 'a1'에 연결됩니다. 이는 **"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"str"}]},{"type":"text","value":"**이라는 이름을 사용할 때, JavaScript 엔진이 메모리 주소 'a1'을 참조하도록 합니다."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"런타임 시 값 저장"}]},{"type":"text","value":": 코드가 런타임에 실행될 때, 문자열 **"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"\"string\""}]},{"type":"text","value":"**은 메모리 주소 'a1'에 저장됩니다. 이 경우, **"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"str"}]},{"type":"text","value":"**은 이 문자열 값을 직접적으로 가리키게 됩니다."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"이 과정에서 중요한 점은 문자열 "},{"type":"element","tag":"code","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"\"string\""}]}]},{"type":"text","value":"이 원시 타입의 값으로 취급된다는 것입니다. JavaScript에서 문자열은 불변의 원시 타입으로, 변수에 직접 저장됩니다 (복잡한 내부 최적화나 문자열 인터닝을 고려하지 않을 때). 따라서 "},{"type":"element","tag":"code","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"str"}]}]},{"type":"text","value":" 변수는 문자열 "},{"type":"element","tag":"code","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"\"string\""}]}]},{"type":"text","value":"을 직접적으로 가지고 있으며, 이 값은 메모리 주소 'a1'에 위치하게 됩니다."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"이 설명은 JavaScript 엔진의 메모리 할당과 관리를 단순화한 것이며, 실제 엔진의 구현은 이보다 훨씬 복잡할 수 있습니다. 하지만 기본적인 개념은 위와 같습니다."}]}]},{"type":"element","tag":"details","props":{},"children":[{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"식별자 `str`은 이 메모리 주소 'a1'에 연결됩니다. 이 문장에서\n이 때 str은 메모리에 어디 있는걸까? 내가 이상하게 생각하고 있는건가?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"JavaScript에서 "},{"type":"element","tag":"code","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"let str = \"string\";"}]}]},{"type":"text","value":" 코드의 처리 과정에 대해 질문하셨군요. 이 과정을 단계별로 살펴보겠습니다:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"메모리 공간 할당"}]},{"type":"text","value":": JavaScript 엔진이 코드를 실행하기 전에, **"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"str"}]},{"type":"text","value":"**이라는 변수를 위한 메모리 공간을 확보합니다. 이 공간을 메모리 주소 'a1'이라고 가정해 봅시다."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"식별자 연결"}]},{"type":"text","value":": **"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"str"}]},{"type":"text","value":"**이라는 식별자는 메모리 주소 'a1'에 연결됩니다. 즉, **"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"str"}]},{"type":"text","value":"**이라는 이름을 사용할 때 JavaScript 엔진은 'a1'이라는 메모리 주소를 참조하게 됩니다."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"런타임시 값 할당"}]},{"type":"text","value":": 런타임에 이르러 **"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"str = \"string\";"}]},{"type":"text","value":"**이 실행되면, 문자열 **"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"\"string\""}]},{"type":"text","value":"**은 메모리 주소 'a1'에 저장됩니다."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"이 과정에서 "},{"type":"element","tag":"code","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"str"}]}]},{"type":"text","value":"이라는 식별자는 실행 컨텍스트의 환경 레코드에 있습니다. 이 환경 레코드는 메모리의 어떤 부분에 있으며, JavaScript 엔진이 변수 이름과 해당 메모리 주소를 매핑하는 데 사용합니다. 환경 레코드의 정확한 저장 위치는 JavaScript 엔진의 구현 세부 사항에 따라 다르며, 개발자가 직접적으로 접근하거나 확인할 수 있는 부분은 아닙니다."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"즉, "},{"type":"element","tag":"code","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"str"}]}]},{"type":"text","value":"이라는 식별자는 메모리상의 특정 위치에 있으나, 이 위치는 엔진 내부의 구현에 의존적이며, 식별자는 메모리 주소 'a1'을 참조하여 실제 값 "},{"type":"element","tag":"code","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"\"string\""}]}]},{"type":"text","value":"에 접근할 수 있게 됩니다."}]}]},{"type":"element","tag":"h2","props":{"id":"원시-값"},"children":[{"type":"text","value":"원시 값"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"원시 타입의 값, 즉 원시 값은 변경 불가능한 값"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"var score;\nscore = 80;\nscore = 90;\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"var score;\nscore = 80;\nscore = 90;\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"undefined가 80으로 바뀌고 80이 90으로 바뀌는게 아니라"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"값은 새로운 메모리 공간을 확보하고 값을 저장한 후, 변수는 원시 값을 가리킨다."}]},{"type":"element","tag":"img","props":{"src":"/blog/images/fbafac7e-94da-4242-9183-c10db9ee058b.png"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"불변성을 갖는 원시 값을 할당한 변수는 재할당 이외에 변수 값을 변경할 수 있는 방법이 없다."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]},{"type":"element","tag":"h3","props":{"id":"값에-의한-전달"},"children":[{"type":"text","value":"값에 의한 전달"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"var score = 80;\n\n// copy 변수에는 score 변수의 값 80이 복사되어 할당된다.\nvar copy = score;\n\nconsole.log(score, copy); // 80 80\nconsole.log(score === copy); // true\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"var score = 80;\n\n// copy 변수에는 score 변수의 값 80이 복사되어 할당된다.\nvar copy = score;\n\nconsole.log(score, copy); // 80 80\nconsole.log(score === copy); // true\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"score 변수와 copy 변수의 값 80은 다른 메모리 공간에 저장된 별개의 값이다."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"score = 100;\nconsole.log(score, copy); // 100 80\nconsole.log(score === copy); // false\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"score = 100;\nconsole.log(score, copy); // 100 80\nconsole.log(score === copy); // false\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]},{"type":"element","tag":"h3","props":{"id":"원시-값인-문자열은-다른-원시-값과-비교할-때-독특한-특징이-있음"},"children":[{"type":"text","value":"원시 값인 문자열은 다른 원시 값과 비교할 때 독특한 특징이 있음"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"문자열은 유사 배열 객체이면서 이터러블이므로 배열과 유사하게 각 문자에 접근할 수 있다."}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"var str = 'string';\n\n// 배열처럼 인덱스를 사용해 각 문자에 접근할 수 있다.\nconsole.log(str[0]); // s\n\n// 원시 값인 문자열이 객체처럼 동작한다.\nconsole.log(str.length);\nconsole.log(str.toUpperCase());\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"var str = 'string';\n\n// 배열처럼 인덱스를 사용해 각 문자에 접근할 수 있다.\nconsole.log(str[0]); // s\n\n// 원시 값인 문자열이 객체처럼 동작한다.\nconsole.log(str.length);\nconsole.log(str.toUpperCase());\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"어떻게 원시 값이 객체처럼 동작할까? 그 이유는 원시 값을 감싸는 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"래퍼 객체"}]},{"type":"text","value":"로 자동 변환되기 때문이다. 자세한건 이후에"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"여기서 퀴즈!"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"var arr = [1, 2, 3];\narr[0] = 4;\nconsole.log(arr) // ??\n\nvar str = 'string';\nstr[0] = 'S';\nconsole.log(str); // ??\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"var arr = [1, 2, 3];\narr[0] = 4;\nconsole.log(arr) // ??\n\nvar str = 'string';\nstr[0] = 'S';\nconsole.log(str); // ??\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]},{"type":"element","tag":"h2","props":{"id":"객체"},"children":[{"type":"text","value":"객체"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"객체 타입의 값, 즉 객체는 변경 가능한 값이다."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"용어정리"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"일반적으로 원시 값을 할당한 경우 “변수는 O값을 갖는다” 또는 “변수의 값은 O다”라고 표현하고"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"객체를 할당한 변수의 경우 “변수는 객체를 참조하고 있다” 또는 “변수는 객체를 가리키고 있다”라고 표현"}]}]},{"type":"element","tag":"h3","props":{"id":"참조에-의한-전달"},"children":[{"type":"text","value":"참조에 의한 전달"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"var person = {\n    name: 'Lee'\n}\n\nvar copy = person;\n\ncopy.name = 'kim';\n\nconsole.log(person.name); // kim;\nconsole.log(copy.name); // kim;\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"var person = {\n    name: 'Lee'\n}\n\nvar copy = person;\n\ncopy.name = 'kim';\n\nconsole.log(person.name); // kim;\nconsole.log(copy.name); // kim;\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"정확한 용어는 존재하지 않지만 전달되는 값의 종류에 원시 값인지 참조 값인지 구별해서 강조하는 의미에서 “값에 의한 전달”, “참조에 의한 전달”로 구분하여 부르기 함."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h2","props":{"id":"참고"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"참고"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"이웅모, 「모던 자바스크립트 Deep Dive」, 위키북스, 2020"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"원시-값","depth":2,"text":"원시 값","children":[{"id":"값에-의한-전달","depth":3,"text":"값에 의한 전달"},{"id":"원시-값인-문자열은-다른-원시-값과-비교할-때-독특한-특징이-있음","depth":3,"text":"원시 값인 문자열은 다른 원시 값과 비교할 때 독특한 특징이 있음"}]},{"id":"객체","depth":2,"text":"객체","children":[{"id":"참조에-의한-전달","depth":3,"text":"참조에 의한 전달"}]},{"id":"참고","depth":2,"text":"참고"}]}},"_type":"markdown","_id":"content:posts:8285cee9-dfcd-4a53-8b73-3ae542a267a9.md","_source":"content","_file":"posts/8285cee9-dfcd-4a53-8b73-3ae542a267a9.md","_extension":"md"}