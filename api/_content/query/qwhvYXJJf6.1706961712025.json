[{"_path":"/posts/9ecb10c2-fa24-449c-ac39-8553ee942084","_dir":"posts","_draft":false,"_partial":false,"_locale":"","title":"nuxt에서 localstorage 이슈","description":"기존에 cookie에 auth 정보를 저장했을때는 미들웨어가 잘 동작을 했는데, 테스트상 localstorage에 저장을 해보니 미들웨어가 제대로 동작을 안한다.","tags":["nuxt","ssr","middleware"],"date":"2024-01-16T00:00:00.000Z","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"기존에 cookie에 auth 정보를 저장했을때는 미들웨어가 잘 동작을 했는데, 테스트상 localstorage에 저장을 해보니 미들웨어가 제대로 동작을 안한다."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"import { useAuthStore } from \"~/store/auth\";\n\nexport default defineNuxtRouteMiddleware((to, from) => {\n\n    const authStore = useAuthStore();\n    const nonAuthPages = ['index', 'login'];\n    if (authStore.isAuthenticated) {\n        if (nonAuthPages.includes(to.name)) {\n            return navigateTo('/dashboard');\n        }\n    } else {\n        if (!nonAuthPages.includes(to.name)) {\n            return navigateTo('/login');\n        }\n    }\n}\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"import { useAuthStore } from \"~/store/auth\";\n\nexport default defineNuxtRouteMiddleware((to, from) => {\n\n    const authStore = useAuthStore();\n    const nonAuthPages = ['index', 'login'];\n    if (authStore.isAuthenticated) {\n        if (nonAuthPages.includes(to.name)) {\n            return navigateTo('/dashboard');\n        }\n    } else {\n        if (!nonAuthPages.includes(to.name)) {\n            return navigateTo('/login');\n        }\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"위 코드를 보면 로그인하면 index, login 페이지 접근 못하게, 로그인 안하면 index, login을 제외한 나머지 페이지 접근 못하게 코드를 짰다."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"로그인한 상태에서는 organization으로 접근을 해야하는데 login 페이지를 거쳐서 dashboard로 이동을 한다."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"원인을 살펴보니 ssr에서 localStorage에 접근을 못하여 예상하지 못한 로직으로 흐름이 발생한거였다. (server-side에서는 cookie에만 접근이 가능하다.)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]},{"type":"element","tag":"h2","props":{"id":"localstorage에-auth정보-저장-시-흐름-isauthenticated는-true"},"children":[{"type":"text","value":"localStorage에 auth정보 저장 시 흐름 (isAuthenticated는 true)"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"organization 페이지에 접근\n"},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"server-side에서 middleware 동작\n"},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"이때 server-side에서는 localstorage에 접근을 못하니까 authStore 정보를 못 얻어온다."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"navigateTo(’/login’)이 실행된다."}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"login 페이지 접근\n"},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"server-side에서 middleware가 동작\n"},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"마찬가지로 server-side에서는 localstorage에 접근을 못하니까 authStore 정보를 못 얻어온다."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"navigateTo(’/login’)이 실행된다."}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"같은 페이지로 리다이렉트 됐기 때문에 더이상 ssr은 실행되지 않고 csr이 실행된다."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"login 화면이 렌더링\n"},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"client-side에서 middleware 동작\n"},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"csr에서는 localstorage에 접근이 가능하기 때문에 authStore 정보를 얻어옴"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"nonAuthPages에 포함됨"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"navigateTo(’dashboard’)이 실행된다."}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"dashboard 화면이 렌더링 (client-side에서 middleware 동작은 생략)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"SSR 환경에서의 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"navigateTo"}]},{"type":"text","value":"는 먼저 서버 측에서 처리되고 그 후 클라이언트 측에서 렌더링된다."},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n반면, CSR 환경에서의 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"navigateTo"}]},{"type":"text","value":"는 클라이언트 측에서만 처리되며, 서버 측 처리는 발생하지 않는다."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]},{"type":"element","tag":"img","props":{"src":"/blog/images/0d719197-73b4-4115-bf27-fccd19fdecbe.png"},"children":[]},{"type":"element","tag":"hr","props":{},"children":[]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"localstorage에-auth정보-저장-시-흐름-isauthenticated는-true","depth":2,"text":"localStorage에 auth정보 저장 시 흐름 (isAuthenticated는 true)"}]}},"_type":"markdown","_id":"content:posts:9ecb10c2-fa24-449c-ac39-8553ee942084.md","_source":"content","_file":"posts/9ecb10c2-fa24-449c-ac39-8553ee942084.md","_extension":"md"},{"_path":"/posts/79fae84a-5e7f-4cb1-a14f-6f6db7629ec0","_dir":"posts","_draft":false,"_partial":false,"_locale":"","title":"javascript this","description":"자신이 속한 객체 또는 자신이 생성할 인스턴스를 가르키는 자기 참조 변수(self-referencing variable)다. this를 통해 자신이 속한 객체 또는 자신이 생성할 인스턴스의 프로퍼티나 메서드를 참조할 수 있다.","tags":["javascript"],"date":"2024-01-23T00:00:00.000Z","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"자신이 속한 객체 또는 자신이 생성할 인스턴스를 가르키는 자기 참조 변수(self-referencing variable)다. this를 통해 자신이 속한 객체 또는 자신이 생성할 인스턴스의 프로퍼티나 메서드를 참조할 수 있다."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"this 바인딩은 함수 호출 방식에 의해 동적으로 결정된다."}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"// 객체 리터럴\nconst circle = {\n    redius: 5,\n    getDiameter() {\n        // this는 메서드를 호출한 객체를 가리킨다.\n        return 2 * this.radius\n    }\n}\nconsole.log(circle.getDiameter()); // 10\n\n\n// 생성자 함수\nfunction Circle(radius) {\n    // this는 생성자 함수가 생성할 인스턴스를 가르킨다.\n    this.radius = radius;\n}\nCircle.prototype.getDiameter = function() {\n    //this는 생성자 함수가 생성할 인스턴스를 가르킨다.\n    return 2 * this.radius;\n}\n\n\n// 인스턴스 생성\nconst circle = new Circe(5);\nconsole.log(circle.getDiameter());\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// 객체 리터럴\nconst circle = {\n    redius: 5,\n    getDiameter() {\n        // this는 메서드를 호출한 객체를 가리킨다.\n        return 2 * this.radius\n    }\n}\nconsole.log(circle.getDiameter()); // 10\n\n\n// 생성자 함수\nfunction Circle(radius) {\n    // this는 생성자 함수가 생성할 인스턴스를 가르킨다.\n    this.radius = radius;\n}\nCircle.prototype.getDiameter = function() {\n    //this는 생성자 함수가 생성할 인스턴스를 가르킨다.\n    return 2 * this.radius;\n}\n\n\n// 인스턴스 생성\nconst circle = new Circe(5);\nconsole.log(circle.getDiameter());\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"클래스 기반 언어에서는 this는 언제나 클래스가 생성하는 인스턴스를 가리킨다. 하지만 자바스크립트의 this는 함수가 호출되는 방식에 따라 동적으로 결정된다."}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"// this는 함수 호출 방식에 따라 동적으로 결정 됨.\nconst foo = function() {\n    console.log(this);\n}\n\n// 1. 일반 함수 호출\nfoo() // window\n\n\n// 2. 메서드 호출\nconst obj = { foo };\nobj.foo(); // obj\n\n// 3. 생성자 함수 호출\nnew foo(); // foo {}\n\n// 4. apply/call/bind 메서드에 의한 간접 호출\nconst bar = {name: 'bar'};\nfoo.call(bar); // bar\nfoo.apply(bar); //bar\nfoo.bind(bar)(); //bar\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// this는 함수 호출 방식에 따라 동적으로 결정 됨.\nconst foo = function() {\n    console.log(this);\n}\n\n// 1. 일반 함수 호출\nfoo() // window\n\n\n// 2. 메서드 호출\nconst obj = { foo };\nobj.foo(); // obj\n\n// 3. 생성자 함수 호출\nnew foo(); // foo {}\n\n// 4. apply/call/bind 메서드에 의한 간접 호출\nconst bar = {name: 'bar'};\nfoo.call(bar); // bar\nfoo.apply(bar); //bar\nfoo.bind(bar)(); //bar\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:posts:79fae84a-5e7f-4cb1-a14f-6f6db7629ec0.md","_source":"content","_file":"posts/79fae84a-5e7f-4cb1-a14f-6f6db7629ec0.md","_extension":"md"},{"_path":"/posts/7516dc85-4ccc-4f99-afc1-22f8115737df","_dir":"posts","_draft":false,"_partial":false,"_locale":"","title":"Call, Apply, Bind","description":"Call, Apply, Bind는 this와 관련이 있다. this를 특정 객체에 명시적으로 바인딩 시키는 메소드이다.","tags":["javascript"],"date":"2024-01-15T00:00:00.000Z","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Call, Apply, Bind는 this와 관련이 있다. this를 특정 객체에 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"명시적으로 바인딩"}]},{"type":"text","value":" 시키는 메소드이다."}]},{"type":"element","tag":"h3","props":{"id":"먼저-call-apply를-코드로-살펴-보자"},"children":[{"type":"text","value":"먼저 Call, Apply를 코드로 살펴 보자"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"const seungyoon = {\n  name: 'seungyoon',\n}\n\nfunction greeting(city, hobby) {\n  console.log(`Hello my name is ${this.name}, I live in ${city}. my hobby is ${hobby}.`);\n}\n\ngreeting('seoul', 'listening to music'); // Hello my name is , I live in seoul. my hobby is listening to music.\ngreeting.apply(seungyoon, ['seoul', 'listening to music']); // Hello my name is seungyoon, I live in seoul. my hobby is listening to music.\ngreeting.call(seungyoon, 'seoul', 'listening to music'); // Hello my name is seungyoon, I live in seoul. my hobby is listening to music\n\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const seungyoon = {\n  name: 'seungyoon',\n}\n\nfunction greeting(city, hobby) {\n  console.log(`Hello my name is ${this.name}, I live in ${city}. my hobby is ${hobby}.`);\n}\n\ngreeting('seoul', 'listening to music'); // Hello my name is , I live in seoul. my hobby is listening to music.\ngreeting.apply(seungyoon, ['seoul', 'listening to music']); // Hello my name is seungyoon, I live in seoul. my hobby is listening to music.\ngreeting.call(seungyoon, 'seoul', 'listening to music'); // Hello my name is seungyoon, I live in seoul. my hobby is listening to music\n\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"이렇게 this 특정 객체에 명시적으로 바인딩 시키고 싶을 때 call, apply를 사용하면 된다."}]},{"type":"element","tag":"img","props":{"src":"/blog/images/acd2bb94-e8aa-4c35-a5b3-0934fe18cbc2.png"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"(여기서 call과 apply는 기능은 같지만 넘겨받는 인자의 형식만 다르다. call과 다르게 apply는 인자를 배열 형태로 받는다.)"}]},{"type":"element","tag":"h3","props":{"id":"나머지-bind-함수를-살펴보자"},"children":[{"type":"text","value":"나머지 bind 함수를 살펴보자."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"이 함수는 call apply와 다르게 함수를 즉시 실행하지 않는다."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"아래 코드와 같이 변수에 담아 호출 할 수가 있다."}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"const seungyoon = {\n  name: 'seungyoon',\n}\n\nfunction greeting(city, hobby) {\n  console.log(`Hello my name is ${this.name}, I live in ${city}. my hobby is ${hobby}.`);\n}\n\nconst seungyoonGreeting = greeting.bind(seungyoon);\nseungyoonGreeting('seuol', 'listening to music'); // Hello my name is seungyoon, I live in seuol. my hobby is listening to music.\n\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const seungyoon = {\n  name: 'seungyoon',\n}\n\nfunction greeting(city, hobby) {\n  console.log(`Hello my name is ${this.name}, I live in ${city}. my hobby is ${hobby}.`);\n}\n\nconst seungyoonGreeting = greeting.bind(seungyoon);\nseungyoonGreeting('seuol', 'listening to music'); // Hello my name is seungyoon, I live in seuol. my hobby is listening to music.\n\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"먼저-call-apply를-코드로-살펴-보자","depth":3,"text":"먼저 Call, Apply를 코드로 살펴 보자"},{"id":"나머지-bind-함수를-살펴보자","depth":3,"text":"나머지 bind 함수를 살펴보자."}]}},"_type":"markdown","_id":"content:posts:7516dc85-4ccc-4f99-afc1-22f8115737df.md","_source":"content","_file":"posts/7516dc85-4ccc-4f99-afc1-22f8115737df.md","_extension":"md"},{"_path":"/posts/38527f39-69f6-4663-ba58-351831ed48b4","_dir":"posts","_draft":false,"_partial":false,"_locale":"","title":"nuxt3 $fetch","description":"nuxt3에서는 $fetch는 ofetch라는 라이브러리를 사용하고 있다. (ofetch는 node, browser 환경 두군데서 같이 사용할 수 있다.)","tags":["nuxt","axios"],"date":"2024-01-22T00:00:00.000Z","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"nuxt3에서는 $fetch는 ofetch라는 라이브러리를 사용하고 있다. (ofetch는 node, browser 환경 두군데서 같이 사용할 수 있다.)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"그래서 기존 axios로 설정된 코드들을 뜯어 고쳤다."}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"// 기존\nimport axios from 'axios';\nimport type { AxiosInstance } from 'axios';\nimport {useAuthStore} from \"~/store/auth\";\n\nexport default defineNuxtPlugin(nuxtApp => {\n    const config = useRuntimeConfig().public;\n    const clientId = config.clientId;\n    const clientServer = config.clientServer;\n    const btoaClientInfo = btoa(`${clientId}:${clientServer}`);\n\n    const authStore = useAuthStore();\n    const axiosInstance: AxiosInstance = axios.create({\n        baseURL: config.BASE_URL,\n    });\n\n    axiosInstance.interceptors.request.use((config) => {\n        if (authStore.isAuthenticated) {\n            config.headers.Authorization = `Bearer ${authStore.token}`;\n        } else {\n            config.headers.Authorization = `Basic ${btoaClientInfo}`;\n        }\n        return config;\n    });\n\n    nuxtApp.provide('axios', axiosInstance);\n});\n\n// 수정\nimport { useAuthStore } from \"~/store/auth\";\n\nexport default defineNuxtPlugin(nuxtApp => {\n    const config = useRuntimeConfig().public;\n    const clientId = config.clientId;\n    const clientServer = config.clientServer;\n    const btoaClientInfo = btoa(`${clientId}:${clientServer}`);\n\n    const apiFetch = $fetch.create({\n        baseURL: config.BASE_URL,\n        onRequest({ options }) {\n            const authStore = useAuthStore();\n            if (authStore.isAuthenticated) {\n                options.headers = {\n                    Authorization: `Bearer ${authStore.token}`\n                };\n            } else {\n                options.headers = {\n                    Authorization: `Basic ${btoaClientInfo}`\n                };\n            }\n        }\n    })\n    \n    nuxtApp.provide('apiFetch', apiFetch);\n});\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// 기존\nimport axios from 'axios';\nimport type { AxiosInstance } from 'axios';\nimport {useAuthStore} from \"~/store/auth\";\n\nexport default defineNuxtPlugin(nuxtApp => {\n    const config = useRuntimeConfig().public;\n    const clientId = config.clientId;\n    const clientServer = config.clientServer;\n    const btoaClientInfo = btoa(`${clientId}:${clientServer}`);\n\n    const authStore = useAuthStore();\n    const axiosInstance: AxiosInstance = axios.create({\n        baseURL: config.BASE_URL,\n    });\n\n    axiosInstance.interceptors.request.use((config) => {\n        if (authStore.isAuthenticated) {\n            config.headers.Authorization = `Bearer ${authStore.token}`;\n        } else {\n            config.headers.Authorization = `Basic ${btoaClientInfo}`;\n        }\n        return config;\n    });\n\n    nuxtApp.provide('axios', axiosInstance);\n});\n\n// 수정\nimport { useAuthStore } from \"~/store/auth\";\n\nexport default defineNuxtPlugin(nuxtApp => {\n    const config = useRuntimeConfig().public;\n    const clientId = config.clientId;\n    const clientServer = config.clientServer;\n    const btoaClientInfo = btoa(`${clientId}:${clientServer}`);\n\n    const apiFetch = $fetch.create({\n        baseURL: config.BASE_URL,\n        onRequest({ options }) {\n            const authStore = useAuthStore();\n            if (authStore.isAuthenticated) {\n                options.headers = {\n                    Authorization: `Bearer ${authStore.token}`\n                };\n            } else {\n                options.headers = {\n                    Authorization: `Basic ${btoaClientInfo}`\n                };\n            }\n        }\n    })\n    \n    nuxtApp.provide('apiFetch', apiFetch);\n});\n"}]}]},{"type":"element","tag":"h2","props":{"id":"참고"},"children":[{"type":"text","value":"참고"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://jongmin4943.tistory.com/entry/Nuxt3-fetch-useAsyncData-useFetch-%EC%9D%98-%EC%B0%A8%EC%9D%B4","rel":["nofollow"]},"children":[{"type":"text","value":"https://jongmin4943.tistory.com/entry/Nuxt3-fetch-useAsyncData-useFetch-의-차이"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"참고","depth":2,"text":"참고"}]}},"_type":"markdown","_id":"content:posts:38527f39-69f6-4663-ba58-351831ed48b4.md","_source":"content","_file":"posts/38527f39-69f6-4663-ba58-351831ed48b4.md","_extension":"md"},{"_path":"/posts/b083a0e2-3166-41dc-ad9c-3e9b6383a6c6","_dir":"posts","_draft":false,"_partial":false,"_locale":"","title":"객체지향 프로그래밍 (with. ES6)","description":"프로그래밍의 설계 패러다임 중 하나로, 현실 세계를 프로그램 설계에 반영한다는 개념을 기반으로 접근하는 방법","tags":["ES6"],"date":"2023-12-28T00:00:00.000Z","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"프로그래밍의 설계 패러다임 중 하나로, 현실 세계를 프로그램 설계에 반영한다는 개념을 기반으로 접근하는 방법"}]},{"type":"element","tag":"h3","props":{"id":"클래스와-인스턴스객체"},"children":[{"type":"text","value":"클래스와 인스턴스(객체)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"클래스는 일종의 설계도이고 인스턴스는 클래스를 사용하여 생성한 실제 물건이다."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"스마트폰(클래스), 아이폰(인스턴스), 갤럭시(인스턴스)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"자동차(클래스), 소나타(인스턴스), 그랜져(인스턴스)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"위 정의가 꼭 클래스, 인스턴스라는 이야기는 아니다. 스마트폰, 자동차 또한 인스턴스가 될 수 있다."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"무선 전화기(클래스) - 스마트폰(인스턴스)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"이동수단(클래스) - 자동차(인스턴스)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"마찬가지로 무선 전화기, 이동수단 또한 꼭 클래스가 아닐 수 있다."}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"class SmartPhone {\n  constructor(name) {\n    this.name = name;\n  }\n\n  getName() {\n    return this.name;\n  }\n}\n\nlet galaxy = new SmartPhone(\"Galaxy\");\nlet iphone = new SmartPhone(\"Iphone\");\n\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"class SmartPhone {\n  constructor(name) {\n    this.name = name;\n  }\n\n  getName() {\n    return this.name;\n  }\n}\n\nlet galaxy = new SmartPhone(\"Galaxy\");\nlet iphone = new SmartPhone(\"Iphone\");\n\n"}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"+ 이렇게 상위 개념을 추적하는 행위(아이폰 -> 스마트폰 -> 전화기)를 추상화(Abstarction)라고 한다. 추상은 객체가 가지고 있는 여러 가지 속성 중에서 특정한 속성을 가려내어 "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"포착하는"}]},{"type":"text","value":" 것을 의미한다. (필요한 관점만을 추출하는 행위)"}]}]},{"type":"element","tag":"h2","props":{"id":"객체지향-프로그래밍은-아래의-특징을-가지고-있다"},"children":[{"type":"text","value":"객체지향 프로그래밍은 아래의 특징을 가지고 있다."}]},{"type":"element","tag":"h3","props":{"id":"상속inheritance"},"children":[{"type":"text","value":"상속(inheritance)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"속성 및 기능을 물려받아 확장 할 수 있다."}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"class Car {\n  axle() {\n    console.log('이동');\n  }\n  break() {\n    console.log('멈춤');\n  }\n}\n\nclass Hyundai extends Car {\n  // Car의 기능을 물려 받음(axle, break)\n  companyName = '현대';\n  country = '대한민국';\n}\n\nclass Sonata extends Hyundai {\n  // Car의 기능을 물려 받음(axle, break)\n  // Hyundai 속성을 물려 받음(compnayName, country)\n  modelName = '소나타';\n\n}\n\nlet sonata2020 = new Sonata();\nconsole.log(sonata2020.companyName); // 현대\nconsole.log(sonata2020.country); // 대한민국\nsonata2020.axle(); // 이동\nsonata2020.break(); // 멈춤\n\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"class Car {\n  axle() {\n    console.log('이동');\n  }\n  break() {\n    console.log('멈춤');\n  }\n}\n\nclass Hyundai extends Car {\n  // Car의 기능을 물려 받음(axle, break)\n  companyName = '현대';\n  country = '대한민국';\n}\n\nclass Sonata extends Hyundai {\n  // Car의 기능을 물려 받음(axle, break)\n  // Hyundai 속성을 물려 받음(compnayName, country)\n  modelName = '소나타';\n\n}\n\nlet sonata2020 = new Sonata();\nconsole.log(sonata2020.companyName); // 현대\nconsole.log(sonata2020.country); // 대한민국\nsonata2020.axle(); // 이동\nsonata2020.break(); // 멈춤\n\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"이렇게 상속을 하게 되면 중복 코드를 피할 수 있다."}]},{"type":"element","tag":"h3","props":{"id":"다형성polymorphism"},"children":[{"type":"text","value":"다형성(Polymorphism)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"어떤 하나의 변수명이나 함수명이 상황에 따라서 다르게 해석될 수 있는 것을 의미 (형태가 같은데 다른 기능을 하는 것)"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"class Animal {\n  sound() {\n    console.log('동물 울음소리를 만들어주세요.');\n  }\n}\n\nclass Cat extends Animal {\n  sound() {\n    console.log('야옹');\n  }\n}\n\nclass Dog extends Animal {\n  sound() {\n    console.log('멍멍');\n  }\n}\n\nlet Leo = new Cat();\nlet Bella = new Dog();\n\nLeo.sound(); // 야옹\nBella.sound(); // 멍멍\n\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"class Animal {\n  sound() {\n    console.log('동물 울음소리를 만들어주세요.');\n  }\n}\n\nclass Cat extends Animal {\n  sound() {\n    console.log('야옹');\n  }\n}\n\nclass Dog extends Animal {\n  sound() {\n    console.log('멍멍');\n  }\n}\n\nlet Leo = new Cat();\nlet Bella = new Dog();\n\nLeo.sound(); // 야옹\nBella.sound(); // 멍멍\n\n"}]}]},{"type":"element","tag":"h3","props":{"id":"캡슐화encapsulation"},"children":[{"type":"text","value":"캡슐화(Encapsulation)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"기본적으로 관련된 여러 가지 정보를 하나의 틀 안에 담는 것을 의미한다. 아래 코드를 보면 변수들과 메서드가 서로 관련된 정보가 되고 클래스(Capsule)이 이것을 담는 하나의 큰 틀이라고 할 수 있다. 여기에서 중요한 것은 은닉화, 정보의 공개 여부이다. 정보 은닉(Information hiding)의 개념이 바로 이 부분을 담당한다."}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"// 캡슐화 (속성, 메소드)\npublic class Capsule {\n  // 은닉화\n  private String name;\n  private String id;\n\n  // 은닉화한 정보 제어 할 수 있는 메소드\n  // 외부에 공개\n  public String getName() {\n    return this.name;\n  }\n  public String setName(String name) {\n    return this.name = name;\n  }\n  public String getId() {\n    return this.id;\n  }\n  public String setName(String id) {\n    return this.id = id;\n  }\n}\n\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// 캡슐화 (속성, 메소드)\npublic class Capsule {\n  // 은닉화\n  private String name;\n  private String id;\n\n  // 은닉화한 정보 제어 할 수 있는 메소드\n  // 외부에 공개\n  public String getName() {\n    return this.name;\n  }\n  public String setName(String name) {\n    return this.name = name;\n  }\n  public String getId() {\n    return this.id;\n  }\n  public String setName(String id) {\n    return this.id = id;\n  }\n}\n\n"}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h3","props":{"id":"참고"},"children":[{"type":"text","value":"참고"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"인사이드 자바스크립트"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://evan-moon.github.io/2019/08/24/what-is-object-oriented-programming/","rel":["nofollow"]},"children":[{"type":"text","value":"https://evan-moon.github.io/2019/08/24/what-is-object-oriented-programming/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://www.opentutorials.org/module/2495/14037","rel":["nofollow"]},"children":[{"type":"text","value":"www.opentutorials.org/module/2495/14037"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://victorydntmd.tistory.com/117","rel":["nofollow"]},"children":[{"type":"text","value":"https://victorydntmd.tistory.com/117"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"클래스와-인스턴스객체","depth":3,"text":"클래스와 인스턴스(객체)"},{"id":"객체지향-프로그래밍은-아래의-특징을-가지고-있다","depth":2,"text":"객체지향 프로그래밍은 아래의 특징을 가지고 있다.","children":[{"id":"상속inheritance","depth":3,"text":"상속(inheritance)"},{"id":"다형성polymorphism","depth":3,"text":"다형성(Polymorphism)"},{"id":"캡슐화encapsulation","depth":3,"text":"캡슐화(Encapsulation)"},{"id":"참고","depth":3,"text":"참고"}]}]}},"_type":"markdown","_id":"content:posts:b083a0e2-3166-41dc-ad9c-3e9b6383a6c6.md","_source":"content","_file":"posts/b083a0e2-3166-41dc-ad9c-3e9b6383a6c6.md","_extension":"md"},{"_path":"/posts/d35aaedb-0f64-4f7f-8c76-97e2069cbadd","_dir":"posts","_draft":false,"_partial":false,"_locale":"","title":"nuxt3 정적 사이트 github page에서 js파일들 404에러 날때","description":"githubpage에 generage해서 올렸는데 자꾸 에러가 나는거다… 이유를 몰라서 밤새 검색했는데도 답이 안나오고","tags":["nuxt"],"date":"2024-01-03T00:00:00.000Z","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"githubpage에 generage해서 올렸는데 자꾸 에러가 나는거다… 이유를 몰라서 밤새 검색했는데도 답이 안나오고"}]},{"type":"element","tag":"img","props":{"src":"/blog/images/b5c2868d-a46c-41a7-923b-36e476bd7dd7.png"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"결국 nuxt github issue에서 찾았다 ㅠㅠ"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/nuxt/nuxt/issues/10113","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/nuxt/nuxt/issues/10113"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":".nojeklly"}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"\"deploy\": \"nuxt generate && touch .output/public/.nojekyll && gh-pages --dotfiles -d .output/public”\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"\"deploy\": \"nuxt generate && touch .output/public/.nojekyll && gh-pages --dotfiles -d .output/public”\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"결론은 generate하고 프로젝트 폴더안에 .nojekyll 파일이 있어야 되는거였다. (github page는 기본적으로 jekyll이라는 정적 사이트 생성기를 사용함)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":".nojekyll 파일이 있으면 github 페이지는 jekyll 처리를 건너뜀."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"오늘의 개발 교훈: github issue를 잘 찾아보자!"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:posts:d35aaedb-0f64-4f7f-8c76-97e2069cbadd.md","_source":"content","_file":"posts/d35aaedb-0f64-4f7f-8c76-97e2069cbadd.md","_extension":"md"},{"_path":"/posts/e9a8a610-ff29-4403-bbb0-55a5438aad7c","_dir":"posts","_draft":false,"_partial":false,"_locale":"","title":"formData 전송 방법","description":"axios를 $fetch로 변경하면서 로그인시 문제가 발생하였다.","tags":["axios","$fetch"],"date":"2024-01-18T00:00:00.000Z","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"axios를 $fetch로 변경하면서 로그인시 문제가 발생하였다."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"기존에 axios를 사용할때는 아래와 같이 사용중이고"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"await axios.post(url, qs.stringfy(payload));\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"await axios.post(url, qs.stringfy(payload));\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"전달된 형태를 보니 Form Data로 전송이 되고 있다."}]},{"type":"element","tag":"img","props":{"src":"/blog/images/2091dba8-3762-44f0-a957-98cee3b69951.png"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"$fetch는 아래와 같이 사용을 했는데"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"await apiFetch(url, {\n    method: 'POST',\n    body: qs.stringfy(payload)\n});\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"await apiFetch(url, {\n    method: 'POST',\n    body: qs.stringfy(payload)\n});\n"}]}]},{"type":"element","tag":"img","props":{"src":"/blog/images/b6799e3b-456f-4570-ad8b-20caed5a1e84.png"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"이렇게 전달이 돼서 로그인이 안되는것이다."}]},{"type":"element","tag":"h2","props":{"id":"_2가지-해결법"},"children":[{"type":"text","value":"2가지 해결법"}]},{"type":"element","tag":"h3","props":{"id":"_1-header에-content-type-applicationx-www-form-urlencoded-넣어주기"},"children":[{"type":"text","value":"1. header에 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"'Content-Type': 'application/x-www-form-urlencoded'"}]},{"type":"text","value":"  넣어주기"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"$fetch(url, {\n    method: 'POST',\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        },\n    body: qs.stringfy(payload)\n})\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"$fetch(url, {\n    method: 'POST',\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        },\n    body: qs.stringfy(payload)\n})\n"}]}]},{"type":"element","tag":"h3","props":{"id":"_2-new-urlsearchparams-사용"},"children":[{"type":"text","value":"2. "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"new URLSearchParams"}]},{"type":"text","value":" 사용"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"원래는 new FormData 만들어서 일일히 append 해줘야하는데 위 함수로 간편하게 만들어준다."}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"$fetch(url, {\n    method: 'POST',\n    body: new URLSearchParams(qs.stringfy(payload))\n});\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"$fetch(url, {\n    method: 'POST',\n    body: new URLSearchParams(qs.stringfy(payload))\n});\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"나는 그냥 1번으로 사용하였다."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Axios를 사용할 때 별도의 설정이 없으면, "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"qs.stringify"}]},{"type":"text","value":"를 사용하여 변환된 데이터는 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"application/x-www-form-urlencoded"}]},{"type":"text","value":" 형식으로 전송된다."}]}]},{"type":"element","tag":"h3","props":{"id":"참고"},"children":[{"type":"text","value":"참고"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://inpa.tistory.com/entry/JS-%F0%9F%93%9A-FormData-%EC%A0%95%EB%A6%AC-fetch-api","rel":["nofollow"]},"children":[{"type":"text","value":"https://inpa.tistory.com/entry/JS-📚-FormData-정리-fetch-api"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"_2가지-해결법","depth":2,"text":"2가지 해결법","children":[{"id":"_1-header에-content-type-applicationx-www-form-urlencoded-넣어주기","depth":3,"text":"1. header에 'Content-Type': 'application/x-www-form-urlencoded'  넣어주기"},{"id":"_2-new-urlsearchparams-사용","depth":3,"text":"2. new URLSearchParams 사용"},{"id":"참고","depth":3,"text":"참고"}]}]}},"_type":"markdown","_id":"content:posts:e9a8a610-ff29-4403-bbb0-55a5438aad7c.md","_source":"content","_file":"posts/e9a8a610-ff29-4403-bbb0-55a5438aad7c.md","_extension":"md"},{"_path":"/posts/ef65e77b-7018-4854-8ba1-e14fc2a8fba9","_dir":"posts","_draft":false,"_partial":false,"_locale":"","title":"Property \"query\" was accessed during render but is not defined on instance","description":"","tags":["nuxt"],"date":"2024-01-05T00:00:00.000Z","body":{"type":"root","children":[{"type":"element","tag":"pre","props":{"className":["language-css"],"code":"// AS-IS\nconst { query } = defineProps();\n\n// TO-BE\nconst { query } = defineProps(['query']);\n\n","language":"css","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// AS-IS\nconst { query } = defineProps();\n\n// TO-BE\nconst { query } = defineProps(['query']);\n\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:posts:ef65e77b-7018-4854-8ba1-e14fc2a8fba9.md","_source":"content","_file":"posts/ef65e77b-7018-4854-8ba1-e14fc2a8fba9.md","_extension":"md"},{"_path":"/posts/f8128924-3314-4bbc-9acd-4e7fcab8969a","_dir":"posts","_draft":false,"_partial":false,"_locale":"","title":"화살표 함수(=>)","description":"function 키워드 대신 화살표(=>)를 사용하는 방식의 함수","tags":["ES6"],"date":"2024-01-14T00:00:00.000Z","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"function 키워드 대신 화살표(=>)를 사용하는 방식의 함수"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"// function\nfunction f() {}\n\n// 화살표 함수\nconst f = () => {};\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// function\nfunction f() {}\n\n// 화살표 함수\nconst f = () => {};\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"※ 그렇다고 모든 경우에 화살표 함수를 사용하면 안 됨 (아래에서 확인)"}]},{"type":"element","tag":"h2","props":{"id":"문법"},"children":[{"type":"text","value":"문법"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"() => {} // 매개변수가 없을 때\nx => {} // 매개변수가 한 개인 경우, 소괄호 생략 가능\n(x, y) => {} // 매개변수가 여러 개인 경우, 소괄호 생략 불가\n\nx => { return x*x } // 일반적인 함수 사용\nx => x*x // 한 줄 구문이라면 중괄호 생략 가능 (암묵적으로 return)\n\n() => { return { a: 1 }} // 일반적인 함수 사용\n() => ({ a: 1 }) // 객체 반환 시 소괄호를 사용\n\n// multi line\n() => {\n    const x = 10;\n    return x*x;\n}\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"() => {} // 매개변수가 없을 때\nx => {} // 매개변수가 한 개인 경우, 소괄호 생략 가능\n(x, y) => {} // 매개변수가 여러 개인 경우, 소괄호 생략 불가\n\nx => { return x*x } // 일반적인 함수 사용\nx => x*x // 한 줄 구문이라면 중괄호 생략 가능 (암묵적으로 return)\n\n() => { return { a: 1 }} // 일반적인 함수 사용\n() => ({ a: 1 }) // 객체 반환 시 소괄호를 사용\n\n// multi line\n() => {\n    const x = 10;\n    return x*x;\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"일반-함수funciton와-화살표-함수-차이점"},"children":[{"type":"text","value":"일반 함수(funciton)와 화살표 함수(=>) 차이점"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"가장 큰 차이점은 this인데 코드를 보며 확인해 보자."}]},{"type":"element","tag":"h3","props":{"id":"일반-함수function"},"children":[{"type":"text","value":"일반 함수(function)"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"function Prefixer(prefix) {\n  this.prefix = prefix;\n}\nPrefixer.prototype.prefixArray = function (arr) {\n  console.log(this); // Prefixer\n  return arr.map(function (x) {\n    console.log(this); // Window\n    return this.prefix + ' ' + x;\n  });\n};\nvar pre = new Prefixer('Hi');\nconsole.log(pre.prefixArray(['Seungyoon'])); // [\"undefined Seungyoon\"]\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"function Prefixer(prefix) {\n  this.prefix = prefix;\n}\nPrefixer.prototype.prefixArray = function (arr) {\n  console.log(this); // Prefixer\n  return arr.map(function (x) {\n    console.log(this); // Window\n    return this.prefix + ' ' + x;\n  });\n};\nvar pre = new Prefixer('Hi');\nconsole.log(pre.prefixArray(['Seungyoon'])); // [\"undefined Seungyoon\"]\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"위 코드를 보게 되면 map 안에 this를 찍어보면 Window를 가르키고 있다. 기본적으로 내부 함수 this는 Window를 가르킨다."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"생성자 함수와 객체의 메소드를 제외한 모든 함수(내부 함수, 콜백 함수 포함) 내부의 this는 전역 객체(Window)를 가르키기 때문이다."}]}]},{"type":"element","tag":"h3","props":{"id":"화살표-함수"},"children":[{"type":"text","value":"화살표 함수(=>)"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"function Prefixer(prefix) {\n  this.prefix = prefix;\n}\n\nPrefixer.prototype.prefixArray = function (arr) {\n  console.log(this); // Prefixer\n  return arr.map((x) => {\n    console.log(this); // Prexier\n    return this.prefix + ' ' + x;\n  });\n};\nvar pre = new Prefixer('Hi');\nconsole.log(pre.prefixArray(['Seungyoon'])); // [\"Hi Seungyoon\"]\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"function Prefixer(prefix) {\n  this.prefix = prefix;\n}\n\nPrefixer.prototype.prefixArray = function (arr) {\n  console.log(this); // Prefixer\n  return arr.map((x) => {\n    console.log(this); // Prexier\n    return this.prefix + ' ' + x;\n  });\n};\nvar pre = new Prefixer('Hi');\nconsole.log(pre.prefixArray(['Seungyoon'])); // [\"Hi Seungyoon\"]\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"위 코드와 다르게 map 안에 this는 Prexier를 가르킨다. 이는 화살표 함수의 this는 언제나 상위 스코프의 this를 가르키기 때문이다."}]},{"type":"element","tag":"h2","props":{"id":"화살표-함수를-사용해서는-안되는-경우"},"children":[{"type":"text","value":"화살표 함수를 사용해서는 안되는 경우"}]},{"type":"element","tag":"h3","props":{"id":"_1-메소드"},"children":[{"type":"text","value":"1. 메소드"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"bad"}]}]}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"const seungyoon = {\n  firstName: 'kim',\n  lastName: 'seungyoon',\n  getFirstName: () => {\n    return this.firstName;\n  },\n};\n\nconsole.log(seungyoon.getFirstName()); // undefined\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const seungyoon = {\n  firstName: 'kim',\n  lastName: 'seungyoon',\n  getFirstName: () => {\n    return this.firstName;\n  },\n};\n\nconsole.log(seungyoon.getFirstName()); // undefined\n"}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"good"}]}]}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"const seungyoon = {\n  firstName: 'kim',\n  lastName: 'seungyoon',\n  getFirstName: function () {\n    return this.firstName;\n  },\n};\n\nconsole.log(seungyoon.getFirstName()); // kim\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const seungyoon = {\n  firstName: 'kim',\n  lastName: 'seungyoon',\n  getFirstName: function () {\n    return this.firstName;\n  },\n};\n\nconsole.log(seungyoon.getFirstName()); // kim\n"}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"best"}]}]}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"const seungyoon = {\n  firstName: 'kim',\n  lastName: 'seungyoon',\n  getFirstName() {\n    return this.firstName;\n  },\n};\n\nconsole.log(seungyoon.getFirstName()); // kim\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const seungyoon = {\n  firstName: 'kim',\n  lastName: 'seungyoon',\n  getFirstName() {\n    return this.firstName;\n  },\n};\n\nconsole.log(seungyoon.getFirstName()); // kim\n"}]}]},{"type":"element","tag":"h3","props":{"id":"_2-prototype"},"children":[{"type":"text","value":"2. prototype"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"bad"}]}]}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"const Person = function (firstName, lastName) {\n  this.firstName = firstName;\n  this.lastName = lastName;\n};\n\nPerson.prototype.getFullName = () => {\n  return this.firstName + ' ' + this.lastName;\n};\n\nconst seungyoon = new Person('seungyoon', 'kim');\nconsole.log(seungyoon.getFullName()); // undefined undefined\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const Person = function (firstName, lastName) {\n  this.firstName = firstName;\n  this.lastName = lastName;\n};\n\nPerson.prototype.getFullName = () => {\n  return this.firstName + ' ' + this.lastName;\n};\n\nconst seungyoon = new Person('seungyoon', 'kim');\nconsole.log(seungyoon.getFullName()); // undefined undefined\n"}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"good"}]}]}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"const Person = function (firstName, lastName) {\n  this.firstName = firstName;\n  this.lastName = lastName;\n};\n\nPerson.prototype.getFullName = () => {\n  return this.firstName + ' ' + this.lastName;\n};\n\nconst seungyoon = new Person('seungyoon', 'kim');\nconsole.log(seungyoon.getFullName()); // undefined undefined\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const Person = function (firstName, lastName) {\n  this.firstName = firstName;\n  this.lastName = lastName;\n};\n\nPerson.prototype.getFullName = () => {\n  return this.firstName + ' ' + this.lastName;\n};\n\nconst seungyoon = new Person('seungyoon', 'kim');\nconsole.log(seungyoon.getFullName()); // undefined undefined\n"}]}]},{"type":"element","tag":"h3","props":{"id":"_3-생성자-함수"},"children":[{"type":"text","value":"3. 생성자 함수"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"const Person1 = () => {};\nconst Person2 = function () {};\n\n// 화살표 함수는 prototype 프로퍼티가 없음\nconsole.log(Person1.prototype); // undefined\n// 일반 함수는 prototype 내 생성자 함수가 있음\nconsole.log(Person2.prototype); // { constructor...}\n\nconst person1 = new Person1(); // TypeError: Person1 is not a constructor\nconst person2 = new Person2();\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const Person1 = () => {};\nconst Person2 = function () {};\n\n// 화살표 함수는 prototype 프로퍼티가 없음\nconsole.log(Person1.prototype); // undefined\n// 일반 함수는 prototype 내 생성자 함수가 있음\nconsole.log(Person2.prototype); // { constructor...}\n\nconst person1 = new Person1(); // TypeError: Person1 is not a constructor\nconst person2 = new Person2();\n"}]}]},{"type":"element","tag":"h3","props":{"id":"_4-addeventlistener-함수의-콜백-함수"},"children":[{"type":"text","value":"4. addEventListener 함수의 콜백 함수"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"bad"}]}]}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"var button = document.getElementById('button');\n\nbutton.addEventListener('click', () => {\n  console.log(this); // window\n  this.innerHTML = 'Clicked Button';\n});\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"var button = document.getElementById('button');\n\nbutton.addEventListener('click', () => {\n  console.log(this); // window\n  this.innerHTML = 'Clicked Button';\n});\n"}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"good"}]}]}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"var button = document.getElementById('button');\n\nbutton.addEventListener('click', function () {\n  console.log(this); // button\n  this.innerHTML = 'Clicked Button';\n});\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"var button = document.getElementById('button');\n\nbutton.addEventListener('click', function () {\n  console.log(this); // button\n  this.innerHTML = 'Clicked Button';\n});\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h3","props":{"id":"참고"},"children":[{"type":"text","value":"참고:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://poiemaweb.com/es6-arrow-function","rel":["nofollow"]},"children":[{"type":"text","value":"https://poiemaweb.com/es6-arrow-function"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"문법","depth":2,"text":"문법"},{"id":"일반-함수funciton와-화살표-함수-차이점","depth":2,"text":"일반 함수(funciton)와 화살표 함수(=>) 차이점","children":[{"id":"일반-함수function","depth":3,"text":"일반 함수(function)"},{"id":"화살표-함수","depth":3,"text":"화살표 함수(=>)"}]},{"id":"화살표-함수를-사용해서는-안되는-경우","depth":2,"text":"화살표 함수를 사용해서는 안되는 경우","children":[{"id":"_1-메소드","depth":3,"text":"1. 메소드"},{"id":"_2-prototype","depth":3,"text":"2. prototype"},{"id":"_3-생성자-함수","depth":3,"text":"3. 생성자 함수"},{"id":"_4-addeventlistener-함수의-콜백-함수","depth":3,"text":"4. addEventListener 함수의 콜백 함수"},{"id":"참고","depth":3,"text":"참고:"}]}]}},"_type":"markdown","_id":"content:posts:f8128924-3314-4bbc-9acd-4e7fcab8969a.md","_source":"content","_file":"posts/f8128924-3314-4bbc-9acd-4e7fcab8969a.md","_extension":"md"}]