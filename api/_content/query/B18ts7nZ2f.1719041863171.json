{"_path":"/posts/395ca83a-7b04-4f59-962a-1bc8cc05d1aa","_dir":"posts","_draft":false,"_partial":false,"_locale":"","title":"자바스크립트 - 15. 함수와 일급 객체","description":"일급 객체 조건","tags":["javascript"],"date":"2024-02-22T00:00:00.000Z","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"일급 객체 조건"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"무명의 리터럴로 생성할 수 있다. 즉, 런타임에 생성이 가능하다."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"변수나 자료구조(객체, 배열 등)에 저장할 수 있다."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"함수의 매개변수에 전달할 수 있다."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"함수의 반환값으로 사용할 수 있다."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"// 1. 함수는 무명의 리터럴로 생성할 수 있다.\n// 2. 함수는 변수에 저장할 수 있다.\n// 런타임(할당 단계)에 함수 리터럴이 평가되어 함수 객체가 생성되고 변수에 할당된다.\nconst increase = function (num) {\n    return ++num;\n}\n\nconst decrease = function (num) {\n    return --num;\n}\n\n// 2. 함수는 객체에 저장할 수 있다.\nconst predicates = {increase, decrease};\n\n// 3. 함수의 매개변수에 전달할 수 있다.\n// 4. 함수의 반환값으로 사용할 수 있다.\nfunction makeCount(predicate) {\n    let num = 0;\n    return funtion () {\n        num = predicate(num);\n        return num;\n    }\n}\n\n// 3. 함수는 매개변수에게 함수를 전달할 수 있따.\nconst increaser = makeCounter(predicates.increase);\nincreaser();\nincreaser();\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// 1. 함수는 무명의 리터럴로 생성할 수 있다.\n// 2. 함수는 변수에 저장할 수 있다.\n// 런타임(할당 단계)에 함수 리터럴이 평가되어 함수 객체가 생성되고 변수에 할당된다.\nconst increase = function (num) {\n    return ++num;\n}\n\nconst decrease = function (num) {\n    return --num;\n}\n\n// 2. 함수는 객체에 저장할 수 있다.\nconst predicates = {increase, decrease};\n\n// 3. 함수의 매개변수에 전달할 수 있다.\n// 4. 함수의 반환값으로 사용할 수 있다.\nfunction makeCount(predicate) {\n    let num = 0;\n    return funtion () {\n        num = predicate(num);\n        return num;\n    }\n}\n\n// 3. 함수는 매개변수에게 함수를 전달할 수 있따.\nconst increaser = makeCounter(predicates.increase);\nincreaser();\nincreaser();\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"함수가 일급 객체라는 것은 함수를 객체와 동일하게 사용할 수 있다는 의미다. 객체는 값이므로 함수는 값과 동일하게 취급할 수 있다. 따라서 함수는 값을 사용할 수 있는 곳이라면 어디서든지 리터럴로 정의할 수 있으며 런타임에 함수 객체로 평가된다."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]},{"type":"element","tag":"h2","props":{"id":"함수-객체의-프로퍼티"},"children":[{"type":"text","value":"함수 객체의 프로퍼티"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"함수는 객체다. 따라서 함수도 프로퍼티를 가질 수 있다."}]},{"type":"element","tag":"h3","props":{"id":"arguments-프로퍼티"},"children":[{"type":"text","value":"arguments 프로퍼티"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"매개변수 개수를 확정할 수 없는 가변 인자 함수를 구현할 때 유용"}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"function sum() {\n    const array = Array.prototype.slice.call(arguments);\n    ...\n}\n\nsum(1,2);\nsum(1,2,3);\n\n// ES6에 rest 파라미터 사용하면 됨\nfunction sum(...args) {\n    return args.reduce...\n}\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"function sum() {\n    const array = Array.prototype.slice.call(arguments);\n    ...\n}\n\nsum(1,2);\nsum(1,2,3);\n\n// ES6에 rest 파라미터 사용하면 됨\nfunction sum(...args) {\n    return args.reduce...\n}\n"}]}]},{"type":"element","tag":"h3","props":{"id":"caller-프로퍼티"},"children":[{"type":"text","value":"caller 프로퍼티"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"비표준 프로퍼티. 알 필요 없음"}]},{"type":"element","tag":"h3","props":{"id":"length-프로퍼티"},"children":[{"type":"text","value":"length 프로퍼티"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"매개변수 개수"}]},{"type":"element","tag":"h3","props":{"id":"name-프로퍼티"},"children":[{"type":"text","value":"name 프로퍼티"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"함수 이름"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"ES6이전까지는 비표준 ES6에서 정식 표준"}]},{"type":"element","tag":"h3","props":{"id":"__proto__접근자-프로퍼티"},"children":[{"type":"text","value":"__proto__접근자 프로퍼티"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"[[Prototype]]이라는 내부 슬롯에 간접적으로 접근하기 위한 프로퍼티"}]},{"type":"element","tag":"h3","props":{"id":"prototype-프로퍼티"},"children":[{"type":"text","value":"prototype 프로퍼티"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"생성자 함수로 호출할 수 있는 함수 객체, 즉 constructor만이 소유하는 프로퍼티"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"일반 객체와 생성자 함수로 호출할 수 없는 non-constructor에는 prototype 프로퍼티가 없다."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"(이전 14. 생성자 함수에 의한 객체 생성 참고)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\\n"}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h2","props":{"id":"참고"},"children":[{"type":"text","value":"참고"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"이웅모, 「모던 자바스크립트 Deep Dive」, 위키북스, 2020"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"함수-객체의-프로퍼티","depth":2,"text":"함수 객체의 프로퍼티","children":[{"id":"arguments-프로퍼티","depth":3,"text":"arguments 프로퍼티"},{"id":"caller-프로퍼티","depth":3,"text":"caller 프로퍼티"},{"id":"length-프로퍼티","depth":3,"text":"length 프로퍼티"},{"id":"name-프로퍼티","depth":3,"text":"name 프로퍼티"},{"id":"__proto__접근자-프로퍼티","depth":3,"text":"__proto__접근자 프로퍼티"},{"id":"prototype-프로퍼티","depth":3,"text":"prototype 프로퍼티"}]},{"id":"참고","depth":2,"text":"참고"}]}},"_type":"markdown","_id":"content:posts:395ca83a-7b04-4f59-962a-1bc8cc05d1aa.md","_source":"content","_file":"posts/395ca83a-7b04-4f59-962a-1bc8cc05d1aa.md","_extension":"md"}