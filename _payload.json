[{"data":1,"prerenderedAt":788},["Reactive",2],{"content-query-nydz0E8puB":3},[4,427,450,536],{"_path":5,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":9,"description":10,"tags":11,"date":13,"body":14,"_type":422,"_id":423,"_source":424,"_file":425,"_extension":426},"/posts/f8128924-3314-4bbc-9acd-4e7fcab8969a","posts",false,"","화살표 함수(=>)","function 키워드 대신 화살표(=>)를 사용하는 방식의 함수",[12],"ES6","2024-01-14T00:00:00.000Z",{"type":15,"children":16,"toc":406},"root",[17,24,37,42,48,57,63,68,75,84,89,99,104,113,118,124,130,148,157,172,181,196,205,211,224,233,246,254,260,269,275,288,297,310,319,324,328,334,348,353,358,363,368,372,376,380,384,388,392,397,402],{"type":18,"tag":19,"props":20,"children":21},"element","p",{},[22],{"type":23,"value":10},"text",{"type":18,"tag":25,"props":26,"children":31},"pre",{"className":27,"code":29,"language":30,"meta":8},[28],"language-javascript","// function\nfunction f() {}\n\n// 화살표 함수\nconst f = () => {};\n","javascript",[32],{"type":18,"tag":33,"props":34,"children":35},"code",{"__ignoreMap":8},[36],{"type":23,"value":29},{"type":18,"tag":19,"props":38,"children":39},{},[40],{"type":23,"value":41},"※ 그렇다고 모든 경우에 화살표 함수를 사용하면 안 됨 (아래에서 확인)",{"type":18,"tag":43,"props":44,"children":46},"h2",{"id":45},"문법",[47],{"type":23,"value":45},{"type":18,"tag":25,"props":49,"children":52},{"className":50,"code":51,"language":30,"meta":8},[28],"() => {} // 매개변수가 없을 때\nx => {} // 매개변수가 한 개인 경우, 소괄호 생략 가능\n(x, y) => {} // 매개변수가 여러 개인 경우, 소괄호 생략 불가\n\nx => { return x*x } // 일반적인 함수 사용\nx => x*x // 한 줄 구문이라면 중괄호 생략 가능 (암묵적으로 return)\n\n() => { return { a: 1 }} // 일반적인 함수 사용\n() => ({ a: 1 }) // 객체 반환 시 소괄호를 사용\n\n// multi line\n() => {\n    const x = 10;\n    return x*x;\n}\n",[53],{"type":18,"tag":33,"props":54,"children":55},{"__ignoreMap":8},[56],{"type":23,"value":51},{"type":18,"tag":43,"props":58,"children":60},{"id":59},"일반-함수funciton와-화살표-함수-차이점",[61],{"type":23,"value":62},"일반 함수(funciton)와 화살표 함수(=>) 차이점",{"type":18,"tag":19,"props":64,"children":65},{},[66],{"type":23,"value":67},"가장 큰 차이점은 this인데 코드를 보며 확인해 보자.",{"type":18,"tag":69,"props":70,"children":72},"h3",{"id":71},"일반-함수function",[73],{"type":23,"value":74},"일반 함수(function)",{"type":18,"tag":25,"props":76,"children":79},{"className":77,"code":78,"language":30,"meta":8},[28],"function Prefixer(prefix) {\n  this.prefix = prefix;\n}\nPrefixer.prototype.prefixArray = function (arr) {\n  console.log(this); // Prefixer\n  return arr.map(function (x) {\n    console.log(this); // Window\n    return this.prefix + ' ' + x;\n  });\n};\nvar pre = new Prefixer('Hi');\nconsole.log(pre.prefixArray(['Seungyoon'])); // [\"undefined Seungyoon\"]\n",[80],{"type":18,"tag":33,"props":81,"children":82},{"__ignoreMap":8},[83],{"type":23,"value":78},{"type":18,"tag":19,"props":85,"children":86},{},[87],{"type":23,"value":88},"위 코드를 보게 되면 map 안에 this를 찍어보면 Window를 가르키고 있다. 기본적으로 내부 함수 this는 Window를 가르킨다.",{"type":18,"tag":90,"props":91,"children":92},"ul",{},[93],{"type":18,"tag":94,"props":95,"children":96},"li",{},[97],{"type":23,"value":98},"생성자 함수와 객체의 메소드를 제외한 모든 함수(내부 함수, 콜백 함수 포함) 내부의 this는 전역 객체(Window)를 가르키기 때문이다.",{"type":18,"tag":69,"props":100,"children":102},{"id":101},"화살표-함수",[103],{"type":23,"value":9},{"type":18,"tag":25,"props":105,"children":108},{"className":106,"code":107,"language":30,"meta":8},[28],"function Prefixer(prefix) {\n  this.prefix = prefix;\n}\n\nPrefixer.prototype.prefixArray = function (arr) {\n  console.log(this); // Prefixer\n  return arr.map((x) => {\n    console.log(this); // Prexier\n    return this.prefix + ' ' + x;\n  });\n};\nvar pre = new Prefixer('Hi');\nconsole.log(pre.prefixArray(['Seungyoon'])); // [\"Hi Seungyoon\"]\n",[109],{"type":18,"tag":33,"props":110,"children":111},{"__ignoreMap":8},[112],{"type":23,"value":107},{"type":18,"tag":19,"props":114,"children":115},{},[116],{"type":23,"value":117},"위 코드와 다르게 map 안에 this는 Prexier를 가르킨다. 이는 화살표 함수의 this는 언제나 상위 스코프의 this를 가르키기 때문이다.",{"type":18,"tag":43,"props":119,"children":121},{"id":120},"화살표-함수를-사용해서는-안되는-경우",[122],{"type":23,"value":123},"화살표 함수를 사용해서는 안되는 경우",{"type":18,"tag":69,"props":125,"children":127},{"id":126},"_1-메소드",[128],{"type":23,"value":129},"1. 메소드",{"type":18,"tag":131,"props":132,"children":133},"blockquote",{},[134],{"type":18,"tag":19,"props":135,"children":136},{},[137],{"type":18,"tag":138,"props":139,"children":140},"b",{},[141],{"type":18,"tag":142,"props":143,"children":145},"font",{"color":144},"red",[146],{"type":23,"value":147},"bad",{"type":18,"tag":25,"props":149,"children":152},{"className":150,"code":151,"language":30,"meta":8},[28],"const seungyoon = {\n  firstName: 'kim',\n  lastName: 'seungyoon',\n  getFirstName: () => {\n    return this.firstName;\n  },\n};\n\nconsole.log(seungyoon.getFirstName()); // undefined\n",[153],{"type":18,"tag":33,"props":154,"children":155},{"__ignoreMap":8},[156],{"type":23,"value":151},{"type":18,"tag":131,"props":158,"children":159},{},[160],{"type":18,"tag":19,"props":161,"children":162},{},[163],{"type":18,"tag":138,"props":164,"children":165},{},[166],{"type":18,"tag":142,"props":167,"children":169},{"color":168},"green",[170],{"type":23,"value":171},"good",{"type":18,"tag":25,"props":173,"children":176},{"className":174,"code":175,"language":30,"meta":8},[28],"const seungyoon = {\n  firstName: 'kim',\n  lastName: 'seungyoon',\n  getFirstName: function () {\n    return this.firstName;\n  },\n};\n\nconsole.log(seungyoon.getFirstName()); // kim\n",[177],{"type":18,"tag":33,"props":178,"children":179},{"__ignoreMap":8},[180],{"type":23,"value":175},{"type":18,"tag":131,"props":182,"children":183},{},[184],{"type":18,"tag":19,"props":185,"children":186},{},[187],{"type":18,"tag":138,"props":188,"children":189},{},[190],{"type":18,"tag":142,"props":191,"children":193},{"color":192},"blue",[194],{"type":23,"value":195},"best",{"type":18,"tag":25,"props":197,"children":200},{"className":198,"code":199,"language":30,"meta":8},[28],"const seungyoon = {\n  firstName: 'kim',\n  lastName: 'seungyoon',\n  getFirstName() {\n    return this.firstName;\n  },\n};\n\nconsole.log(seungyoon.getFirstName()); // kim\n",[201],{"type":18,"tag":33,"props":202,"children":203},{"__ignoreMap":8},[204],{"type":23,"value":199},{"type":18,"tag":69,"props":206,"children":208},{"id":207},"_2-prototype",[209],{"type":23,"value":210},"2. prototype",{"type":18,"tag":131,"props":212,"children":213},{},[214],{"type":18,"tag":19,"props":215,"children":216},{},[217],{"type":18,"tag":138,"props":218,"children":219},{},[220],{"type":18,"tag":142,"props":221,"children":222},{"color":144},[223],{"type":23,"value":147},{"type":18,"tag":25,"props":225,"children":228},{"className":226,"code":227,"language":30,"meta":8},[28],"const Person = function (firstName, lastName) {\n  this.firstName = firstName;\n  this.lastName = lastName;\n};\n\nPerson.prototype.getFullName = () => {\n  return this.firstName + ' ' + this.lastName;\n};\n\nconst seungyoon = new Person('seungyoon', 'kim');\nconsole.log(seungyoon.getFullName()); // undefined undefined\n",[229],{"type":18,"tag":33,"props":230,"children":231},{"__ignoreMap":8},[232],{"type":23,"value":227},{"type":18,"tag":131,"props":234,"children":235},{},[236],{"type":18,"tag":19,"props":237,"children":238},{},[239],{"type":18,"tag":138,"props":240,"children":241},{},[242],{"type":18,"tag":142,"props":243,"children":244},{"color":168},[245],{"type":23,"value":171},{"type":18,"tag":25,"props":247,"children":249},{"className":248,"code":227,"language":30,"meta":8},[28],[250],{"type":18,"tag":33,"props":251,"children":252},{"__ignoreMap":8},[253],{"type":23,"value":227},{"type":18,"tag":69,"props":255,"children":257},{"id":256},"_3-생성자-함수",[258],{"type":23,"value":259},"3. 생성자 함수",{"type":18,"tag":25,"props":261,"children":264},{"className":262,"code":263,"language":30,"meta":8},[28],"const Person1 = () => {};\nconst Person2 = function () {};\n\n// 화살표 함수는 prototype 프로퍼티가 없음\nconsole.log(Person1.prototype); // undefined\n// 일반 함수는 prototype 내 생성자 함수가 있음\nconsole.log(Person2.prototype); // { constructor...}\n\nconst person1 = new Person1(); // TypeError: Person1 is not a constructor\nconst person2 = new Person2();\n",[265],{"type":18,"tag":33,"props":266,"children":267},{"__ignoreMap":8},[268],{"type":23,"value":263},{"type":18,"tag":69,"props":270,"children":272},{"id":271},"_4-addeventlistener-함수의-콜백-함수",[273],{"type":23,"value":274},"4. addEventListener 함수의 콜백 함수",{"type":18,"tag":131,"props":276,"children":277},{},[278],{"type":18,"tag":19,"props":279,"children":280},{},[281],{"type":18,"tag":138,"props":282,"children":283},{},[284],{"type":18,"tag":142,"props":285,"children":286},{"color":144},[287],{"type":23,"value":147},{"type":18,"tag":25,"props":289,"children":292},{"className":290,"code":291,"language":30,"meta":8},[28],"var button = document.getElementById('button');\n\nbutton.addEventListener('click', () => {\n  console.log(this); // window\n  this.innerHTML = 'Clicked Button';\n});\n",[293],{"type":18,"tag":33,"props":294,"children":295},{"__ignoreMap":8},[296],{"type":23,"value":291},{"type":18,"tag":131,"props":298,"children":299},{},[300],{"type":18,"tag":19,"props":301,"children":302},{},[303],{"type":18,"tag":138,"props":304,"children":305},{},[306],{"type":18,"tag":142,"props":307,"children":308},{"color":168},[309],{"type":23,"value":171},{"type":18,"tag":25,"props":311,"children":314},{"className":312,"code":313,"language":30,"meta":8},[28],"var button = document.getElementById('button');\n\nbutton.addEventListener('click', function () {\n  console.log(this); // button\n  this.innerHTML = 'Clicked Button';\n});\n",[315],{"type":18,"tag":33,"props":316,"children":317},{"__ignoreMap":8},[318],{"type":23,"value":313},{"type":18,"tag":19,"props":320,"children":321},{},[322],{"type":23,"value":323},"\\n",{"type":18,"tag":325,"props":326,"children":327},"hr",{},[],{"type":18,"tag":69,"props":329,"children":331},{"id":330},"참고",[332],{"type":23,"value":333},"참고:",{"type":18,"tag":90,"props":335,"children":336},{},[337],{"type":18,"tag":94,"props":338,"children":339},{},[340],{"type":18,"tag":341,"props":342,"children":346},"a",{"href":343,"rel":344},"https://poiemaweb.com/es6-arrow-function",[345],"nofollow",[347],{"type":23,"value":343},{"type":18,"tag":19,"props":349,"children":350},{},[351],{"type":23,"value":352},"asd",{"type":18,"tag":19,"props":354,"children":355},{},[356],{"type":23,"value":357},"fasd",{"type":18,"tag":19,"props":359,"children":360},{},[361],{"type":23,"value":362},"f",{"type":18,"tag":19,"props":364,"children":365},{},[366],{"type":23,"value":367},"asdf",{"type":18,"tag":19,"props":369,"children":370},{},[371],{"type":23,"value":352},{"type":18,"tag":19,"props":373,"children":374},{},[375],{"type":23,"value":362},{"type":18,"tag":19,"props":377,"children":378},{},[379],{"type":23,"value":367},{"type":18,"tag":19,"props":381,"children":382},{},[383],{"type":23,"value":352},{"type":18,"tag":19,"props":385,"children":386},{},[387],{"type":23,"value":357},{"type":18,"tag":19,"props":389,"children":390},{},[391],{"type":23,"value":362},{"type":18,"tag":19,"props":393,"children":394},{},[395],{"type":23,"value":396},"as",{"type":18,"tag":19,"props":398,"children":399},{},[400],{"type":23,"value":401},"왜 댓글 안나와?",{"type":18,"tag":19,"props":403,"children":404},{},[405],{"type":23,"value":323},{"title":8,"searchDepth":407,"depth":407,"links":408},2,[409,410,415],{"id":45,"depth":407,"text":45},{"id":59,"depth":407,"text":62,"children":411},[412,414],{"id":71,"depth":413,"text":74},3,{"id":101,"depth":413,"text":9},{"id":120,"depth":407,"text":123,"children":416},[417,418,419,420,421],{"id":126,"depth":413,"text":129},{"id":207,"depth":413,"text":210},{"id":256,"depth":413,"text":259},{"id":271,"depth":413,"text":274},{"id":330,"depth":413,"text":333},"markdown","content:posts:f8128924-3314-4bbc-9acd-4e7fcab8969a.md","content","posts/f8128924-3314-4bbc-9acd-4e7fcab8969a.md","md",{"_path":428,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":429,"description":8,"tags":430,"date":432,"body":433,"_type":422,"_id":448,"_source":424,"_file":449,"_extension":426},"/posts/ef65e77b-7018-4854-8ba1-e14fc2a8fba9","Property \"query\" was accessed during render but is not defined on instance",[431],"nuxt","2024-01-05T00:00:00.000Z",{"type":15,"children":434,"toc":446},[435],{"type":18,"tag":25,"props":436,"children":441},{"className":437,"code":439,"language":440,"meta":8},[438],"language-css","// AS-IS\nconst { query } = defineProps();\n\n// TO-BE\nconst { query } = defineProps(['query']);\n\n","css",[442],{"type":18,"tag":33,"props":443,"children":444},{"__ignoreMap":8},[445],{"type":23,"value":439},{"title":8,"searchDepth":407,"depth":407,"links":447},[],"content:posts:ef65e77b-7018-4854-8ba1-e14fc2a8fba9.md","posts/ef65e77b-7018-4854-8ba1-e14fc2a8fba9.md",{"_path":451,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":452,"description":453,"tags":454,"date":455,"body":456,"_type":422,"_id":534,"_source":424,"_file":535,"_extension":426},"/posts/d35aaedb-0f64-4f7f-8c76-97e2069cbadd","nuxt3 정적 사이트 github page에서 js파일들 404에러 날때","githubpage에 generage해서 올렸는데 자꾸 에러가 나는거다… 이유를 몰라서 밤새 검색했는데도 답이 안나오고",[431],"2024-01-03T00:00:00.000Z",{"type":15,"children":457,"toc":532},[458,462,467,471,476,485,489,494,505,509,514,519,523,528],{"type":18,"tag":19,"props":459,"children":460},{},[461],{"type":23,"value":453},{"type":18,"tag":463,"props":464,"children":466},"img",{"src":465},"https://prod-files-secure.s3.us-west-2.amazonaws.com/122c4317-821b-493a-85a2-3b119a538ecc/fe6c9a49-b3bc-4656-b606-896c26f1f958/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45HZZMZUHI%2F20240114%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240114T151320Z&X-Amz-Expires=3600&X-Amz-Signature=30e3b7938b04add147756b921a38f3bae02517c1720e1683499702a5dda0683f&X-Amz-SignedHeaders=host&x-id=GetObject",[],{"type":18,"tag":19,"props":468,"children":469},{},[470],{"type":23,"value":323},{"type":18,"tag":19,"props":472,"children":473},{},[474],{"type":23,"value":475},"결국 nuxt github issue에서 찾았다 ㅠㅠ",{"type":18,"tag":19,"props":477,"children":478},{},[479],{"type":18,"tag":341,"props":480,"children":483},{"href":481,"rel":482},"https://github.com/nuxt/nuxt/issues/10113",[345],[484],{"type":23,"value":481},{"type":18,"tag":19,"props":486,"children":487},{},[488],{"type":23,"value":323},{"type":18,"tag":19,"props":490,"children":491},{},[492],{"type":23,"value":493},".nojeklly",{"type":18,"tag":25,"props":495,"children":500},{"className":496,"code":498,"language":499,"meta":8},[497],"language-json","\"deploy\": \"nuxt generate && touch .output/public/.nojekyll && gh-pages --dotfiles -d .output/public”\n","json",[501],{"type":18,"tag":33,"props":502,"children":503},{"__ignoreMap":8},[504],{"type":23,"value":498},{"type":18,"tag":19,"props":506,"children":507},{},[508],{"type":23,"value":323},{"type":18,"tag":19,"props":510,"children":511},{},[512],{"type":23,"value":513},"결론은 generate하고 프로젝트 폴더안에 .nojekyll 파일이 있어야 되는거였다. (github page는 기본적으로 jekyll이라는 정적 사이트 생성기를 사용함)",{"type":18,"tag":19,"props":515,"children":516},{},[517],{"type":23,"value":518},".nojekyll 파일이 있으면 github 페이지는 jekyll 처리를 건너뜀.",{"type":18,"tag":19,"props":520,"children":521},{},[522],{"type":23,"value":323},{"type":18,"tag":19,"props":524,"children":525},{},[526],{"type":23,"value":527},"오늘의 개발 교훈: github issue를 잘 찾아보자!",{"type":18,"tag":19,"props":529,"children":530},{},[531],{"type":23,"value":323},{"title":8,"searchDepth":407,"depth":407,"links":533},[],"content:posts:d35aaedb-0f64-4f7f-8c76-97e2069cbadd.md","posts/d35aaedb-0f64-4f7f-8c76-97e2069cbadd.md",{"_path":537,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":538,"description":539,"tags":540,"date":541,"body":542,"_type":422,"_id":786,"_source":424,"_file":787,"_extension":426},"/posts/b083a0e2-3166-41dc-ad9c-3e9b6383a6c6","객체지향 프로그래밍 (with. ES6)","프로그래밍의 설계 패러다임 중 하나로, 현실 세계를 프로그램 설계에 반영한다는 개념을 기반으로 접근하는 방법",[12],"2023-12-06T00:00:00.000Z",{"type":15,"children":543,"toc":777},[544,548,554,567,580,585,606,611,620,649,655,661,666,675,680,686,691,700,706,711,720,724,727,731,773],{"type":18,"tag":19,"props":545,"children":546},{},[547],{"type":23,"value":539},{"type":18,"tag":69,"props":549,"children":551},{"id":550},"클래스와-인스턴스객체",[552],{"type":23,"value":553},"클래스와 인스턴스(객체)",{"type":18,"tag":19,"props":555,"children":556},{},[557,559,565],{"type":23,"value":558},"클래스는 일종의 ",{"type":18,"tag":142,"props":560,"children":562},{"color":561},"purple",[563],{"type":23,"value":564},"설계도이고",{"type":23,"value":566}," 인스턴스는 클래스를 사용하여 생성한 실제 물건이다.",{"type":18,"tag":90,"props":568,"children":569},{},[570,575],{"type":18,"tag":94,"props":571,"children":572},{},[573],{"type":23,"value":574},"스마트폰(클래스), 아이폰(인스턴스), 갤럭시(인스턴스)",{"type":18,"tag":94,"props":576,"children":577},{},[578],{"type":23,"value":579},"자동차(클래스), 소나타(인스턴스), 그랜져(인스턴스)",{"type":18,"tag":19,"props":581,"children":582},{},[583],{"type":23,"value":584},"위 정의가 꼭 클래스, 인스턴스라는 이야기는 아니다. 스마트폰, 자동차 또한 인스턴스가 될 수 있다.",{"type":18,"tag":90,"props":586,"children":587},{},[588,601],{"type":18,"tag":94,"props":589,"children":590},{},[591,593,599],{"type":23,"value":592},"무선 전화기(클래스) - ",{"type":18,"tag":594,"props":595,"children":596},"i",{},[597],{"type":23,"value":598},"스마트폰",{"type":23,"value":600},"(인스턴스)",{"type":18,"tag":94,"props":602,"children":603},{},[604],{"type":23,"value":605},"이동수단(클래스) - 자동차(인스턴스)",{"type":18,"tag":19,"props":607,"children":608},{},[609],{"type":23,"value":610},"마찬가지로 무선 전화기, 이동수단 또한 꼭 클래스가 아닐 수 있다.",{"type":18,"tag":25,"props":612,"children":615},{"className":613,"code":614,"language":30,"meta":8},[28],"class SmartPhone {\n  constructor(name) {\n    this.name = name;\n  }\n\n  getName() {\n    return this.name;\n  }\n}\n\nlet galaxy = new SmartPhone(\"Galaxy\");\nlet iphone = new SmartPhone(\"Iphone\");\n\n",[616],{"type":18,"tag":33,"props":617,"children":618},{"__ignoreMap":8},[619],{"type":23,"value":614},{"type":18,"tag":131,"props":621,"children":622},{},[623],{"type":18,"tag":90,"props":624,"children":625},{},[626],{"type":18,"tag":94,"props":627,"children":628},{},[629,631,636,638,647],{"type":23,"value":630},"이렇게 상위 개념을 추적하는 행위(아이폰 -> 스마트폰 -> 전화기)를 ",{"type":18,"tag":138,"props":632,"children":633},{},[634],{"type":23,"value":635},"추상화(Abstarction)",{"type":23,"value":637},"라고 한다. 추상은 객체가 가지고 있는 여러 가지 속성 중에서 특정한 속성을 가려내어 ",{"type":18,"tag":594,"props":639,"children":640},{},[641],{"type":18,"tag":142,"props":642,"children":644},{"color":643},"pink_background",[645],{"type":23,"value":646},"포착하는 것을 의미한다.",{"type":23,"value":648}," (필요한 관점만을 추출하는 행위)",{"type":18,"tag":43,"props":650,"children":652},{"id":651},"객체지향-프로그래밍은-아래의-특징을-가지고-있다",[653],{"type":23,"value":654},"객체지향 프로그래밍은 아래의 특징을 가지고 있다.",{"type":18,"tag":69,"props":656,"children":658},{"id":657},"상속inheritance",[659],{"type":23,"value":660},"상속(inheritance)",{"type":18,"tag":19,"props":662,"children":663},{},[664],{"type":23,"value":665},"속성 및 기능을 물려받아 확장 할 수 있다.",{"type":18,"tag":25,"props":667,"children":670},{"className":668,"code":669,"language":30,"meta":8},[28],"class Car {\n  axle() {\n    console.log('이동');\n  }\n  break() {\n    console.log('멈춤');\n  }\n}\n\nclass Hyundai extends Car {\n  // Car의 기능을 물려 받음(axle, break)\n  companyName = '현대';\n  country = '대한민국';\n}\n\nclass Sonata extends Hyundai {\n  // Car의 기능을 물려 받음(axle, break)\n  // Hyundai 속성을 물려 받음(compnayName, country)\n  modelName = '소나타';\n\n}\n\nlet sonata2020 = new Sonata();\nconsole.log(sonata2020.companyName); // 현대\nconsole.log(sonata2020.country); // 대한민국\nsonata2020.axle(); // 이동\nsonata2020.break(); // 멈춤\n\n",[671],{"type":18,"tag":33,"props":672,"children":673},{"__ignoreMap":8},[674],{"type":23,"value":669},{"type":18,"tag":19,"props":676,"children":677},{},[678],{"type":23,"value":679},"이렇게 상속을 하게 되면 중복 코드를 피할 수 있다.",{"type":18,"tag":69,"props":681,"children":683},{"id":682},"다형성polymorphism",[684],{"type":23,"value":685},"다형성(Polymorphism)",{"type":18,"tag":19,"props":687,"children":688},{},[689],{"type":23,"value":690},"어떤 하나의 변수명이나 함수명이 상황에 따라서 다르게 해석될 수 있는 것을 의미 (형태가 같은데 다른 기능을 하는 것)",{"type":18,"tag":25,"props":692,"children":695},{"className":693,"code":694,"language":30,"meta":8},[28],"class Animal {\n  sound() {\n    console.log('동물 울음소리를 만들어주세요.');\n  }\n}\n\nclass Cat extends Animal {\n  sound() {\n    console.log('야옹');\n  }\n}\n\nclass Dog extends Animal {\n  sound() {\n    console.log('멍멍');\n  }\n}\n\nlet Leo = new Cat();\nlet Bella = new Dog();\n\nLeo.sound(); // 야옹\nBella.sound(); // 멍멍\n\n",[696],{"type":18,"tag":33,"props":697,"children":698},{"__ignoreMap":8},[699],{"type":23,"value":694},{"type":18,"tag":69,"props":701,"children":703},{"id":702},"캡슐화encapsulation",[704],{"type":23,"value":705},"캡슐화(Encapsulation)",{"type":18,"tag":19,"props":707,"children":708},{},[709],{"type":23,"value":710},"기본적으로 관련된 여러 가지 정보를 하나의 틀 안에 담는 것을 의미한다. 아래 코드를 보면 변수들과 메서드가 서로 관련된 정보가 되고 클래스(Capsule)이 이것을 담는 하나의 큰 틀이라고 할 수 있다. 여기에서 중요한 것은 은닉화, 정보의 공개 여부이다. 정보 은닉(Information hiding)의 개념이 바로 이 부분을 담당한다.",{"type":18,"tag":25,"props":712,"children":715},{"className":713,"code":714,"language":30,"meta":8},[28],"// 캡슐화 (속성, 메소드)\npublic class Capsule {\n  // 은닉화\n  private String name;\n  private String id;\n\n  // 은닉화한 정보 제어 할 수 있는 메소드\n  // 외부에 공개\n  public String getName() {\n    return this.name;\n  }\n  public String setName(String name) {\n    return this.name = name;\n  }\n  public String getId() {\n    return this.id;\n  }\n  public String setName(String id) {\n    return this.id = id;\n  }\n}\n\n",[716],{"type":18,"tag":33,"props":717,"children":718},{"__ignoreMap":8},[719],{"type":23,"value":714},{"type":18,"tag":19,"props":721,"children":722},{},[723],{"type":23,"value":323},{"type":18,"tag":325,"props":725,"children":726},{},[],{"type":18,"tag":69,"props":728,"children":729},{"id":330},[730],{"type":23,"value":330},{"type":18,"tag":90,"props":732,"children":733},{},[734,739,751,764],{"type":18,"tag":94,"props":735,"children":736},{},[737],{"type":23,"value":738},"인사이드 자바스크립트",{"type":18,"tag":94,"props":740,"children":741},{},[742],{"type":18,"tag":142,"props":743,"children":744},{"color":192},[745],{"type":18,"tag":341,"props":746,"children":749},{"href":747,"rel":748},"https://evan-moon.github.io/2019/08/24/what-is-object-oriented-programming/",[345],[750],{"type":23,"value":747},{"type":18,"tag":94,"props":752,"children":753},{},[754],{"type":18,"tag":142,"props":755,"children":756},{"color":192},[757],{"type":18,"tag":341,"props":758,"children":761},{"href":759,"rel":760},"http://www.opentutorials.org/module/2495/14037",[345],[762],{"type":23,"value":763},"www.opentutorials.org/module/2495/14037",{"type":18,"tag":94,"props":765,"children":766},{},[767],{"type":18,"tag":341,"props":768,"children":771},{"href":769,"rel":770},"https://victorydntmd.tistory.com/117",[345],[772],{"type":23,"value":769},{"type":18,"tag":19,"props":774,"children":775},{},[776],{"type":23,"value":323},{"title":8,"searchDepth":407,"depth":407,"links":778},[779,780],{"id":550,"depth":413,"text":553},{"id":651,"depth":407,"text":654,"children":781},[782,783,784,785],{"id":657,"depth":413,"text":660},{"id":682,"depth":413,"text":685},{"id":702,"depth":413,"text":705},{"id":330,"depth":413,"text":330},"content:posts:b083a0e2-3166-41dc-ad9c-3e9b6383a6c6.md","posts/b083a0e2-3166-41dc-ad9c-3e9b6383a6c6.md",1705245206613]