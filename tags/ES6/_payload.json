[{"data":1,"prerenderedAt":245},["Reactive",2],{"content-query-1BS74BHHcZ":3},[4],{"_path":5,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":9,"description":10,"tags":11,"date":13,"body":14,"_type":240,"_id":241,"_source":242,"_file":243,"_extension":244},"/posts/b083a0e2-3166-41dc-ad9c-3e9b6383a6c6","posts",false,"","객체지향 프로그래밍 (with. ES6)","프로그래밍의 설계 패러다임 중 하나로, 현실 세계를 프로그램 설계에 반영한다는 개념을 기반으로 접근하는 방법",[12],"ES6","2023-12-28T00:00:00.000Z",{"type":15,"children":16,"toc":229},"root",[17,24,31,36,51,56,69,74,87,105,112,118,123,132,137,143,148,157,163,168,177,181,186,224],{"type":18,"tag":19,"props":20,"children":21},"element","p",{},[22],{"type":23,"value":10},"text",{"type":18,"tag":25,"props":26,"children":28},"h3",{"id":27},"클래스와-인스턴스객체",[29],{"type":23,"value":30},"클래스와 인스턴스(객체)",{"type":18,"tag":19,"props":32,"children":33},{},[34],{"type":23,"value":35},"클래스는 일종의 설계도이고 인스턴스는 클래스를 사용하여 생성한 실제 물건이다.",{"type":18,"tag":37,"props":38,"children":39},"ul",{},[40,46],{"type":18,"tag":41,"props":42,"children":43},"li",{},[44],{"type":23,"value":45},"스마트폰(클래스), 아이폰(인스턴스), 갤럭시(인스턴스)",{"type":18,"tag":41,"props":47,"children":48},{},[49],{"type":23,"value":50},"자동차(클래스), 소나타(인스턴스), 그랜져(인스턴스)",{"type":18,"tag":19,"props":52,"children":53},{},[54],{"type":23,"value":55},"위 정의가 꼭 클래스, 인스턴스라는 이야기는 아니다. 스마트폰, 자동차 또한 인스턴스가 될 수 있다.",{"type":18,"tag":37,"props":57,"children":58},{},[59,64],{"type":18,"tag":41,"props":60,"children":61},{},[62],{"type":23,"value":63},"무선 전화기(클래스) - 스마트폰(인스턴스)",{"type":18,"tag":41,"props":65,"children":66},{},[67],{"type":23,"value":68},"이동수단(클래스) - 자동차(인스턴스)",{"type":18,"tag":19,"props":70,"children":71},{},[72],{"type":23,"value":73},"마찬가지로 무선 전화기, 이동수단 또한 꼭 클래스가 아닐 수 있다.",{"type":18,"tag":75,"props":76,"children":81},"pre",{"className":77,"code":79,"language":80,"meta":8},[78],"language-javascript","class SmartPhone {\n  constructor(name) {\n    this.name = name;\n  }\n\n  getName() {\n    return this.name;\n  }\n}\n\nlet galaxy = new SmartPhone(\"Galaxy\");\nlet iphone = new SmartPhone(\"Iphone\");\n\n","javascript",[82],{"type":18,"tag":83,"props":84,"children":85},"code",{"__ignoreMap":8},[86],{"type":23,"value":79},{"type":18,"tag":88,"props":89,"children":90},"blockquote",{},[91],{"type":18,"tag":19,"props":92,"children":93},{},[94,96,103],{"type":23,"value":95},"+ 이렇게 상위 개념을 추적하는 행위",{"type":18,"tag":97,"props":98,"children":100},"font",{"color":99},"red",[101],{"type":23,"value":102},"(",{"type":23,"value":104},"아이폰 -> 스마트폰 -> 전화기)를 추상화(Abstarction)라고 한다. 추상은 객체가 가지고 있는 여러 가지 속성 중에서 특정한 속성을 가려내어 포착하는 것을 의미한다. (필요한 관점만을 추출하는 행위)",{"type":18,"tag":106,"props":107,"children":109},"h2",{"id":108},"객체지향-프로그래밍은-아래의-특징을-가지고-있다",[110],{"type":23,"value":111},"객체지향 프로그래밍은 아래의 특징을 가지고 있다.",{"type":18,"tag":25,"props":113,"children":115},{"id":114},"상속inheritance",[116],{"type":23,"value":117},"상속(inheritance)",{"type":18,"tag":19,"props":119,"children":120},{},[121],{"type":23,"value":122},"속성 및 기능을 물려받아 확장 할 수 있다.",{"type":18,"tag":75,"props":124,"children":127},{"className":125,"code":126,"language":80,"meta":8},[78],"class Car {\n  axle() {\n    console.log('이동');\n  }\n  break() {\n    console.log('멈춤');\n  }\n}\n\nclass Hyundai extends Car {\n  // Car의 기능을 물려 받음(axle, break)\n  companyName = '현대';\n  country = '대한민국';\n}\n\nclass Sonata extends Hyundai {\n  // Car의 기능을 물려 받음(axle, break)\n  // Hyundai 속성을 물려 받음(compnayName, country)\n  modelName = '소나타';\n\n}\n\nlet sonata2020 = new Sonata();\nconsole.log(sonata2020.companyName); // 현대\nconsole.log(sonata2020.country); // 대한민국\nsonata2020.axle(); // 이동\nsonata2020.break(); // 멈춤\n\n",[128],{"type":18,"tag":83,"props":129,"children":130},{"__ignoreMap":8},[131],{"type":23,"value":126},{"type":18,"tag":19,"props":133,"children":134},{},[135],{"type":23,"value":136},"이렇게 상속을 하게 되면 중복 코드를 피할 수 있다.",{"type":18,"tag":25,"props":138,"children":140},{"id":139},"다형성polymorphism",[141],{"type":23,"value":142},"다형성(Polymorphism)",{"type":18,"tag":19,"props":144,"children":145},{},[146],{"type":23,"value":147},"어떤 하나의 변수명이나 함수명이 상황에 따라서 다르게 해석될 수 있는 것을 의미 (형태가 같은데 다른 기능을 하는 것)",{"type":18,"tag":75,"props":149,"children":152},{"className":150,"code":151,"language":80,"meta":8},[78],"class Animal {\n  sound() {\n    console.log('동물 울음소리를 만들어주세요.');\n  }\n}\n\nclass Cat extends Animal {\n  sound() {\n    console.log('야옹');\n  }\n}\n\nclass Dog extends Animal {\n  sound() {\n    console.log('멍멍');\n  }\n}\n\nlet Leo = new Cat();\nlet Bella = new Dog();\n\nLeo.sound(); // 야옹\nBella.sound(); // 멍멍\n\n",[153],{"type":18,"tag":83,"props":154,"children":155},{"__ignoreMap":8},[156],{"type":23,"value":151},{"type":18,"tag":25,"props":158,"children":160},{"id":159},"캡슐화encapsulation",[161],{"type":23,"value":162},"캡슐화(Encapsulation)",{"type":18,"tag":19,"props":164,"children":165},{},[166],{"type":23,"value":167},"기본적으로 관련된 여러 가지 정보를 하나의 틀 안에 담는 것을 의미한다. 아래 코드를 보면 변수들과 메서드가 서로 관련된 정보가 되고 클래스(Capsule)이 이것을 담는 하나의 큰 틀이라고 할 수 있다. 여기에서 중요한 것은 은닉화, 정보의 공개 여부이다. 정보 은닉(Information hiding)의 개념이 바로 이 부분을 담당한다.",{"type":18,"tag":75,"props":169,"children":172},{"className":170,"code":171,"language":80,"meta":8},[78],"// 캡슐화 (속성, 메소드)\npublic class Capsule {\n  // 은닉화\n  private String name;\n  private String id;\n\n  // 은닉화한 정보 제어 할 수 있는 메소드\n  // 외부에 공개\n  public String getName() {\n    return this.name;\n  }\n  public String setName(String name) {\n    return this.name = name;\n  }\n  public String getId() {\n    return this.id;\n  }\n  public String setName(String id) {\n    return this.id = id;\n  }\n}\n\n",[173],{"type":18,"tag":83,"props":174,"children":175},{"__ignoreMap":8},[176],{"type":23,"value":171},{"type":18,"tag":178,"props":179,"children":180},"hr",{},[],{"type":18,"tag":25,"props":182,"children":184},{"id":183},"참고",[185],{"type":23,"value":183},{"type":18,"tag":37,"props":187,"children":188},{},[189,194,205,215],{"type":18,"tag":41,"props":190,"children":191},{},[192],{"type":23,"value":193},"인사이드 자바스크립트",{"type":18,"tag":41,"props":195,"children":196},{},[197],{"type":18,"tag":198,"props":199,"children":203},"a",{"href":200,"rel":201},"https://evan-moon.github.io/2019/08/24/what-is-object-oriented-programming/",[202],"nofollow",[204],{"type":23,"value":200},{"type":18,"tag":41,"props":206,"children":207},{},[208],{"type":18,"tag":198,"props":209,"children":212},{"href":210,"rel":211},"http://www.opentutorials.org/module/2495/14037",[202],[213],{"type":23,"value":214},"www.opentutorials.org/module/2495/14037",{"type":18,"tag":41,"props":216,"children":217},{},[218],{"type":18,"tag":198,"props":219,"children":222},{"href":220,"rel":221},"https://victorydntmd.tistory.com/117",[202],[223],{"type":23,"value":220},{"type":18,"tag":19,"props":225,"children":226},{},[227],{"type":23,"value":228},"\\n",{"title":8,"searchDepth":230,"depth":230,"links":231},2,[232,234],{"id":27,"depth":233,"text":30},3,{"id":108,"depth":230,"text":111,"children":235},[236,237,238,239],{"id":114,"depth":233,"text":117},{"id":139,"depth":233,"text":142},{"id":159,"depth":233,"text":162},{"id":183,"depth":233,"text":183},"markdown","content:posts:b083a0e2-3166-41dc-ad9c-3e9b6383a6c6.md","content","posts/b083a0e2-3166-41dc-ad9c-3e9b6383a6c6.md","md",1718180306870]