[{"data":1,"prerenderedAt":103},["Reactive",2],{"content-query-y68BiRpcNm":3},[4],{"_path":5,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":9,"description":10,"tags":11,"date":13,"body":14,"_type":98,"_id":99,"_source":100,"_file":101,"_extension":102},"/posts/7516dc85-4ccc-4f99-afc1-22f8115737df","posts",false,"","Call, Apply, Bind","Call, Apply, Bind는 this와 관련이 있다. this를 특정 객체에 명시적으로 바인딩 시키는 메소드이다.",[12],"javascript","2024-01-15T00:00:00.000Z",{"type":15,"children":16,"toc":92},"root",[17,34,41,52,57,62,67,73,78,83],{"type":18,"tag":19,"props":20,"children":21},"element","p",{},[22,25,32],{"type":23,"value":24},"text","Call, Apply, Bind는 this와 관련이 있다. this를 특정 객체에 ",{"type":18,"tag":26,"props":27,"children":29},"code",{"className":28},[],[30],{"type":23,"value":31},"명시적으로 바인딩",{"type":23,"value":33}," 시키는 메소드이다.",{"type":18,"tag":35,"props":36,"children":38},"h3",{"id":37},"먼저-call-apply를-코드로-살펴-보자",[39],{"type":23,"value":40},"먼저 Call, Apply를 코드로 살펴 보자",{"type":18,"tag":42,"props":43,"children":47},"pre",{"className":44,"code":46,"language":12,"meta":8},[45],"language-javascript","const seungyoon = {\n  name: 'seungyoon',\n}\n\nfunction greeting(city, hobby) {\n  console.log(`Hello my name is ${this.name}, I live in ${city}. my hobby is ${hobby}.`);\n}\n\ngreeting('seoul', 'listening to music'); // Hello my name is , I live in seoul. my hobby is listening to music.\ngreeting.apply(seungyoon, ['seoul', 'listening to music']); // Hello my name is seungyoon, I live in seoul. my hobby is listening to music.\ngreeting.call(seungyoon, 'seoul', 'listening to music'); // Hello my name is seungyoon, I live in seoul. my hobby is listening to music\n\n",[48],{"type":18,"tag":26,"props":49,"children":50},{"__ignoreMap":8},[51],{"type":23,"value":46},{"type":18,"tag":19,"props":53,"children":54},{},[55],{"type":23,"value":56},"이렇게 this 특정 객체에 명시적으로 바인딩 시키고 싶을 때 call, apply를 사용하면 된다.",{"type":18,"tag":58,"props":59,"children":61},"img",{"src":60},"/blog/images/c28e2489-ed77-40ff-95f2-c13708e23db7.png",[],{"type":18,"tag":19,"props":63,"children":64},{},[65],{"type":23,"value":66},"(여기서 call과 apply는 기능은 같지만 넘겨받는 인자의 형식만 다르다. call과 다르게 apply는 인자를 배열 형태로 받는다.)",{"type":18,"tag":35,"props":68,"children":70},{"id":69},"나머지-bind-함수를-살펴보자",[71],{"type":23,"value":72},"나머지 bind 함수를 살펴보자.",{"type":18,"tag":19,"props":74,"children":75},{},[76],{"type":23,"value":77},"이 함수는 call apply와 다르게 함수를 즉시 실행하지 않는다.",{"type":18,"tag":19,"props":79,"children":80},{},[81],{"type":23,"value":82},"아래 코드와 같이 변수에 담아 호출 할 수가 있다.",{"type":18,"tag":42,"props":84,"children":87},{"className":85,"code":86,"language":12,"meta":8},[45],"const seungyoon = {\n  name: 'seungyoon',\n}\n\nfunction greeting(city, hobby) {\n  console.log(`Hello my name is ${this.name}, I live in ${city}. my hobby is ${hobby}.`);\n}\n\nconst seungyoonGreeting = greeting.bind(seungyoon);\nseungyoonGreeting('seuol', 'listening to music'); // Hello my name is seungyoon, I live in seuol. my hobby is listening to music.\n\n",[88],{"type":18,"tag":26,"props":89,"children":90},{"__ignoreMap":8},[91],{"type":23,"value":86},{"title":8,"searchDepth":93,"depth":93,"links":94},2,[95,97],{"id":37,"depth":96,"text":40},3,{"id":69,"depth":96,"text":72},"markdown","content:posts:7516dc85-4ccc-4f99-afc1-22f8115737df.md","content","posts/7516dc85-4ccc-4f99-afc1-22f8115737df.md","md",1710325996005]