[{"data":1,"prerenderedAt":220},["Reactive",2],{"content-query-jBz8q8EeOE":3},[4],{"_path":5,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":9,"description":10,"tags":11,"date":14,"body":15,"_type":215,"_id":216,"_source":217,"_file":218,"_extension":219},"/posts/e9a8a610-ff29-4403-bbb0-55a5438aad7c","posts",false,"","formData 전송 방법","axios를 $fetch로 변경하면서 로그인시 문제가 발생하였다.",[12,13],"axios","$fetch","2024-01-18T00:00:00.000Z",{"type":16,"children":17,"toc":204},"root",[18,25,30,35,48,53,58,62,67,76,80,85,92,107,116,130,135,144,148,153,157,182,187],{"type":19,"tag":20,"props":21,"children":22},"element","p",{},[23],{"type":24,"value":10},"text",{"type":19,"tag":20,"props":26,"children":27},{},[28],{"type":24,"value":29},"\\n",{"type":19,"tag":20,"props":31,"children":32},{},[33],{"type":24,"value":34},"기존에 axios를 사용할때는 아래와 같이 사용중이고",{"type":19,"tag":36,"props":37,"children":42},"pre",{"className":38,"code":40,"language":41,"meta":8},[39],"language-javascript","await axios.post(url, qs.stringfy(payload));\n","javascript",[43],{"type":19,"tag":44,"props":45,"children":46},"code",{"__ignoreMap":8},[47],{"type":24,"value":40},{"type":19,"tag":20,"props":49,"children":50},{},[51],{"type":24,"value":52},"전달된 형태를 보니 Form Data로 전송이 되고 있다.",{"type":19,"tag":54,"props":55,"children":57},"img",{"src":56},"/images/31ae4e88-bb87-441a-8b14-1948b2d04857.png",[],{"type":19,"tag":20,"props":59,"children":60},{},[61],{"type":24,"value":29},{"type":19,"tag":20,"props":63,"children":64},{},[65],{"type":24,"value":66},"$fetch는 아래와 같이 사용을 했는데",{"type":19,"tag":36,"props":68,"children":71},{"className":69,"code":70,"language":41,"meta":8},[39],"await apiFetch(url, {\n    method: 'POST',\n    body: qs.stringfy(payload)\n});\n",[72],{"type":19,"tag":44,"props":73,"children":74},{"__ignoreMap":8},[75],{"type":24,"value":70},{"type":19,"tag":54,"props":77,"children":79},{"src":78},"/images/b9ddab9f-abfd-42a7-872b-a36da211f4c8.png",[],{"type":19,"tag":20,"props":81,"children":82},{},[83],{"type":24,"value":84},"이렇게 전달이 돼서 로그인이 안되는것이다.",{"type":19,"tag":86,"props":87,"children":89},"h2",{"id":88},"_2가지-해결법",[90],{"type":24,"value":91},"2가지 해결법",{"type":19,"tag":93,"props":94,"children":96},"h3",{"id":95},"_1-header에-content-type-applicationx-www-form-urlencoded-넣어주기",[97,99,105],{"type":24,"value":98},"1. header에 ",{"type":19,"tag":44,"props":100,"children":102},{"className":101},[],[103],{"type":24,"value":104},"'Content-Type': 'application/x-www-form-urlencoded'",{"type":24,"value":106},"  넣어주기",{"type":19,"tag":36,"props":108,"children":111},{"className":109,"code":110,"language":41,"meta":8},[39],"$fetch(url, {\n    method: 'POST',\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        },\n    body: qs.stringfy(payload)\n})\n",[112],{"type":19,"tag":44,"props":113,"children":114},{"__ignoreMap":8},[115],{"type":24,"value":110},{"type":19,"tag":93,"props":117,"children":119},{"id":118},"_2-new-urlsearchparams-사용",[120,122,128],{"type":24,"value":121},"2. ",{"type":19,"tag":44,"props":123,"children":125},{"className":124},[],[126],{"type":24,"value":127},"new URLSearchParams",{"type":24,"value":129}," 사용",{"type":19,"tag":20,"props":131,"children":132},{},[133],{"type":24,"value":134},"원래는 new FormData 만들어서 일일히 append 해줘야하는데 위 함수로 간편하게 만들어준다.",{"type":19,"tag":36,"props":136,"children":139},{"className":137,"code":138,"language":41,"meta":8},[39],"$fetch(url, {\n    method: 'POST',\n    body: new URLSearchParams(qs.stringfy(payload))\n});\n",[140],{"type":19,"tag":44,"props":141,"children":142},{"__ignoreMap":8},[143],{"type":24,"value":138},{"type":19,"tag":20,"props":145,"children":146},{},[147],{"type":24,"value":29},{"type":19,"tag":20,"props":149,"children":150},{},[151],{"type":24,"value":152},"나는 그냥 1번으로 사용하였다.",{"type":19,"tag":20,"props":154,"children":155},{},[156],{"type":24,"value":29},{"type":19,"tag":158,"props":159,"children":160},"blockquote",{},[161],{"type":19,"tag":20,"props":162,"children":163},{},[164,166,172,174,180],{"type":24,"value":165},"Axios를 사용할 때 별도의 설정이 없으면, ",{"type":19,"tag":44,"props":167,"children":169},{"className":168},[],[170],{"type":24,"value":171},"qs.stringify",{"type":24,"value":173},"를 사용하여 변환된 데이터는 ",{"type":19,"tag":44,"props":175,"children":177},{"className":176},[],[178],{"type":24,"value":179},"application/x-www-form-urlencoded",{"type":24,"value":181}," 형식으로 전송된다.",{"type":19,"tag":93,"props":183,"children":185},{"id":184},"참고",[186],{"type":24,"value":184},{"type":19,"tag":188,"props":189,"children":190},"ul",{},[191],{"type":19,"tag":192,"props":193,"children":194},"li",{},[195],{"type":19,"tag":196,"props":197,"children":201},"a",{"href":198,"rel":199},"https://inpa.tistory.com/entry/JS-%F0%9F%93%9A-FormData-%EC%A0%95%EB%A6%AC-fetch-api",[200],"nofollow",[202],{"type":24,"value":203},"https://inpa.tistory.com/entry/JS-📚-FormData-정리-fetch-api",{"title":8,"searchDepth":205,"depth":205,"links":206},2,[207],{"id":88,"depth":205,"text":91,"children":208},[209,212,214],{"id":95,"depth":210,"text":211},3,"1. header에 'Content-Type': 'application/x-www-form-urlencoded'  넣어주기",{"id":118,"depth":210,"text":213},"2. new URLSearchParams 사용",{"id":184,"depth":210,"text":184},"markdown","content:posts:e9a8a610-ff29-4403-bbb0-55a5438aad7c.md","content","posts/e9a8a610-ff29-4403-bbb0-55a5438aad7c.md","md",1706862523980]