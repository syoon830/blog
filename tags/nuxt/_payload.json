[{"data":1,"prerenderedAt":391},["Reactive",2],{"content-query-nDJSWpPxRh":3},[4,80,284,306],{"_path":5,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":9,"description":10,"tags":11,"date":14,"body":15,"_type":75,"_id":76,"_source":77,"_file":78,"_extension":79},"/posts/38527f39-69f6-4663-ba58-351831ed48b4","posts",false,"","nuxt3 $fetch","nuxt3에서는 $fetch는 ofetch라는 라이브러리를 사용하고 있다. (ofetch는 node, browser 환경 두군데서 같이 사용할 수 있다.)",[12,13],"nuxt","axios","2024-01-22T00:00:00.000Z",{"type":16,"children":17,"toc":71},"root",[18,25,30,35,48,54],{"type":19,"tag":20,"props":21,"children":22},"element","p",{},[23],{"type":24,"value":10},"text",{"type":19,"tag":20,"props":26,"children":27},{},[28],{"type":24,"value":29},"\\n",{"type":19,"tag":20,"props":31,"children":32},{},[33],{"type":24,"value":34},"그래서 기존 axios로 설정된 코드들을 뜯어 고쳤다.",{"type":19,"tag":36,"props":37,"children":42},"pre",{"className":38,"code":40,"language":41,"meta":8},[39],"language-javascript","// 기존\nimport axios from 'axios';\nimport type { AxiosInstance } from 'axios';\nimport {useAuthStore} from \"~/store/auth\";\n\nexport default defineNuxtPlugin(nuxtApp => {\n    const config = useRuntimeConfig().public;\n    const clientId = config.clientId;\n    const clientServer = config.clientServer;\n    const btoaClientInfo = btoa(`${clientId}:${clientServer}`);\n\n    const authStore = useAuthStore();\n    const axiosInstance: AxiosInstance = axios.create({\n        baseURL: config.BASE_URL,\n    });\n\n    axiosInstance.interceptors.request.use((config) => {\n        if (authStore.isAuthenticated) {\n            config.headers.Authorization = `Bearer ${authStore.token}`;\n        } else {\n            config.headers.Authorization = `Basic ${btoaClientInfo}`;\n        }\n        return config;\n    });\n\n    nuxtApp.provide('axios', axiosInstance);\n});\n\n// 수정\nimport { useAuthStore } from \"~/store/auth\";\n\nexport default defineNuxtPlugin(nuxtApp => {\n    const config = useRuntimeConfig().public;\n    const clientId = config.clientId;\n    const clientServer = config.clientServer;\n    const btoaClientInfo = btoa(`${clientId}:${clientServer}`);\n\n    const apiFetch = $fetch.create({\n        baseURL: config.BASE_URL,\n        onRequest({ options }) {\n            const authStore = useAuthStore();\n            if (authStore.isAuthenticated) {\n                options.headers = {\n                    Authorization: `Bearer ${authStore.token}`\n                };\n            } else {\n                options.headers = {\n                    Authorization: `Basic ${btoaClientInfo}`\n                };\n            }\n        }\n    })\n    \n    nuxtApp.provide('apiFetch', apiFetch);\n});\n","javascript",[43],{"type":19,"tag":44,"props":45,"children":46},"code",{"__ignoreMap":8},[47],{"type":24,"value":40},{"type":19,"tag":49,"props":50,"children":52},"h2",{"id":51},"참고",[53],{"type":24,"value":51},{"type":19,"tag":55,"props":56,"children":57},"ul",{},[58],{"type":19,"tag":59,"props":60,"children":61},"li",{},[62],{"type":19,"tag":63,"props":64,"children":68},"a",{"href":65,"rel":66},"https://jongmin4943.tistory.com/entry/Nuxt3-fetch-useAsyncData-useFetch-%EC%9D%98-%EC%B0%A8%EC%9D%B4",[67],"nofollow",[69],{"type":24,"value":70},"https://jongmin4943.tistory.com/entry/Nuxt3-fetch-useAsyncData-useFetch-의-차이",{"title":8,"searchDepth":72,"depth":72,"links":73},2,[74],{"id":51,"depth":72,"text":51},"markdown","content:posts:38527f39-69f6-4663-ba58-351831ed48b4.md","content","posts/38527f39-69f6-4663-ba58-351831ed48b4.md","md",{"_path":81,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":82,"description":83,"tags":84,"date":87,"body":88,"_type":75,"_id":282,"_source":77,"_file":283,"_extension":79},"/posts/9ecb10c2-fa24-449c-ac39-8553ee942084","nuxt에서 localstorage 이슈","기존에 cookie에 auth 정보를 저장했을때는 미들웨어가 잘 동작을 했는데, 테스트상 localstorage에 저장을 해보니 미들웨어가 제대로 동작을 안한다.",[12,85,86],"ssr","middleware","2024-01-16T00:00:00.000Z",{"type":16,"children":89,"toc":279},[90,94,98,107,112,116,121,126,130,136,232,236,266,270,275],{"type":19,"tag":20,"props":91,"children":92},{},[93],{"type":24,"value":83},{"type":19,"tag":20,"props":95,"children":96},{},[97],{"type":24,"value":29},{"type":19,"tag":36,"props":99,"children":102},{"className":100,"code":101,"language":41,"meta":8},[39],"import { useAuthStore } from \"~/store/auth\";\n\nexport default defineNuxtRouteMiddleware((to, from) => {\n\n    const authStore = useAuthStore();\n    const nonAuthPages = ['index', 'login'];\n    if (authStore.isAuthenticated) {\n        if (nonAuthPages.includes(to.name)) {\n            return navigateTo('/dashboard');\n        }\n    } else {\n        if (!nonAuthPages.includes(to.name)) {\n            return navigateTo('/login');\n        }\n    }\n}\n",[103],{"type":19,"tag":44,"props":104,"children":105},{"__ignoreMap":8},[106],{"type":24,"value":101},{"type":19,"tag":20,"props":108,"children":109},{},[110],{"type":24,"value":111},"위 코드를 보면 로그인하면 index, login 페이지 접근 못하게, 로그인 안하면 index, login을 제외한 나머지 페이지 접근 못하게 코드를 짰다.",{"type":19,"tag":20,"props":113,"children":114},{},[115],{"type":24,"value":29},{"type":19,"tag":20,"props":117,"children":118},{},[119],{"type":24,"value":120},"로그인한 상태에서는 organization으로 접근을 해야하는데 login 페이지를 거쳐서 dashboard로 이동을 한다.",{"type":19,"tag":20,"props":122,"children":123},{},[124],{"type":24,"value":125},"원인을 살펴보니 ssr에서 localStorage에 접근을 못하여 예상하지 못한 로직으로 흐름이 발생한거였다. (server-side에서는 cookie에만 접근이 가능하다.)",{"type":19,"tag":20,"props":127,"children":128},{},[129],{"type":24,"value":29},{"type":19,"tag":49,"props":131,"children":133},{"id":132},"localstorage에-auth정보-저장-시-흐름-isauthenticated는-true",[134],{"type":24,"value":135},"localStorage에 auth정보 저장 시 흐름 (isAuthenticated는 true)",{"type":19,"tag":137,"props":138,"children":139},"ol",{},[140,166,191,196,227],{"type":19,"tag":59,"props":141,"children":142},{},[143,145],{"type":24,"value":144},"organization 페이지에 접근\n",{"type":19,"tag":137,"props":146,"children":147},{},[148],{"type":19,"tag":59,"props":149,"children":150},{},[151,153],{"type":24,"value":152},"server-side에서 middleware 동작\n",{"type":19,"tag":137,"props":154,"children":155},{},[156,161],{"type":19,"tag":59,"props":157,"children":158},{},[159],{"type":24,"value":160},"이때 server-side에서는 localstorage에 접근을 못하니까 authStore 정보를 못 얻어온다.",{"type":19,"tag":59,"props":162,"children":163},{},[164],{"type":24,"value":165},"navigateTo(’/login’)이 실행된다.",{"type":19,"tag":59,"props":167,"children":168},{},[169,171],{"type":24,"value":170},"login 페이지 접근\n",{"type":19,"tag":137,"props":172,"children":173},{},[174],{"type":19,"tag":59,"props":175,"children":176},{},[177,179],{"type":24,"value":178},"server-side에서 middleware가 동작\n",{"type":19,"tag":137,"props":180,"children":181},{},[182,187],{"type":19,"tag":59,"props":183,"children":184},{},[185],{"type":24,"value":186},"마찬가지로 server-side에서는 localstorage에 접근을 못하니까 authStore 정보를 못 얻어온다.",{"type":19,"tag":59,"props":188,"children":189},{},[190],{"type":24,"value":165},{"type":19,"tag":59,"props":192,"children":193},{},[194],{"type":24,"value":195},"같은 페이지로 리다이렉트 됐기 때문에 더이상 ssr은 실행되지 않고 csr이 실행된다.",{"type":19,"tag":59,"props":197,"children":198},{},[199,201],{"type":24,"value":200},"login 화면이 렌더링\n",{"type":19,"tag":137,"props":202,"children":203},{},[204],{"type":19,"tag":59,"props":205,"children":206},{},[207,209],{"type":24,"value":208},"client-side에서 middleware 동작\n",{"type":19,"tag":137,"props":210,"children":211},{},[212,217,222],{"type":19,"tag":59,"props":213,"children":214},{},[215],{"type":24,"value":216},"csr에서는 localstorage에 접근이 가능하기 때문에 authStore 정보를 얻어옴",{"type":19,"tag":59,"props":218,"children":219},{},[220],{"type":24,"value":221},"nonAuthPages에 포함됨",{"type":19,"tag":59,"props":223,"children":224},{},[225],{"type":24,"value":226},"navigateTo(’dashboard’)이 실행된다.",{"type":19,"tag":59,"props":228,"children":229},{},[230],{"type":24,"value":231},"dashboard 화면이 렌더링 (client-side에서 middleware 동작은 생략)",{"type":19,"tag":20,"props":233,"children":234},{},[235],{"type":24,"value":29},{"type":19,"tag":237,"props":238,"children":239},"blockquote",{},[240],{"type":19,"tag":20,"props":241,"children":242},{},[243,245,251,253,257,259,264],{"type":24,"value":244},"SSR 환경에서의 ",{"type":19,"tag":44,"props":246,"children":248},{"className":247},[],[249],{"type":24,"value":250},"navigateTo",{"type":24,"value":252},"는 먼저 서버 측에서 처리되고 그 후 클라이언트 측에서 렌더링된다.",{"type":19,"tag":254,"props":255,"children":256},"br",{},[],{"type":24,"value":258},"\n반면, CSR 환경에서의 ",{"type":19,"tag":44,"props":260,"children":262},{"className":261},[],[263],{"type":24,"value":250},{"type":24,"value":265},"는 클라이언트 측에서만 처리되며, 서버 측 처리는 발생하지 않는다.",{"type":19,"tag":20,"props":267,"children":268},{},[269],{"type":24,"value":29},{"type":19,"tag":271,"props":272,"children":274},"img",{"src":273},"/images/37d44552-b367-443c-8235-74fb90102f56.png",[],{"type":19,"tag":276,"props":277,"children":278},"hr",{},[],{"title":8,"searchDepth":72,"depth":72,"links":280},[281],{"id":132,"depth":72,"text":135},"content:posts:9ecb10c2-fa24-449c-ac39-8553ee942084.md","posts/9ecb10c2-fa24-449c-ac39-8553ee942084.md",{"_path":285,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":286,"description":8,"tags":287,"date":288,"body":289,"_type":75,"_id":304,"_source":77,"_file":305,"_extension":79},"/posts/ef65e77b-7018-4854-8ba1-e14fc2a8fba9","Property \"query\" was accessed during render but is not defined on instance",[12],"2024-01-05T00:00:00.000Z",{"type":16,"children":290,"toc":302},[291],{"type":19,"tag":36,"props":292,"children":297},{"className":293,"code":295,"language":296,"meta":8},[294],"language-css","// AS-IS\nconst { query } = defineProps();\n\n// TO-BE\nconst { query } = defineProps(['query']);\n\n","css",[298],{"type":19,"tag":44,"props":299,"children":300},{"__ignoreMap":8},[301],{"type":24,"value":295},{"title":8,"searchDepth":72,"depth":72,"links":303},[],"content:posts:ef65e77b-7018-4854-8ba1-e14fc2a8fba9.md","posts/ef65e77b-7018-4854-8ba1-e14fc2a8fba9.md",{"_path":307,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":308,"description":309,"tags":310,"date":311,"body":312,"_type":75,"_id":389,"_source":77,"_file":390,"_extension":79},"/posts/d35aaedb-0f64-4f7f-8c76-97e2069cbadd","nuxt3 정적 사이트 github page에서 js파일들 404에러 날때","githubpage에 generage해서 올렸는데 자꾸 에러가 나는거다… 이유를 몰라서 밤새 검색했는데도 답이 안나오고",[12],"2024-01-03T00:00:00.000Z",{"type":16,"children":313,"toc":387},[314,318,322,326,331,340,344,349,360,364,369,374,378,383],{"type":19,"tag":20,"props":315,"children":316},{},[317],{"type":24,"value":309},{"type":19,"tag":271,"props":319,"children":321},{"src":320},"/images/5d36725a-8fde-4f74-83a6-b27cfd2fc268.png",[],{"type":19,"tag":20,"props":323,"children":324},{},[325],{"type":24,"value":29},{"type":19,"tag":20,"props":327,"children":328},{},[329],{"type":24,"value":330},"결국 nuxt github issue에서 찾았다 ㅠㅠ",{"type":19,"tag":20,"props":332,"children":333},{},[334],{"type":19,"tag":63,"props":335,"children":338},{"href":336,"rel":337},"https://github.com/nuxt/nuxt/issues/10113",[67],[339],{"type":24,"value":336},{"type":19,"tag":20,"props":341,"children":342},{},[343],{"type":24,"value":29},{"type":19,"tag":20,"props":345,"children":346},{},[347],{"type":24,"value":348},".nojeklly",{"type":19,"tag":36,"props":350,"children":355},{"className":351,"code":353,"language":354,"meta":8},[352],"language-json","\"deploy\": \"nuxt generate && touch .output/public/.nojekyll && gh-pages --dotfiles -d .output/public”\n","json",[356],{"type":19,"tag":44,"props":357,"children":358},{"__ignoreMap":8},[359],{"type":24,"value":353},{"type":19,"tag":20,"props":361,"children":362},{},[363],{"type":24,"value":29},{"type":19,"tag":20,"props":365,"children":366},{},[367],{"type":24,"value":368},"결론은 generate하고 프로젝트 폴더안에 .nojekyll 파일이 있어야 되는거였다. (github page는 기본적으로 jekyll이라는 정적 사이트 생성기를 사용함)",{"type":19,"tag":20,"props":370,"children":371},{},[372],{"type":24,"value":373},".nojekyll 파일이 있으면 github 페이지는 jekyll 처리를 건너뜀.",{"type":19,"tag":20,"props":375,"children":376},{},[377],{"type":24,"value":29},{"type":19,"tag":20,"props":379,"children":380},{},[381],{"type":24,"value":382},"오늘의 개발 교훈: github issue를 잘 찾아보자!",{"type":19,"tag":20,"props":384,"children":385},{},[386],{"type":24,"value":29},{"title":8,"searchDepth":72,"depth":72,"links":388},[],"content:posts:d35aaedb-0f64-4f7f-8c76-97e2069cbadd.md","posts/d35aaedb-0f64-4f7f-8c76-97e2069cbadd.md",1706169827467]